{
	"keys": {
		"vs/code/node/cliProcessMain": [
			"notFound",
			"notInstalled",
			"useId",
			"successVsixInstall",
			"alreadyInstalled",
			"foundExtension",
			"installing",
			"successInstall",
			"uninstalling",
			"successUninstall"
		],
		"vs/editor/contrib/inspectTMScopes/electron-browser/inspectTMScopes": [
			"inspectTMScopes",
			"inspectTMScopesWidget.loading"
		],
		"vs/platform/actions/electron-browser/menusExtensionPoint": [
			"requirearray",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.menuItem.command",
			"vscode.extension.contributes.menuItem.alt",
			"vscode.extension.contributes.menuItem.when",
			"vscode.extension.contributes.menuItem.group",
			"vscode.extension.contributes.menus",
			"menus.commandPalette",
			"menus.editorTitle",
			"menus.editorContext",
			"menus.explorerContext",
			"menus.editorTabContext",
			"menus.debugCallstackContext",
			"menus.scmTitle",
			"menus.resourceGroupContext",
			"menus.resourceStateContext",
			"nonempty",
			"requirestring",
			"opticon",
			"requireStringOrObject",
			"requirestring",
			"requirestrings",
			"vscode.extension.contributes.commandType.command",
			"vscode.extension.contributes.commandType.title",
			"vscode.extension.contributes.commandType.category",
			"vscode.extension.contributes.commandType.icon",
			"vscode.extension.contributes.commandType.icon.light",
			"vscode.extension.contributes.commandType.icon.dark",
			"vscode.extension.contributes.commands",
			"dup",
			"menuId.invalid",
			"missing.command",
			"missing.altCommand",
			"dupe.command",
			"nosupport.altCommand"
		],
		"vs/editor/contrib/accessibility/browser/accessibility": [
			"introMsg",
			"status",
			"tabFocusModeOnMsg",
			"tabFocusModeOnMsgNoKb",
			"tabFocusModeOffMsg",
			"tabFocusModeOffMsgNoKb",
			"outroMsg",
			"ShowAccessibilityHelpAction"
		],
		"vs/workbench/browser/actions/toggleActivityBarVisibility": [
			"toggleActivityBar",
			"view"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"toggleStatusbar",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"toggleSidebar",
			"view"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"toggleEditorGroupLayout",
			"horizontalLayout",
			"verticalLayout",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"toggleLocation",
			"view"
		],
		"vs/workbench/browser/actions/toggleZenMode": [
			"toggleZenMode",
			"view"
		],
		"vs/workbench/parts/preferences/browser/preferences.contribution": [
			"defaultPreferencesEditor",
			"keybindingsEditor",
			"preferences"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditorContribution": [
			"defineKeybinding.start",
			"defineKeybinding.kbLayoutInfoMessage",
			"defineKeybinding.kbLayoutErrorMessage"
		],
		"vs/workbench/browser/actions/configureLocale": [
			"configureLocale",
			"displayLanguage",
			"doc",
			"restart",
			"fail.createSettings",
			"JsonSchema.locale"
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"commandsHandlerDescriptionDefault",
			"gotoLineDescriptionMac",
			"gotoLineDescriptionWin",
			"gotoSymbolDescription",
			"gotoSymbolDescriptionScoped",
			"helpDescription",
			"viewPickerDescription"
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"entryAriaLabel",
			"groupLabel",
			"noResultsFoundInGroup",
			"noOpenedEditors",
			"noResultsFound",
			"noOpenedEditorsAllGroups"
		],
		"vs/workbench/parts/files/browser/fileActions.contribution": [
			"filesCategory",
			"revealInSideBar",
			"acceptLocalChanges",
			"revertLocalChanges"
		],
		"vs/workbench/parts/files/browser/files.contribution": [
			"showExplorerViewlet",
			"explore",
			"view",
			"textFileEditor",
			"binaryFileEditor",
			"filesConfigurationTitle",
			"exclude",
			"files.exclude.boolean",
			"files.exclude.when",
			"associations",
			"encoding",
			"autoGuessEncoding",
			"eol",
			"trimTrailingWhitespace",
			"insertFinalNewline",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.off"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.afterDelay"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.onFocusChange"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.onWindowChange"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "autoSave"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "autoSaveDelay"
			},
			"watcherExclude",
			"hotExit.off",
			"hotExit.onExit",
			"hotExit.onExitAndWindowClose",
			"hotExit",
			"defaultLanguage",
			"editorConfigurationTitle",
			"formatOnSave",
			"explorerConfigurationTitle",
			{
				"key": "openEditorsVisible",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "dynamicHeight",
				"comment": [
					"Open is an adjective"
				]
			},
			"autoReveal",
			"enableDragAndDrop"
		],
		"vs/workbench/parts/search/browser/search.contribution": [
			"showTriggerActions",
			"name",
			"showSearchViewlet",
			"view",
			"findInFiles",
			"openAnythingHandlerDescription",
			"openSymbolDescriptionNormal",
			"searchOutputChannelTitle",
			"searchConfigurationTitle",
			"exclude",
			"exclude.boolean",
			"exclude.when",
			"useRipgrep",
			"useIgnoreFilesByDefault",
			"search.quickOpen.includeSymbols"
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"fileAndTypeResults",
			"fileResults"
		],
		"vs/workbench/parts/scm/electron-browser/scm.contribution": [
			"toggleGitViewlet",
			"source control",
			"toggleSCMViewlet",
			"view"
		],
		"vs/workbench/parts/search/browser/searchViewlet": [
			"moreSearch",
			"searchScope.includes",
			"label.includes",
			"searchScope.excludes",
			"label.excludes",
			"global.searchScope.folders",
			"label.global.excludes",
			"replaceAll.confirmation.title",
			"replaceAll.confirm.button",
			"replaceAll.occurrence.file.message",
			"removeAll.occurrence.file.message",
			"replaceAll.occurrence.files.message",
			"removeAll.occurrence.files.message",
			"replaceAll.occurrences.file.message",
			"removeAll.occurrences.file.message",
			"replaceAll.occurrences.files.message",
			"removeAll.occurrences.files.message",
			"removeAll.occurrence.file.confirmation.message",
			"replaceAll.occurrence.file.confirmation.message",
			"removeAll.occurrence.files.confirmation.message",
			"replaceAll.occurrence.files.confirmation.message",
			"removeAll.occurrences.file.confirmation.message",
			"replaceAll.occurrences.file.confirmation.message",
			"removeAll.occurrences.files.confirmation.message",
			"replaceAll.occurrences.files.confirmation.message",
			"treeAriaLabel",
			"globLabel",
			"searchMaxResultsWarning",
			"searchCanceled",
			"noResultsIncludesExcludes",
			"noResultsIncludes",
			"noResultsExcludes",
			"noResultsFound",
			"rerunSearch.message",
			"rerunSearchInAll.message",
			"openSettings.message",
			"ariaSearchResultsStatus",
			"search.file.result",
			"search.files.result",
			"search.file.results",
			"search.files.results",
			"searchWithoutFolder",
			"openFolder"
		],
		"vs/workbench/parts/scm/electron-browser/scmViewlet": [
			"commitMessage",
			"source control",
			"viewletTitle"
		],
		"vs/workbench/parts/git/electron-browser/git.contribution": [
			"toggleSCMViewlet",
			"git"
		],
		"vs/workbench/parts/git/browser/gitQuickOpen": [
			"refAriaLabel",
			"checkoutBranch",
			"checkoutRemoteBranch",
			"checkoutTag",
			"alreadyCheckedOut",
			{
				"key": "branchAriaLabel",
				"comment": [
					"the branch name"
				]
			},
			"createBranch",
			"noBranches",
			"notValidBranchName"
		],
		"vs/workbench/parts/git/browser/gitActions.contribution": [
			"switchToChangesView",
			"openInEditor",
			"workbenchStage",
			"workbenchUnstage",
			"stageSelectedLines",
			"unstageSelectedLines",
			"revertSelectedLines",
			"confirmRevertMessage",
			"irreversible",
			{
				"key": "revertChangesLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"openChange",
			"openFile",
			"git"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"toggleDebugViewlet",
			"toggleDebugPanel",
			"debug",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugPanel"
			},
			"view",
			"view",
			"debugCategory",
			"debugCommands",
			"debugConfigurationTitle",
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "allowBreakpointsEverywhere"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "openExplorerOnEnd"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "inlineValues"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "hideActionBar"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "launch"
			}
		],
		"vs/workbench/parts/debug/browser/debugQuickOpen": [
			"entryAriaLabel",
			"debugAriaLabel",
			"noConfigurationsMatching",
			"noConfigurationsFound"
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"replAriaLabel",
			"actions.repl.historyPrevious",
			"actions.repl.historyNext",
			{
				"key": "actions.repl.acceptInput",
				"comment": [
					"Apply input from the debug console input box"
				]
			}
		],
		"vs/workbench/parts/debug/browser/debugEditorActions": [
			"toggleBreakpointAction",
			"columnBreakpointAction",
			"columnBreakpoint",
			"conditionalBreakpointEditorAction",
			"runToCursor",
			"debugEvaluate",
			"debugAddToWatch",
			"showDebugHover"
		],
		"vs/workbench/parts/html/browser/html.contribution": [
			"html.editor.label"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution": [
			"walkThrough.editor.label",
			"help",
			"interactivePlayground",
			"interactivePlayground",
			"interactivePlayground",
			"interactivePlayground"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"extensionsCommands",
			"galleryExtensionsCommands",
			"extension",
			"extensions",
			"view",
			"extensionsConfigurationTitle",
			"extensionsAutoUpdate"
		],
		"vs/workbench/parts/extensions/browser/extensionsQuickOpen": [
			"manage",
			"searchFor",
			"noExtensionsToInstall"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"searchExtensions",
			"extensions",
			"sort by installs",
			"sort by rating",
			"sort by name",
			"no extensions found",
			"suggestProxyError",
			"extensions",
			"outdatedExtensions"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution": [
			"workbenchConfigurationTitle",
			"welcomePage.enabled",
			"help"
		],
		"vs/workbench/parts/explorers/browser/treeExplorer.contribution": [
			"vscode.extension.contributes.view",
			"vscode.extension.contributes.view.id",
			"vscode.extension.contributes.view.label",
			"vscode.extension.contributes.view.icon",
			"vscode.extension.contributes.views",
			"showViewlet",
			"view"
		],
		"vs/workbench/parts/output/browser/output.contribution": [
			"output",
			"viewCategory",
			"viewCategory",
			"clearOutput.label"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"outputPanelWithInputAriaLabel",
			"outputPanelAriaLabel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.shell.linux",
			"terminal.integrated.shellArgs.linux",
			"terminal.integrated.shell.osx",
			"terminal.integrated.shellArgs.osx",
			"terminal.integrated.shell.windows",
			"terminal.integrated.shellArgs.windows",
			"terminal.integrated.rightClickCopyPaste",
			"terminal.integrated.fontFamily",
			"terminal.integrated.fontLigatures",
			"terminal.integrated.fontSize",
			"terminal.integrated.lineHeight",
			"terminal.integrated.enableBold",
			"terminal.integrated.cursorBlinking",
			"terminal.integrated.cursorStyle",
			"terminal.integrated.scrollback",
			"terminal.integrated.setLocaleVariables",
			"terminal.integrated.cwd",
			"terminal.integrated.confirmOnExit",
			"terminal.integrated.commandsToSkipShell",
			"terminal",
			"terminalCategory",
			"viewCategory"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"copy",
			"createNewTerminal",
			"paste",
			"clear"
		],
		"vs/workbench/parts/trust/electron-browser/unsupportedWorkspaceSettings.contribution": [
			"unsupportedWorkspaceSettings",
			"openWorkspaceSettings",
			"openDocumentation",
			"ignore"
		],
		"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution": [
			"relaunchMessage",
			"relaunchDetail",
			"restart"
		],
		"vs/workbench/parts/emmet/node/emmet.contribution": [
			"emmetConfigurationTitle",
			"triggerExpansionOnTab",
			"emmetPreferences",
			"emmetSyntaxProfiles",
			"emmetExclude",
			"emmetExtensionsPath"
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"tasksCategory",
			"ConfigureTaskRunnerAction.noWorkspace",
			"ConfigureTaskRunnerAction.quickPick.template",
			"ConfigureTaskRunnerAction.autoDetecting",
			"ConfigureTaskRunnerAction.autoDetect",
			"ConfigureTaskRunnerAction.autoDetectError",
			"ConfigureTaskRunnerAction.failed",
			"ConfigureTaskRunnerAction.label",
			"ConfigureBuildTaskAction.label",
			"CloseMessageAction.label",
			"ShowTerminalAction.label",
			"problems",
			"manyMarkers",
			"tasks",
			"TaskSystem.noHotSwap",
			"TaskService.noBuildTask",
			"TaskService.noTestTask",
			"TaskServer.noTask",
			"TaskSystem.activeSame",
			"TaskSystem.active",
			"TaskSystem.restartFailed",
			"TaskSystem.configurationErrors",
			"TaskSystem.invalidTaskJson",
			"TaskSystem.runningTask",
			{
				"key": "TaskSystem.terminateTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TaskSystem.noProcess",
			{
				"key": "TaskSystem.exitAnyways",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TerminateAction.label",
			"TaskSystem.unknownError",
			"TaskService.noWorkspace",
			"TerminateAction.noProcess",
			"TerminateAction.failed",
			"ShowLogAction.label",
			"RunTaskAction.label",
			"RestartTaskAction.label",
			"TerminateAction.label",
			"BuildAction.label",
			"TestAction.label",
			"quickOpen.task",
			"quickOpen.terminateTask",
			"quickOpen.restartTask"
		],
		"vs/workbench/parts/execution/electron-browser/terminal.contribution": [
			"terminalConfigurationTitle",
			"terminal.external.windowsExec",
			"terminal.external.osxExec",
			"terminal.external.linuxExec",
			"globalConsoleActionWin",
			"globalConsoleActionMacLinux",
			"scopedConsoleActionWin",
			"scopedConsoleActionMacLinux"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"openSnippet.label",
			"openSnippet.pickLanguage",
			"openSnippet.errorOnCreate",
			"preferences",
			"snippetSchema.json.default",
			"snippetSchema.json",
			"snippetSchema.json.prefix",
			"snippetSchema.json.body",
			"snippetSchema.json.description"
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"selectTheme.label",
			"installColorThemes",
			"problemChangingTheme",
			"themes.selectTheme",
			"selectIconTheme.label",
			"installIconThemes",
			"noIconThemeLabel",
			"noIconThemeDesc",
			"problemChangingIconTheme",
			"themes.selectIconTheme",
			"generateColorTheme.label",
			"preferences",
			"developer"
		],
		"vs/workbench/parts/update/electron-browser/update.contribution": [
			"release notes",
			"updateConfigurationTitle",
			"updateChannel"
		],
		"vs/workbench/parts/nps/electron-browser/nps.contribution": [
			"surveyQuestion",
			"takeSurvey",
			"remindLater",
			"neverAgain"
		],
		"vs/workbench/parts/performance/electron-browser/performance.contribution": [
			"slow",
			"slow.detail"
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"install",
			"not available",
			"successIn",
			"warnEscalation",
			"ok",
			"cantCreateBinFolder",
			"cancel2",
			"aborted",
			"uninstall",
			"not available",
			"successFrom",
			"shellCommand"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"view",
			"help",
			"file",
			"showEditorTabs",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "editorTabCloseButton"
			},
			"showIcons",
			"enablePreview",
			"enablePreviewFromQuickOpen",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "editorOpenPositioning"
			},
			"revealIfOpen",
			"closeOnFocusLost",
			"openDefaultSettings",
			"sideBarLocation",
			"statusBarVisibility",
			"activityBarVisibility",
			"closeOnFileDelete",
			"swipeToNavigate",
			"workbenchConfigurationTitle",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFilesInNewWindow.on"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFilesInNewWindow.off"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFilesInNewWindow.default"
			},
			"openFilesInNewWindow",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFoldersInNewWindow.on"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFoldersInNewWindow.off"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.openFoldersInNewWindow.default"
			},
			"openFoldersInNewWindow",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.reopenFolders.none"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.reopenFolders.one"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.reopenFolders.all"
			},
			"reopenFolders",
			"restoreFullscreen",
			"zoomLevel",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by parenthesis are not to be translated."
				],
				"key": "title"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.newWindowDimensions.default"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.newWindowDimensions.inherit"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.newWindowDimensions.maximized"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.newWindowDimensions.fullscreen"
			},
			"newWindowDimensions",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.menuBarVisibility.default"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.menuBarVisibility.visible"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.menuBarVisibility.toggle"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "window.menuBarVisibility.hidden"
			},
			"menuBarVisibility",
			"autoDetectHighContrast",
			"titleBarStyle",
			"window.nativeTabs",
			"windowConfigurationTitle",
			"zenModeConfigurationTitle",
			"zenMode.fullScreen",
			"zenMode.hideTabs",
			"zenMode.hideStatusBar",
			"zenMode.hideActivityBar",
			"zenMode.restore"
		],
		"vs/workbench/electron-browser/main": [
			"loaderError",
			"loaderErrorNative"
		],
		"vs/workbench/parts/watermark/electron-browser/watermark": [
			"watermark.showCommands",
			"watermark.quickOpen",
			"watermark.openFile",
			"watermark.openFolder",
			"watermark.openFileFolder",
			"watermark.openRecent",
			"watermark.newUntitledFile",
			{
				"key": "watermark.toggleTerminal",
				"comment": [
					"toggle is a verb here"
				]
			},
			"watermark.findInFiles",
			"watermark.startDebugging",
			"watermark.selectTheme",
			"watermark.selectKeymap",
			"watermark.keybindingsReference",
			"watermark.openGlobalKeybindings",
			"watermark.unboundCommand",
			"workbenchConfigurationTitle",
			"tips.enabled"
		],
		"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay": [
			"welcomeOverlay.explorer",
			"welcomeOverlay.search",
			"welcomeOverlay.git",
			"welcomeOverlay.debug",
			"welcomeOverlay.extensions",
			"welcomeOverlay.problems",
			"welcomeOverlay.commandPalette",
			"welcomeOverlay",
			"hideWelcomeOverlay",
			"help",
			"help"
		],
		"vs/workbench/node/extensionHostMain": [
			"extensionTestError"
		],
		"vs/platform/environment/node/argv": [
			"gotoValidation",
			"diff",
			"goto",
			"locale",
			"newWindow",
			"performance",
			"prof-startup",
			"reuseWindow",
			"userDataDir",
			"verbose",
			"wait",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"installExtension",
			"uninstallExtension",
			"experimentalApis",
			"disableExtensions",
			"disableGPU",
			"version",
			"help",
			"usage",
			"options",
			"paths",
			"optionsUpperCase"
		],
		"vs/platform/request/node/request": [
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyAuthorization"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions",
			"preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"invalidManifest",
			"restartCode",
			"restartCode",
			"installDependeciesConfirmation",
			"install",
			"doNotInstall",
			"restartCode",
			"uninstallDependeciesConfirmation",
			"uninstallOnly",
			"uninstallAll",
			"cancel",
			"uninstallConfirmation",
			"ok",
			"cancel",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"notExists"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"notFound",
			"noCompatible"
		],
		"vs/platform/message/common/message": [
			"close",
			"later",
			"cancel"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry"
		],
		"vs/base/common/severity": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/editor/contrib/caretOperations/common/caretOperations": [
			"caret.moveLeft",
			"caret.moveRight"
		],
		"vs/editor/browser/widget/diffEditorWidget": [
			"diffEditorInserted",
			"diffEditorRemoved",
			"diffEditorInsertedOutline",
			"diffEditorRemovedOutline"
		],
		"vs/editor/contrib/caretOperations/common/transpose": [
			"transposeLetters.label"
		],
		"vs/editor/contrib/bracketMatching/common/bracketMatching": [
			"smartSelect.jumpBracket"
		],
		"vs/editor/contrib/comment/common/comment": [
			"comment.line",
			"comment.line.add",
			"comment.line.remove",
			"comment.block"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"action.showContextMenu.label"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			"actions.clipboard.cutLabel",
			"actions.clipboard.copyLabel",
			"actions.clipboard.pasteLabel",
			"actions.clipboard.copyWithSyntaxHighlightingLabel"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"unfoldAction.label",
			"unFoldRecursivelyAction.label",
			"foldAction.label",
			"foldRecursivelyAction.label",
			"foldAllAction.label",
			"unfoldAllAction.label",
			"foldLevelAction.label"
		],
		"vs/editor/contrib/format/browser/formatActions": [
			"hint11",
			"hintn1",
			"hint1n",
			"hintnn",
			"formatDocument.label",
			"formatSelection.label"
		],
		"vs/editor/contrib/goToDeclaration/browser/goToDeclaration": [
			"noResultWord",
			"generic.noResults",
			"meta.title",
			"actions.goToDecl.label",
			"actions.goToDeclToSide.label",
			"actions.previewDecl.label",
			"goToImplementation.noResultWord",
			"goToImplementation.generic.noResults",
			"meta.implementations.title",
			"actions.goToImplementation.label",
			"actions.peekImplementation.label",
			"goToTypeDefinition.noResultWord",
			"goToTypeDefinition.generic.noResults",
			"meta.typeDefinitions.title",
			"actions.goToTypeDefinition.label",
			"actions.peekTypeDefinition.label",
			"multipleResults"
		],
		"vs/editor/contrib/hover/browser/hover": [
			"showHover",
			"hoverHighlight",
			"hoverBackground",
			"hoverBorder"
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"title.wo_source",
			"markerAction.next.label",
			"markerAction.previous.label",
			"editorMarkerNavigationError",
			"editorMarkerNavigationWarning",
			"editorMarkerNavigationBackground"
		],
		"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace": [
			"InPlaceReplaceAction.previous.label",
			"InPlaceReplaceAction.next.label"
		],
		"vs/editor/contrib/linesOperations/common/linesOperations": [
			"lines.copyUp",
			"lines.copyDown",
			"lines.moveUp",
			"lines.moveDown",
			"lines.sortAscending",
			"lines.sortDescending",
			"lines.trimTrailingWhitespace",
			"lines.delete",
			"lines.indent",
			"lines.outdent",
			"lines.insertBefore",
			"lines.insertAfter",
			"lines.deleteAllLeft",
			"lines.deleteAllRight",
			"lines.joinLines",
			"editor.transpose",
			"editor.transformToUppercase",
			"editor.transformToLowercase"
		],
		"vs/editor/contrib/links/browser/links": [
			"links.navigate.mac",
			"links.navigate",
			"invalid.url",
			"missing.url",
			"label"
		],
		"vs/editor/contrib/multicursor/common/multicursor": [
			"mutlicursor.insertAbove",
			"mutlicursor.insertBelow",
			"mutlicursor.insertAtEndOfEachLineSelected"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"parameterHints.trigger.label"
		],
		"vs/editor/contrib/quickFix/browser/quickFixCommands": [
			"quickFixWithKb",
			"quickFix",
			"quickfix.trigger.label"
		],
		"vs/editor/contrib/referenceSearch/browser/referenceSearch": [
			"meta.titleReference",
			"references.action.label"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"no result",
			"aria",
			"rename.failed",
			"rename.label"
		],
		"vs/editor/contrib/smartSelect/common/smartSelect": [
			"smartSelect.grow",
			"smartSelect.shrink"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"arai.alert.snippet",
			"suggest.trigger.label"
		],
		"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode": [
			{
				"key": "toggle.tabMovesFocus",
				"comment": [
					"Turn on/off use of tab key for moving focus around VS Code"
				]
			}
		],
		"vs/editor/contrib/wordHighlighter/common/wordHighlighter": [
			"wordHighlight",
			"wordHighlightStrong"
		],
		"vs/platform/extensions/common/extensionsRegistry": [
			"vscode.extension.engines.vscode",
			"vscode.extension.publisher",
			"vscode.extension.displayName",
			"vscode.extension.categories",
			"vscode.extension.galleryBanner",
			"vscode.extension.galleryBanner.color",
			"vscode.extension.galleryBanner.theme",
			"vscode.extension.contributes",
			"vscode.extension.preview",
			"vscode.extension.activationEvents",
			"vscode.extension.badges",
			"vscode.extension.badges.url",
			"vscode.extension.badges.href",
			"vscode.extension.badges.description",
			"vscode.extension.extensionDependencies",
			"vscode.extension.scripts.prepublish",
			"vscode.extension.icon"
		],
		"vs/editor/common/config/commonEditorConfig": [
			"editorConfigurationTitle",
			"fontFamily",
			"fontWeight",
			"fontSize",
			"lineHeight",
			"lineNumbers",
			"rulers",
			"wordSeparators",
			"tabSize",
			"tabSize.errorMessage",
			"insertSpaces",
			"insertSpaces.errorMessage",
			"detectIndentation",
			"roundedSelection",
			"scrollBeyondLastLine",
			"minimap.enabled",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"wrappingIndent",
			"mouseWheelScrollSensitivity",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"quickSuggestionsDelay",
			"parameterHints",
			"autoClosingBrackets",
			"formatOnType",
			"formatOnPaste",
			"suggestOnTriggerCharacters",
			"acceptSuggestionOnEnter",
			"acceptSuggestionOnCommitCharacter",
			"snippetSuggestions",
			"emptySelectionClipboard",
			"wordBasedSuggestions",
			"suggestFontSize",
			"suggestLineHeight",
			"selectionHighlight",
			"occurrencesHighlight",
			"overviewRulerLanes",
			"overviewRulerBorder",
			"cursorBlinking",
			"mouseWheelZoom",
			"cursorStyle",
			"fontLigatures",
			"hideCursorInOverviewRuler",
			"renderWhitespace",
			"renderControlCharacters",
			"renderIndentGuides",
			"renderLineHighlight",
			"codeLens",
			"folding",
			"matchBrackets",
			"glyphMargin",
			"useTabStops",
			"trimAutoWhitespace",
			"stablePeek",
			"dragAndDrop",
			"sideBySide",
			"ignoreTrimWhitespace",
			"renderIndicators",
			"selectionClipboard"
		],
		"vs/platform/theme/common/colorRegistry": [
			"invalid.color",
			"schema.colors",
			"foreground",
			"focusBorder",
			"contrastBorder",
			"activeContrastBorder",
			"widgetShadow",
			"inputBoxBackground",
			"inputBoxForeground",
			"inputBoxBorder",
			"inputBoxActiveOptionBorder",
			"inputValidationInfoBackground",
			"inputValidationInfoBorder",
			"inputValidationWarningBackground",
			"inputValidationWarningBorder",
			"inputValidationErrorBackground",
			"inputValidationErrorBorder",
			"dropdownBackground",
			"dropdownForeground",
			"dropdownBorder",
			"listFocusBackground",
			"listActiveSelectionBackground",
			"listInactiveSelectionBackground",
			"listActiveSelectionForeground",
			"listHoverBackground",
			"listDropBackground",
			"highlight",
			"pickerGroupForeground",
			"pickerGroupBorder",
			"buttonForeground",
			"buttonBackground",
			"buttonHoverBackground",
			"scrollbarShadow",
			"scrollbarSliderBackground",
			"scrollbarSliderHoverBackground",
			"scrollbarSliderActiveBackground",
			"editorBackground",
			"editorForeground",
			"editorSelection",
			"editorInactiveSelection",
			"editorSelectionHighlight",
			"editorFindMatch",
			"findMatchHighlight",
			"findRangeHighlight",
			"activeLinkForeground",
			"editorWidgetBackground"
		],
		"vs/workbench/parts/preferences/browser/preferencesEditor": [
			"settingsEditorName",
			"SearchSettingsWidget.AriaLabel",
			"SearchSettingsWidget.Placeholder",
			"totalSettingsMessage",
			"noSettingsFound",
			"oneSettingFound",
			"settingsFound",
			"preferencesAriaLabel"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditor": [
			"keybindingsInputName",
			"SearchKeybindings.AriaLabel",
			"SearchKeybindings.Placeholder",
			"sortByPrecedene",
			"header-message",
			"keybindings-file-name",
			"keybindingsLabel",
			"changeLabel",
			"addLabel",
			"removeLabel",
			"resetLabel",
			"showConflictsLabel",
			"copyLabel",
			"error",
			"command",
			"keybinding",
			"source",
			"when",
			"editKeybindingLabelWithKey",
			"editKeybindingLabel",
			"addKeybindingLabelWithKey",
			"addKeybindingLabel",
			"commandAriaLabel",
			"keybindingAriaLabel",
			"noKeybinding",
			"sourceAriaLabel",
			"whenAriaLabel",
			"noWhen"
		],
		"vs/workbench/parts/preferences/browser/preferencesActions": [
			"openGlobalSettings",
			"openGlobalKeybindings",
			"openGlobalKeybindingsFile",
			"openWorkspaceSettings",
			"configureLanguageBasedSettings",
			"languageDescriptionConfigured",
			"pickLanguage"
		],
		"vs/workbench/parts/preferences/browser/preferencesService": [
			"openFolderFirst",
			"emptyKeybindingsHeader",
			"defaultKeybindings",
			"emptySettingsHeader",
			"emptySettingsHeader1",
			"fail.createSettings"
		],
		"vs/workbench/parts/preferences/browser/keybindingWidgets": [
			"defineKeybinding.initial",
			"defineKeybinding.chordsTo"
		],
		"vs/workbench/parts/preferences/browser/preferencesWidgets": [
			"settingsSwitcherBarAriaLabel",
			"userSettings",
			"workspaceSettings"
		],
		"vs/base/common/json": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		],
		"vs/workbench/browser/quickopen": [
			"noResultsMatching",
			"noResultsFound2",
			"entryAriaLabel",
			"noCommands"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"gotoSymbol",
			"symbols",
			"method",
			"function",
			"_constructor",
			"variable",
			"class",
			"interface",
			"namespace",
			"package",
			"modules",
			"property",
			"enum",
			"string",
			"rule",
			"file",
			"array",
			"number",
			"boolean",
			"object",
			"key",
			"entryAriaLabel",
			"noSymbolsMatching",
			"noSymbolsFound",
			"gotoSymbolHandlerAriaLabel",
			"cannotRunGotoSymbolInFile",
			"cannotRunGotoSymbol"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"showTriggerActions",
			"entryAriaLabelWithKey",
			"entryAriaLabel",
			"canNotRun",
			"actionNotEnabled",
			"actionNotEnabled",
			"commandLabel",
			"cat.title",
			"noCommandsMatching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"gotoLine",
			"gotoLineLabelEmptyWithLimit",
			"gotoLineLabelEmpty",
			"gotoLineColumnLabel",
			"gotoLineLabel",
			"gotoLineHandlerAriaLabel",
			"cannotRunGotoLine"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"entryAriaLabel",
			"globalCommands",
			"editorCommands"
		],
		"vs/workbench/parts/quickopen/browser/viewPickerHandler": [
			"entryAriaLabel",
			"views",
			"panels",
			"terminals",
			"terminalTitle",
			"channels",
			"openView",
			"quickOpenView"
		],
		"vs/workbench/browser/viewlet": [
			"collapse",
			"viewToolbarAriaLabel",
			"viewToolbarAriaLabel"
		],
		"vs/workbench/parts/files/browser/views/explorerViewer": [
			"fileInputAriaLabel",
			"filesExplorerViewerAriaLabel",
			"confirmOverwriteMessage",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/workbench/parts/files/browser/views/explorerView": [
			"explorerSection",
			"treeAriaLabel"
		],
		"vs/workbench/parts/files/browser/views/emptyView": [
			"explorerSection",
			"noWorkspace",
			"noWorkspaceHelp",
			"openFolder"
		],
		"vs/workbench/parts/files/browser/views/openEditorsView": [
			{
				"key": "openEditosrSection",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "openEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "treeAriaLabel",
				"comment": [
					"Open is an adjective"
				]
			},
			"dirtyCounter"
		],
		"vs/workbench/services/editor/browser/editorService": [
			"compareLabels"
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"quickOpenAriaLabelEntry",
			"quickOpenAriaLabel"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			{
				"key": "titleLabel",
				"comment": [
					"action title",
					"action keybinding"
				]
			}
		],
		"vs/workbench/parts/files/browser/fileActions": [
			"retry",
			"rename",
			"rename",
			"newFile",
			"newFolder",
			"openFolderFirst",
			"newUntitledFile",
			"newFile",
			"newFolder",
			"createNewFile",
			"createNewFolder",
			"deleteButtonLabelRecycleBin",
			{
				"key": "deleteButtonLabelTrash",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "deleteButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"dirtyMessageFolderOneDelete",
			"dirtyMessageFolderDelete",
			"dirtyMessageFileDelete",
			"dirtyWarning",
			"confirmMoveTrashMessageFolder",
			"confirmMoveTrashMessageFile",
			"undoBin",
			"undoTrash",
			"confirmDeleteMessageFolder",
			"confirmDeleteMessageFile",
			"irreversible",
			"permDelete",
			"delete",
			"importFiles",
			"confirmOverwrite",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"copyFile",
			"pasteFile",
			"duplicateFile",
			"openToSide",
			"compareSource",
			"globalCompareFile",
			"pickHistory",
			"unableToFileToCompare",
			"openFileToCompare",
			"compareWith",
			"compareFiles",
			"refresh",
			"save",
			"saveAs",
			"saveAll",
			"saveAllInGroup",
			"saveFiles",
			"revert",
			{
				"key": "focusOpenEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			"focusFilesExplorer",
			"showInExplorer",
			"openFileToShow",
			"collapseExplorerFolders",
			"refreshExplorer",
			"openFile",
			"openFileInNewWindow",
			"openFileToShowInNewWindow",
			"revealInWindows",
			"revealInMac",
			"openContainer",
			"revealActiveFileInWindows",
			"revealActiveFileInMac",
			"openActiveFileContainer",
			"copyPath",
			"copyPathOfActive",
			"emptyFileNameError",
			"fileNameExistsError",
			"invalidFileNameError",
			"filePathTooLongError"
		],
		"vs/workbench/parts/files/browser/saveErrorHandler": [
			"discard",
			"overwrite",
			"retry",
			"readonlySaveError",
			"genericSaveError",
			"staleSaveError",
			"compareChanges",
			"saveConflictDiffLabel",
			"userGuide"
		],
		"vs/workbench/browser/actions/fileActions": [
			"openFolder",
			"openFileFolder"
		],
		"vs/workbench/parts/files/browser/fileCommands": [
			"openFileToCopy",
			"openFileToReveal"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultConfigurations.title",
			"overrideSettings.description",
			"overrideSettings.defaultDescription",
			"vscode.extension.contributes.configuration",
			"vscode.extension.contributes.configuration.title",
			"vscode.extension.contributes.configuration.properties",
			"config.property.languageDefault",
			"config.property.duplicate",
			"invalid.properties",
			"invalid.type",
			"invalid.title",
			"vscode.extension.contributes.defaultConfiguration"
		],
		"vs/workbench/parts/files/common/editors/fileEditorInput": [
			"orphanedFile"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"textFileEditor",
			"createFile",
			"fileEditorWithInputAriaLabel",
			"fileEditorAriaLabel"
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"binaryFileEditor"
		],
		"vs/workbench/parts/files/common/dirtyFilesTracker": [
			"dirtyFiles"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"nextSearchTerm",
			"previousSearchTerm",
			"focusNextInputBox",
			"focusPreviousInputBox",
			"replaceInFiles",
			"findInFolder",
			"RefreshAction.label",
			"ClearSearchResultsAction.label",
			"FocusNextSearchResult.label",
			"FocusPreviousSearchResult.label",
			"RemoveAction.label",
			"file.replaceAll.label",
			"match.replace.label",
			"ConfigureGlobalExclusionsAction.label"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"search.action.replaceAll.disabled.label",
			"search.action.replaceAll.enabled.label",
			"search.replace.toggle.button.title",
			"label.Search",
			"search.placeHolder",
			"label.Replace",
			"search.replace.placeHolder",
			"regexp.validationFailure"
		],
		"vs/workbench/parts/output/common/output": [
			"output",
			"channel"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"entryAriaLabel",
			"symbols",
			"noSymbolsMatching",
			"noSymbolsWithoutInput"
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"entryAriaLabel",
			"searchResults"
		],
		"vs/workbench/parts/scm/electron-browser/scmActivity": [
			"scmPendingChangesBadge"
		],
		"vs/base/browser/ui/aria/aria": [
			"repeated"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"defaultLabel"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"searchMatches",
			"searchMatch",
			"fileMatchAriaLabel",
			"replacePreviewResultAria",
			"searchResultAria"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"defaultLabel",
			"patternDescription",
			"patternHelpInclude",
			"useIgnoreFilesDescription",
			"useExcludeSettingsDescription"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"titleAndKb"
		],
		"vs/workbench/parts/scm/electron-browser/scmMenus": [
			"switch provider"
		],
		"vs/workbench/parts/git/browser/gitWorkbenchContributions": [
			"gitProgressBadge",
			"gitPendingChangesBadge",
			"toggleGitViewlet",
			"git",
			"git",
			"view",
			"gitCommands",
			"gitConfigurationTitle",
			"gitEnabled",
			"gitPath",
			"gitAutoRefresh",
			"gitAutoFetch",
			"gitLongCommit",
			"gitLargeRepos",
			"confirmSync",
			"countBadge",
			"checkoutType"
		],
		"vs/workbench/parts/git/electron-browser/gitActions": [
			"valid",
			"url",
			"valid",
			"directory",
			"cloning",
			"already exists"
		],
		"vs/workbench/parts/git/browser/views/changes/changesView": [
			"needMessage",
			"nothingToCommit",
			"longCommit",
			"commitMessage",
			"commitMessageAriaLabel",
			"treeAriaLabel",
			"showOutput"
		],
		"vs/workbench/parts/git/browser/views/empty/emptyView": [
			"noGit",
			"gitinit"
		],
		"vs/workbench/parts/git/browser/views/gitless/gitlessView": [
			"macInstallWith",
			"winInstallWith",
			"linuxDownloadFrom",
			"downloadFrom",
			"looksLike",
			"pleaseRestart"
		],
		"vs/workbench/parts/git/browser/views/notroot/notrootView": [
			"wrongRoot",
			"pleaseRestart"
		],
		"vs/workbench/parts/git/browser/views/disabled/disabledView": [
			"disabled"
		],
		"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView": [
			"noWorkspaceHelp",
			"pleaseRestart",
			"openFolder"
		],
		"vs/workbench/parts/git/browser/views/huge/hugeView": [
			"huge",
			"setting",
			"allo"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"textDiffEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"editableEditorWithInputAriaLabel",
			"editableEditorAriaLabel",
			"navigate.next.label",
			"navigate.prev.label",
			"inlineDiffLabel",
			"sideBySideDiffLabel"
		],
		"vs/workbench/browser/parts/editor/textEditor": [
			"editorLabelWithGroup"
		],
		"vs/workbench/parts/git/browser/gitActions": [
			"openChange",
			"openFile",
			"init",
			"refresh",
			"stageChanges",
			"stageAllChanges",
			"confirmUndoMessage",
			"confirmUndoAllOne",
			"confirmUndoAllMultiple",
			{
				"key": "cleanChangesLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmUndo",
			"irreversible",
			{
				"key": "cleanChangesLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"undoChanges",
			"undoAllChanges",
			"unstage",
			"unstageAllChanges",
			"dirtyTreeCheckout",
			"commitStaged",
			"commitStagedAmend",
			"commitStagedSignedOff",
			"commit",
			"commitMessage",
			"commitAll",
			"commitAllSignedOff",
			"commitAll2",
			"commitStaged2",
			"dirtyTreePull",
			"authFailed",
			"authFailed",
			"pushToRemote",
			"pushToRemotePickMessage",
			"authFailed",
			"publish",
			"confirmPublishMessage",
			{
				"key": "confirmPublishMessageButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"publishPickMessage",
			"authFailed",
			"sync is unpredictable",
			"ok",
			"cancel",
			"never again",
			"authFailed",
			"undoLastCommit"
		],
		"vs/workbench/parts/debug/electron-browser/debugViews": [
			"variablesSection",
			"variables",
			"variablesAriaTreeLabel",
			"expressionsSection",
			"watch",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "watchAriaTreeLabel"
			},
			"callstackSection",
			"debugStopped",
			"callStack",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "callStackAriaLabel"
			},
			"breakpointsSection",
			"breakpoints",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "breakpointsAriaTreeLabel"
			}
		],
		"vs/workbench/parts/debug/browser/debugEditorModelManager": [
			"breakpointDisabledHover",
			"breakpointUnverifieddHover",
			"breakpointDirtydHover",
			"breakpointUnsupported"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"openLaunchJson",
			"launchJsonNeedsConfigurtion",
			"startDebug",
			"startWithoutDebugging",
			"selectAndStartDebugging",
			"restartDebug",
			"reconnectDebug",
			"stepOverDebug",
			"stepIntoDebug",
			"stepOutDebug",
			"stopDebug",
			"disconnectDebug",
			"continueDebug",
			"pauseDebug",
			"restartFrame",
			"removeBreakpoint",
			"removeAllBreakpoints",
			"enableBreakpoint",
			"disableBreakpoint",
			"enableAllBreakpoints",
			"disableAllBreakpoints",
			"activateBreakpoints",
			"deactivateBreakpoints",
			"reapplyAllBreakpoints",
			"addFunctionBreakpoint",
			"renameFunctionBreakpoint",
			"addConditionalBreakpoint",
			"editConditionalBreakpoint",
			"setValue",
			"addWatchExpression",
			"editWatchExpression",
			"addToWatchExpressions",
			"removeWatchExpression",
			"removeAllWatchExpressions",
			"clearRepl",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugConsoleAction"
			},
			"unreadOutput",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusConsole"
			},
			"focusProcess",
			"stepBackDebug",
			"reverseContinue"
		],
		"vs/workbench/parts/debug/browser/debugActionsWidget": [
			"debugToolBarBackground"
		],
		"vs/workbench/parts/debug/browser/debugContentProvider": [
			"unable"
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"snapshotObj",
			"debuggingStarted",
			"debuggingPaused",
			"debuggingStopped",
			"breakpointAdded",
			"breakpointRemoved",
			{
				"key": "compoundMustHaveConfigurations",
				"comment": [
					"compound indicates a \"compounds\" configuration item",
					"\"configurations\" is an attribute and should not be localized"
				]
			},
			"configMissing",
			"debugTypeNotSupported",
			"debugTypeMissing",
			"preLaunchTaskErrors",
			"preLaunchTaskError",
			"preLaunchTaskExitCode",
			"debugAnyway",
			"noFolderWorkspaceDebugError",
			"NewLaunchConfig",
			"DebugTaskNotFound",
			"differentTaskRunning"
		],
		"vs/workbench/parts/debug/electron-browser/statusbarColorProvider": [
			"statusBarDebuggingBackground"
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"removeBreakpoints",
			"removeBreakpointOnColumn",
			"removeLineBreakpoint",
			"editBreakpoints",
			"editBreakpointOnColumn",
			"editLineBrekapoint",
			"enableDisableBreakpoints",
			"disableColumnBreakpoint",
			"disableBreakpointOnLine",
			"enableBreakpoints",
			"enableBreakpointOnLine",
			"addBreakpoint",
			"addConfiguration"
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"stateCapture",
			"fileLinkMac",
			"fileLink",
			"replVariableAriaLabel",
			"replExpressionAriaLabel",
			"replValueOutputAriaLabel",
			"replKeyValueOutputAriaLabel"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"addConfiguration",
			"noConfigurations"
		],
		"vs/workbench/parts/markers/electron-browser/markersElectronContributions": [
			"copyMarker"
		],
		"vs/workbench/parts/markers/common/messages": [
			"viewCategory",
			"problems.view.show.label",
			"problems.panel.configuration.title",
			"problems.panel.configuration.autoreveal",
			"markers.panel.title.problems",
			"markers.panel.aria.label.problems.tree",
			"markers.panel.no.problems.build",
			"markers.panel.no.problems.filters",
			"markers.panel.action.filter",
			"markers.panel.filter.placeholder",
			"markers.panel.filter.errors",
			"markers.panel.filter.warnings",
			"markers.panel.filter.infos",
			"markers.panel.single.error.label",
			"markers.panel.multiple.errors.label",
			"markers.panel.single.warning.label",
			"markers.panel.multiple.warnings.label",
			"markers.panel.single.info.label",
			"markers.panel.multiple.infos.label",
			"markers.panel.single.unknown.label",
			"markers.panel.multiple.unknowns.label",
			"markers.panel.at.ln.col.number",
			"problems.tree.aria.label.resource",
			"problems.tree.aria.label.error.marker",
			"problems.tree.aria.label.error.marker.nosource",
			"problems.tree.aria.label.warning.marker",
			"problems.tree.aria.label.warning.marker.nosource",
			"problems.tree.aria.label.info.marker",
			"problems.tree.aria.label.info.marker.nosource",
			"problems.tree.aria.label.marker",
			"problems.tree.aria.label.marker.nosource",
			"errors.warnings.show.label"
		],
		"vs/workbench/parts/html/browser/htmlPreviewPart": [
			"html.voidInput"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart": [
			"walkThrough.unboundCommand",
			"walkThrough.gitNotFound"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughActions": [
			"editorWalkThrough.arrowUp",
			"editorWalkThrough.arrowDown",
			"editorWalkThrough.pageUp",
			"editorWalkThrough.pageDown"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough": [
			"editorWalkThrough",
			"editorWalkThrough.title"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"reallyRecommended2",
			"showRecommendations",
			"neverShowAgain",
			"close",
			"workspaceRecommended",
			"showRecommendations",
			"neverShowAgain",
			"close"
		],
		"vs/workbench/parts/extensions/node/extensionsWorkbenchService": [
			"enableDependeciesConfirmation",
			"enable",
			"doNotEnable",
			"disableDependeciesConfirmation",
			"disableOnly",
			"disableAll",
			"cancel",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"openExtensionsFolder",
			"installVSIX",
			"InstallVSIXAction.success",
			"InstallVSIXAction.reloadNow"
		],
		"vs/workbench/parts/extensions/browser/extensionsActions": [
			"installAction",
			"installing",
			"uninstallAction",
			"Uninstalling",
			"updateAction",
			"updateTo",
			"enableForWorkspaceAction.label",
			"enableAlwaysAction.label",
			"disableForWorkspaceAction.label",
			"disableAlwaysAction.label",
			"ManageExtensionAction.uninstallingTooltip",
			"enableForWorkspaceAction",
			"enableGloballyAction",
			"enableAction",
			"disableForWorkspaceAction",
			"disableGloballyAction",
			"disableAction",
			"checkForUpdates",
			"updateAll",
			"reloadAction",
			"postUpdateTooltip",
			"postUpdateMessage",
			"postEnableTooltip",
			"postEnableMessage",
			"postDisableTooltip",
			"postDisableMessage",
			"postUninstallTooltip",
			"postUninstallMessage",
			"reload",
			"toggleExtensionsViewlet",
			"installExtensions",
			"showInstalledExtensions",
			"showDisabledExtensions",
			"clearExtensionsInput",
			"showOutdatedExtensions",
			"showPopularExtensions",
			"showRecommendedExtensions",
			"showWorkspaceRecommendedExtensions",
			"showRecommendedKeymapExtensions",
			"showRecommendedKeymapExtensionsShort",
			"configureWorkspaceRecommendedExtensions",
			"ConfigureWorkspaceRecommendations.noWorkspace",
			"OpenExtensionsFile.failed",
			"builtin",
			"disableAll",
			"disableAllWorkspace",
			"enableAll",
			"enableAllWorkspace"
		],
		"vs/workbench/parts/extensions/common/extensionsInput": [
			"extensionsInputName"
		],
		"vs/workbench/parts/extensions/browser/extensionEditor": [
			"name",
			"extension id",
			"publisher",
			"install count",
			"rating",
			"license",
			"details",
			"contributions",
			"changelog",
			"dependencies",
			"noReadme",
			"noChangelog",
			"noContributions",
			"noDependencies",
			"settings",
			"setting name",
			"description",
			"default",
			"debuggers",
			"debugger name",
			"themes",
			"JSON Validation",
			"commands",
			"command name",
			"description",
			"keyboard shortcuts",
			"menuContexts",
			"languages",
			"language id",
			"language name",
			"file extensions",
			"grammar",
			"snippets"
		],
		"vs/workbench/parts/extensions/electron-browser/keymapExtensions": [
			"disableOtherKeymapsConfirmation",
			"yes",
			"no"
		],
		"vs/workbench/parts/extensions/common/extensionsFileTemplate": [
			"app.extensions.json.title",
			"app.extensions.json.recommendations",
			"app.extension.identifier.errorMessage"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage": [
			"welcomePage",
			"welcome.title",
			"welcomePage.keymapAlreadyInstalled",
			"welcomePage.willReloadAfterInstallingKeymap",
			"ok",
			"welcomePage.installingKeymap",
			"welcomePage.keymapNotFound",
			"cancel"
		],
		"vs/workbench/parts/explorers/browser/treeExplorerService": [
			"treeExplorer.noMatchingProviderId"
		],
		"vs/editor/common/modes/modesRegistry": [
			"plainText.alias"
		],
		"vs/workbench/parts/explorers/browser/views/treeExplorerView": [
			"treeExplorerViewlet.tree"
		],
		"vs/workbench/browser/parts/editor/textResourceEditor": [
			"textEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"untitledFileEditorWithInputAriaLabel",
			"untitledFileEditorAriaLabel"
		],
		"vs/workbench/browser/parts/quickopen/quickopen.contribution": [
			"quickOpen",
			"quickNavigateNext",
			"quickNavigatePrevious",
			"quickSelectNext",
			"quickSelectPrevious"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"toggleOutput",
			"clearOutput",
			{
				"key": "toggleOutputScrollLock",
				"comment": [
					"Turn on / off automatic output scrolling"
				]
			},
			"switchToOutput.label"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"workbench.action.terminal.toggleTerminal",
			"workbench.action.terminal.kill",
			"workbench.action.terminal.kill.short",
			"workbench.action.terminal.copySelection",
			"workbench.action.terminal.new",
			"workbench.action.terminal.new.short",
			"workbench.action.terminal.focus",
			"workbench.action.terminal.focusNext",
			"workbench.action.terminal.focusAtIndex",
			"workbench.action.terminal.focusPrevious",
			"workbench.action.terminal.paste",
			"workbench.action.terminal.DefaultShell",
			"workbench.action.terminal.runSelectedText",
			"workbench.action.terminal.runActiveFile",
			"workbench.action.terminal.runActiveFile.noFile",
			"workbench.action.terminal.switchTerminalInstance",
			"workbench.action.terminal.scrollDown",
			"workbench.action.terminal.scrollDownPage",
			"workbench.action.terminal.scrollToBottom",
			"workbench.action.terminal.scrollUp",
			"workbench.action.terminal.scrollUpPage",
			"workbench.action.terminal.scrollToTop",
			"workbench.action.terminal.clear"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalService": [
			"terminal.integrated.chooseWindowsShellInfo",
			"customize",
			"cancel",
			"never again",
			"terminal.integrated.chooseWindowsShell",
			"terminalService.terminalCloseConfirmationSingular",
			"terminalService.terminalCloseConfirmationPlural",
			"yes",
			"cancel"
		],
		"vs/editor/common/config/defaultConfig": [
			"editorViewAccessibleLabel"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"splitEditor",
			"joinTwoGroups",
			"navigateEditorGroups",
			"focusActiveEditorGroup",
			"focusFirstEditorGroup",
			"focusSecondEditorGroup",
			"focusThirdEditorGroup",
			"focusPreviousGroup",
			"focusNextGroup",
			"openToSide",
			"closeEditor",
			"revertAndCloseActiveEditor",
			"closeEditorsToTheLeft",
			"closeEditorsToTheRight",
			"closeAllEditors",
			"closeEditorsInOtherGroups",
			"closeOtherEditorsInGroup",
			"closeEditorsInGroup",
			"moveActiveGroupLeft",
			"moveActiveGroupRight",
			"minimizeOtherEditorGroups",
			"evenEditorGroups",
			"maximizeEditor",
			"keepEditor",
			"openNextEditor",
			"openPreviousEditor",
			"nextEditorInGroup",
			"openPreviousEditorInGroup",
			"navigateNext",
			"navigatePrevious",
			"reopenClosedEditor",
			"clearRecentFiles",
			"showEditorsInFirstGroup",
			"showEditorsInSecondGroup",
			"showEditorsInThirdGroup",
			"showEditorsInGroup",
			"showAllEditors",
			"openPreviousRecentlyUsedEditorInGroup",
			"openNextRecentlyUsedEditorInGroup",
			"navigateEditorHistoryByInput",
			"openNextRecentlyUsedEditor",
			"openPreviousRecentlyUsedEditor",
			"clearEditorHistory",
			"focusLastEditorInStack",
			"moveEditorLeft",
			"moveEditorRight",
			"moveEditorToPreviousGroup",
			"moveEditorToNextGroup"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalColorRegistry": [
			"terminal.ansiColor"
		],
		"vs/base/common/errorMessage": [
			{
				"key": "message",
				"comment": [
					"{0} represents the error message",
					"{1} represents the error code"
				]
			},
			{
				"key": "error.permission.verbose",
				"comment": [
					"{0} represents detailed information why the permission got denied"
				]
			},
			"error.permission",
			"error.http.verbose",
			"error.http",
			"error.connection.unknown.verbose",
			"error.connection.unknown",
			"stackTrace.format",
			"error.defaultMessage",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"hideActivitBar",
			"activityBarAriaLabel"
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"groupOneVertical",
			"groupTwoVertical",
			"groupThreeVertical",
			"groupOneHorizontal",
			"groupTwoHorizontal",
			"groupThreeHorizontal",
			"editorOpenError"
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"focusSideBar",
			"viewCategory"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"panelSwitcherBarAriaLabel"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"canNotRun",
			"manageExtension"
		],
		"vs/workbench/browser/parts/titlebar/titlebarPart": [
			"patchedWindowTitle",
			"devExtensionWindowTitlePrefix"
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"inputModeEntryDescription",
			"inputModeEntry",
			"emptyPicks",
			"quickOpenInput",
			"historyMatches",
			"historyMatches",
			"noResultsFound1",
			"canNotRunPlaceholder",
			"entryAriaLabel",
			"removeFromEditorHistory",
			"pickHistory"
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"nonempty",
			"requirestring",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.keybindings.command",
			"vscode.extension.contributes.keybindings.key",
			"vscode.extension.contributes.keybindings.mac",
			"vscode.extension.contributes.keybindings.linux",
			"vscode.extension.contributes.keybindings.win",
			"vscode.extension.contributes.keybindings.when",
			"vscode.extension.contributes.keybindings",
			"invalid.keybindings",
			"unboundCommands",
			"keybindings.json.title",
			"keybindings.json.key",
			"keybindings.json.command",
			"keybindings.json.when",
			"keybindings.json.args",
			"keyboardConfigurationTitle",
			"dispatch"
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"errorUnknownKey",
			"errorInvalidTarget",
			"errorNoWorkspaceOpened",
			"errorInvalidConfiguration",
			"errorInvalidConfigurationWorkspace",
			"errorConfigurationFileDirty",
			"errorConfigurationFileDirtyWorkspace"
		],
		"vs/workbench/services/keybinding/common/keybindingEditing": [
			"errorKeybindingsFileDirty",
			"parseErrors",
			"errorInvalidConfiguration",
			"emptyKeybindingsHeader"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"netVersionError",
			"installNet",
			"neverShowAgain",
			"trashFailed"
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"saveChangesMessage",
			"saveChangesMessages",
			"moreFile",
			"moreFiles",
			{
				"key": "saveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "dontSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancel",
			"saveChangesDetail",
			"allFiles",
			"noExt"
		],
		"vs/workbench/services/progress/browser/progressService2": [
			"progress.text",
			"progress.title"
		],
		"vs/workbench/parts/emmet/node/actions/balance": [
			"balanceInward",
			"balanceOutward"
		],
		"vs/workbench/parts/emmet/node/actions/expandAbbreviation": [
			"expandAbbreviationAction"
		],
		"vs/workbench/parts/emmet/node/actions/matchingPair": [
			"matchingPair"
		],
		"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation": [
			"wrapWithAbbreviationAction",
			"enterAbbreviation",
			"abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/selectItem": [
			"selectPreviousItem",
			"selectNextItem"
		],
		"vs/workbench/parts/emmet/node/actions/editPoints": [
			"previousEditPoint",
			"nextEditPoint"
		],
		"vs/workbench/parts/emmet/node/actions/toggleComment": [
			"toggleComment"
		],
		"vs/workbench/parts/emmet/node/actions/splitJoinTag": [
			"splitJoinTag"
		],
		"vs/workbench/parts/emmet/node/actions/mergeLines": [
			"mergeLines"
		],
		"vs/workbench/parts/emmet/node/actions/removeTag": [
			"removeTag"
		],
		"vs/workbench/parts/emmet/node/actions/updateImageSize": [
			"updateImageSize"
		],
		"vs/workbench/parts/emmet/node/actions/evaluateMath": [
			"evaluateMathExpression"
		],
		"vs/workbench/parts/emmet/node/actions/incrementDecrement": [
			"incrementNumberByOneTenth",
			"incrementNumberByOne",
			"incrementNumberByTen",
			"decrementNumberByOneTenth",
			"decrementNumberByOne",
			"decrementNumberByTen"
		],
		"vs/workbench/parts/emmet/node/actions/updateTag": [
			"updateTag",
			"enterTag",
			"tag"
		],
		"vs/workbench/parts/emmet/node/actions/reflectCssValue": [
			"reflectCSSValue"
		],
		"vs/workbench/parts/emmet/browser/actions/showEmmetCommands": [
			"showEmmetCommands"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter": [
			"toggleRenderControlCharacters"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace": [
			"toggleRenderWhitespace"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap": [
			"toggle.wordwrap",
			"wordWrap.notInDiffEditor",
			"unwrapMinified",
			"wrapMinified"
		],
		"vs/workbench/parts/codeEditor/electron-browser/wordWrapMigration": [
			"wordWrapMigration.ok",
			"wordWrapMigration.dontShowAgain",
			"wordWrapMigration.openSettings",
			"wordWrapMigration.prompt"
		],
		"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings": [
			"workbench.action.inspectKeyMap"
		],
		"vs/base/common/processes": [
			"ExecutableParser.commandMissing",
			"ExecutableParser.isShellCommand",
			"ExecutableParser.args",
			"ExecutableParser.invalidCWD"
		],
		"vs/platform/markers/common/problemMatcher": [
			"ProblemPatternParser.loopProperty.notLast",
			"ProblemPatternParser.problemPattern.missingRegExp",
			"ProblemPatternParser.problemPattern.missingProperty",
			"ProblemPatternParser.invalidRegexp",
			"ProblemPatternSchema.regexp",
			"ProblemPatternSchema.file",
			"ProblemPatternSchema.location",
			"ProblemPatternSchema.line",
			"ProblemPatternSchema.column",
			"ProblemPatternSchema.endLine",
			"ProblemPatternSchema.endColumn",
			"ProblemPatternSchema.severity",
			"ProblemPatternSchema.code",
			"ProblemPatternSchema.message",
			"ProblemPatternSchema.loop",
			"NamedProblemPatternSchema.name",
			"NamedMultiLineProblemPatternSchema.name",
			"NamedMultiLineProblemPatternSchema.patterns",
			"ProblemPatternExtPoint",
			"ProblemPatternRegistry.error",
			"ProblemPatternRegistry.error",
			"ProblemMatcherParser.noProblemMatcher",
			"ProblemMatcherParser.noProblemPattern",
			"ProblemMatcherParser.noOwner",
			"ProblemMatcherParser.noFileLocation",
			"ProblemMatcherParser.unknownSeverity",
			"ProblemMatcherParser.noDefinedPatter",
			"ProblemMatcherParser.noIdentifier",
			"ProblemMatcherParser.noValidIdentifier",
			"ProblemMatcherParser.problemPattern.watchingMatcher",
			"ProblemMatcherParser.invalidRegexp",
			"WatchingPatternSchema.regexp",
			"WatchingPatternSchema.file",
			"PatternTypeSchema.name",
			"PatternTypeSchema.description",
			"ProblemMatcherSchema.base",
			"ProblemMatcherSchema.owner",
			"ProblemMatcherSchema.severity",
			"ProblemMatcherSchema.applyTo",
			"ProblemMatcherSchema.fileLocation",
			"ProblemMatcherSchema.watching.activeOnStart",
			"ProblemMatcherSchema.watching.beginsPattern",
			"ProblemMatcherSchema.watching.endsPattern",
			"ProblemMatcherSchema.watching",
			"LegacyProblemMatcherSchema.watchedBegin.deprecated",
			"LegacyProblemMatcherSchema.watchedBegin",
			"LegacyProblemMatcherSchema.watchedEnd.deprecated",
			"LegacyProblemMatcherSchema.watchedEnd",
			"NamedProblemMatcherSchema.name",
			"ProblemMatcherExtPoint"
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"tsc.config",
			"tsc.watch",
			"dotnetCore",
			"msbuild",
			"externalCommand",
			"Maven"
		],
		"vs/workbench/parts/tasks/common/taskConfiguration": [
			"ConfigurationParser.invalidCWD",
			"ConfigurationParser.noShell",
			"ConfigurationParser.noargs",
			"ConfigurationParser.noName",
			"ConfigurationParser.unknownMatcherKind",
			"ConfigurationParser.invalidVaraibleReference",
			"ConfigurationParser.noTaskName",
			"taskConfiguration.shellArgs",
			"taskConfiguration.noCommandOrDependsOn",
			"taskConfiguration.noCommand"
		],
		"vs/workbench/parts/tasks/node/processTaskSystem": [
			"TaskRunnerSystem.unknownError",
			"TaskRunnerSystem.watchingBuildTaskFinished",
			"TaskRunnerSystem.childProcessError",
			"TaskRunnerSystem.cancelRequested"
		],
		"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem": [
			"TerminalTaskSystem.unknownError",
			"TerminalTaskSystem.terminalName",
			"TerminalTaskSystem"
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"TaskSystemDetector.noGulpTasks",
			"TaskSystemDetector.noJakeTasks",
			"TaskSystemDetector.noGulpProgram",
			"TaskSystemDetector.noJakeProgram",
			"TaskSystemDetector.noGruntProgram",
			"TaskSystemDetector.noProgram",
			"TaskSystemDetector.buildTaskDetected",
			"TaskSystemDetector.testTaskDetected"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1": [
			"JsonSchema.version",
			"JsonSchema.windows",
			"JsonSchema.mac",
			"JsonSchema.linux",
			"JsonSchema.shell"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2": [
			"JsonSchema.version",
			"JsonSchema.windows",
			"JsonSchema.mac",
			"JsonSchema.linux",
			"JsonSchema.shell",
			"JsonSchema.tasks.dependsOn.string",
			"JsonSchema.tasks.dependsOn.array"
		],
		"vs/workbench/common/theme": [
			"tabsContainerBackground",
			"tabActiveBackground",
			"tabInactiveBackground",
			"tabBorder",
			"tabActiveEditorGroupActiveForeground",
			"tabInactiveEditorGroupActiveForeground",
			"editorGroupBackground",
			"editorGroupHeaderBackground",
			"editorGroupBorder",
			"editorDragAndDropBackground",
			"panelBackground",
			"panelBorder",
			"panelActiveTitleForeground",
			"panelInactiveTitleForeground",
			"panelActiveTitleBorder",
			"statusBarForeground",
			"statusBarBackground",
			"statusBarNoFolderBackground",
			"statusBarItemActiveBackground",
			"statusBarItemHoverBackground",
			"statusBarProminentItemBackground",
			"statusBarProminentItemHoverBackground",
			"activityBarBackground",
			"activityBarForeground",
			"activityBarDragAndDropBackground",
			"activityBarBadgeBackground",
			"activityBarBadgeForeground",
			"sideBarBackground",
			"sideBarTitleForeground",
			"sideBarSectionHeaderBackground",
			"titleBarActiveForeground",
			"titleBarInactiveForeground",
			"titleBarActiveBackground",
			"titleBarInactiveBackground",
			"notificationsForeground",
			"notificationsBackground"
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"entryAriaLabel",
			"tasksAriaLabel",
			"noTasksMatching",
			"noTasksFound"
		],
		"vs/workbench/parts/tasks/browser/terminateQuickOpen": [
			"tasksAriaLabel",
			"noTasksMatching",
			"noTasksFound"
		],
		"vs/workbench/parts/tasks/browser/restartQuickOpen": [
			"entryAriaLabel",
			"tasksAriaLabel",
			"noTasksMatching",
			"noTasksFound"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed"
		],
		"vs/workbench/parts/snippets/electron-browser/TMSnippets": [
			"vscode.extension.contributes.snippets",
			"vscode.extension.contributes.snippets-language",
			"vscode.extension.contributes.snippets-path",
			"invalid.language",
			"invalid.path.0",
			"invalid.path.1"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsService": [
			"detail.userSnippet",
			"snippetSuggest.longLabel"
		],
		"vs/workbench/parts/snippets/electron-browser/insertSnippet": [
			"snippet.suggestions.label"
		],
		"vs/workbench/parts/snippets/electron-browser/tabCompletion": [
			"tabCompletion"
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"updateNow",
			"later",
			"unassigned",
			"releaseNotes",
			"releaseNotes",
			"showReleaseNotes",
			"downloadNow",
			"read the release notes",
			"licenseChanged",
			"license",
			"updateAvailable",
			"thereIsUpdateAvailable",
			"noUpdatesAvailable"
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesInput": [
			"releaseNotesInputName"
		],
		"vs/workbench/api/node/mainThreadMessageService": [
			"close",
			"cancel",
			"ok"
		],
		"vs/workbench/api/node/mainThreadExtensionService": [
			"overwritingExtension",
			"extensionUnderDevelopment",
			"overwritingExtension"
		],
		"vs/platform/jsonschemas/common/jsonValidationExtensionPoint": [
			"contributes.jsonValidation",
			"contributes.jsonValidation.fileMatch",
			"contributes.jsonValidation.url",
			"invalid.jsonValidation",
			"invalid.fileMatch",
			"invalid.url",
			"invalid.url.fileschema",
			"invalid.url.schema"
		],
		"vs/workbench/electron-browser/actions": [
			"closeActiveEditor",
			"closeWindow",
			"switchWindow",
			"switchWindowPlaceHolder",
			"current",
			"closeFolder",
			"noFolderOpened",
			"newWindow",
			"toggleFullScreen",
			"toggleMenuBar",
			"toggleDevTools",
			"zoomIn",
			"zoomOut",
			"zoomReset",
			"appPerf",
			"reloadWindow",
			"openRecent",
			"folders",
			"files",
			"openRecentPlaceHolderMac",
			"openRecentPlaceHolder",
			"closeMessages",
			"reportIssues",
			"reportPerformanceIssue",
			"keybindingsReference",
			"openDocumentationUrl",
			"openIntroductoryVideosUrl",
			"toggleSharedProcess",
			"navigateLeft",
			"navigateRight",
			"navigateUp",
			"navigateDown",
			"increaseViewSize",
			"decreaseViewSize"
		],
		"vs/editor/node/languageConfigurationExtensionPoint": [
			"parseErrors",
			"schema.openBracket",
			"schema.closeBracket",
			"schema.comments",
			"schema.blockComments",
			"schema.blockComment.begin",
			"schema.blockComment.end",
			"schema.lineComment",
			"schema.brackets",
			"schema.autoClosingPairs",
			"schema.autoClosingPairs.notIn",
			"schema.surroundingPairs"
		],
		"vs/workbench/electron-browser/commands": [
			"diffLeftRightLabel"
		],
		"vs/workbench/electron-browser/shell": [
			"runningAsRoot",
			"prof.message",
			"prof.detail",
			"prof.restartAndFileIssue",
			"prof.restart"
		],
		"vs/base/node/processes": [
			"TaskRunner.UNC"
		],
		"vs/workbench/parts/git/node/git.lib": [
			"errorBuffer",
			"fileBinaryError"
		],
		"vs/code/electron-main/window": [
			"hiddenMenuBar"
		],
		"vs/code/electron-main/windows": [
			"ok",
			"pathNotExistTitle",
			"pathNotExistDetail",
			"accessibilityOptionsWindowTitle",
			"reopen",
			"wait",
			"close",
			"appStalled",
			"appStalledDetail",
			"reopen",
			"close",
			"appCrashed",
			"appCrashedDetail",
			"newWindow",
			"newWindowDesc",
			"recentFolders",
			"folderDesc"
		],
		"vs/code/electron-main/menus": [
			{
				"key": "mFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mEdit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mSelection",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mGoto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mWindow",
			{
				"key": "mHelp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mAbout",
			"mHide",
			"mHideOthers",
			"mShowAll",
			"miQuit",
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenRecent",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAs",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miAutoSave",
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRevert",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miExit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSettings",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymapExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSnippets",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectColorTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectIconTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreferences",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReopenClosedEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miClearRecentOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFind",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFindInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplaceInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEmmetExpandAbbreviation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowEmmetCommands",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleLineComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBlockComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorAbove",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorBelow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorAtEndOfEachLineSelected",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToNextFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToPreviousFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectHighlights",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectGrow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectShrink",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExplorer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSearch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewGit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleOutput",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleDebugConsole",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleIntegratedTerminal",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMarker",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAdditionalViews",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCommandPalette",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleFullScreen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miToggleZenMode",
			{
				"key": "miToggleMenuBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleSidebar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTogglePanel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleWordWrap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderWhitespace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderControlCharacters",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomIn",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomReset",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBack",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miForward",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusFirstGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusSecondGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusThirdGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoLine",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartWithoutDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStopDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRestart Debugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenConfigurations",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddConfiguration",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOver",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepInto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miContinue",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConditionalBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miColumnBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFunctionBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDisableAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRemoveAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInstallAdditionalDebuggers",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mMinimize",
			"mClose",
			"mBringToFront",
			{
				"key": "miToggleDevTools",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAccessibilityOptions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReportIssues",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miWelcome",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDocumentation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReleaseNotes",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miKeyboardShortcuts",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miIntroductoryVideos",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwitter",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUserVoice",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miLicense",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPrivacyStatement",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAbout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miRestartToUpdate",
			"miCheckingForUpdates",
			"miDownloadUpdate",
			"miDownloadingUpdate",
			"miInstallingUpdate",
			"miCheckForUpdates",
			"aboutDetail",
			"okButton"
		],
		"vs/workbench/parts/git/electron-main/askpassService": [
			"git"
		],
		"vs/base/node/zip": [
			"notFound"
		],
		"vs/platform/extensions/node/extensionValidator": [
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch",
			"extensionDescription.empty",
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.main3",
			"notSemver"
		],
		"vs/editor/common/view/editorColorRegistry": [
			"lineHighlight",
			"lineHighlightBorderBox",
			"rangeHighlight",
			"caret",
			"editorWhitespaces",
			"editorIndentGuides",
			"editorLineNumbers"
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"label.find",
			"placeholder.find",
			"label.previousMatchButton",
			"label.nextMatchButton",
			"label.toggleSelectionFind",
			"label.closeButton",
			"label.replace",
			"placeholder.replace",
			"label.replaceButton",
			"label.replaceAllButton",
			"label.toggleReplaceButton",
			"title.matchesCountLimit",
			"label.matchesLocation",
			"label.noResults"
		],
		"vs/editor/contrib/find/common/findController": [
			"startFindAction",
			"findNextMatchAction",
			"findPreviousMatchAction",
			"nextSelectionMatchFindAction",
			"previousSelectionMatchFindAction",
			"startReplace",
			"addSelectionToNextFindMatch",
			"addSelectionToPreviousFindMatch",
			"moveSelectionToNextFindMatch",
			"moveSelectionToPreviousFindMatch",
			"selectAllOccurencesOfFindMatch",
			"changeAll.label"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesController": [
			"labelLoading"
		],
		"vs/editor/contrib/zoneWidget/browser/peekViewWidget": [
			"label.close"
		],
		"vs/editor/contrib/hover/browser/modesContentHover": [
			"modesContentHover.loading"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesModel": [
			"aria.oneReference",
			"aria.fileReferences.1",
			"aria.fileReferences.N",
			"aria.result.0",
			"aria.result.1",
			"aria.result.n1",
			"aria.result.nm"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"hint"
		],
		"vs/editor/common/services/bulkEdit": [
			"conflict",
			"summary.0",
			"summary.nm",
			"summary.n0"
		],
		"vs/editor/contrib/rename/browser/renameInputField": [
			"renameAriaLabel"
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"editorSuggestWidgetBackground",
			"editorSuggestWidgetBorder",
			"editorSuggestWidgetForeground",
			"editorSuggestWidgetSelectedBackground",
			"editorSuggestWidgetHighlightForeground",
			"readMore",
			"suggestionWithDetailsAriaLabel",
			"suggestionAriaLabel",
			"goback",
			"suggestWidget.loading",
			"suggestWidget.noSuggestions",
			"suggestionAriaAccepted",
			"ariaCurrentSuggestionWithDetails",
			"ariaCurrentSuggestion"
		],
		"vs/workbench/parts/preferences/browser/preferencesRenderers": [
			"editTtile",
			"replaceDefaultValue",
			"copyDefaultValue",
			"unsupportedPHPExecutablePathSetting",
			"unsupportedWorkspaceSetting"
		],
		"vs/workbench/parts/preferences/common/preferencesModels": [
			"commonlyUsed",
			"defaultKeybindingsHeader"
		],
		"vs/workbench/parts/preferences/common/keybindingsEditorModel": [
			"default",
			"user",
			"meta",
			"option"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"more"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"collapse"
		],
		"vs/workbench/parts/files/browser/views/openEditorsViewer": [
			"editorGroupAriaLabel",
			"openEditorAriaLabel",
			"saveAll",
			"closeAll",
			"close",
			"closeOthers",
			"closeAll"
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"saveFileFirst",
			"genericSaveError"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"binaryEditor"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"fileReplaceChanges"
		],
		"vs/base/browser/ui/findinput/findInputCheckboxes": [
			"caseDescription",
			"wordsDescription",
			"regexDescription"
		],
		"vs/workbench/parts/git/browser/gitWidgets": [
			"publishBranch",
			"syncBranch",
			"gitNotEnabled"
		],
		"vs/workbench/parts/git/browser/gitServices": [
			"cantOpen",
			"gitIndexChanges",
			"gitIndexChangesDesc",
			"gitIndexChangesRenamed",
			"gitIndexChangesRenamedDesc",
			"workingTreeChanges",
			"workingTreeChangesDesc",
			"gitMergeChanges",
			"gitMergeChangesDesc",
			"updateGit",
			"download",
			"neverShowAgain",
			"configureUsernameEmail",
			"badConfigFile",
			"unmergedChanges",
			"showOutput",
			"cancel",
			"checkNativeConsole",
			"changesFromIndex",
			"changesFromIndexDesc",
			"changesFromTree",
			"changesFromTreeDesc",
			"cantOpenResource"
		],
		"vs/workbench/parts/git/browser/views/changes/changesViewer": [
			"stagedChanges",
			"allChanges",
			"mergeChanges",
			"outsideOfWorkspace",
			"modified-char",
			"modified-char",
			"added-char",
			"deleted-char",
			"deleted-char",
			"renamed-char",
			"copied-char",
			"untracked-char",
			"ignored-char",
			"deleted-char",
			"added-char",
			"deleted-char",
			"added-char",
			"deleted-char",
			"added-char",
			"modified-char",
			"title-index-modified",
			"title-modified",
			"title-index-added",
			"title-index-deleted",
			"title-deleted",
			"title-index-renamed",
			"title-index-copied",
			"title-untracked",
			"title-ignored",
			"title-conflict-both-deleted",
			"title-conflict-added-by-us",
			"title-conflict-deleted-by-them",
			"title-conflict-added-by-them",
			"title-conflict-deleted-by-us",
			"title-conflict-both-added",
			"title-conflict-both-modified",
			"fileStatusAriaLabel",
			"ariaLabelStagedChanges",
			"ariaLabelChanges",
			"ariaLabelMerge"
		],
		"vs/workbench/parts/debug/electron-browser/debugViewer": [
			{
				"key": "process",
				"comment": [
					"Process is a noun"
				]
			},
			"paused",
			{
				"key": "running",
				"comment": [
					"indicates state"
				]
			},
			"thread",
			{
				"key": "pausedOn",
				"comment": [
					"indicates reason for program being paused"
				]
			},
			{
				"key": "running",
				"comment": [
					"indicates state"
				]
			},
			"loadMoreStackFrames",
			"threadAriaLabel",
			"stackFrameAriaLabel",
			"variableValueAriaLabel",
			"variableScopeAriaLabel",
			"variableAriaLabel",
			"watchExpressionPlaceholder",
			"watchExpressionInputAriaLabel",
			"watchExpressionAriaLabel",
			"watchVariableAriaLabel",
			"functionBreakpointPlaceholder",
			"functionBreakPointInputAriaLabel",
			"functionBreakpointsNotSupported",
			"breakpointAriaLabel",
			"functionBreakpointAriaLabel",
			"exceptionBreakpointAriaLabel"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"notAvailable",
			"startDebugFirst"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"moreInfo",
			"unableToLaunchDebugAdapter",
			"unableToLaunchDebugAdapterNoArgs",
			"stoppingDebugAdapter",
			"debugAdapterCrash"
		],
		"vs/workbench/parts/debug/electron-browser/debugConfigurationManager": [
			"vscode.extension.contributes.debuggers",
			"vscode.extension.contributes.debuggers.type",
			"vscode.extension.contributes.debuggers.label",
			"vscode.extension.contributes.debuggers.program",
			"vscode.extension.contributes.debuggers.args",
			"vscode.extension.contributes.debuggers.runtime",
			"vscode.extension.contributes.debuggers.runtimeArgs",
			"vscode.extension.contributes.debuggers.variables",
			"vscode.extension.contributes.debuggers.initialConfigurations",
			"vscode.extension.contributes.debuggers.languages",
			"vscode.extension.contributes.debuggers.adapterExecutableCommand",
			"vscode.extension.contributes.debuggers.startSessionCommand",
			"vscode.extension.contributes.debuggers.configurationSnippets",
			"vscode.extension.contributes.debuggers.configurationAttributes",
			"vscode.extension.contributes.debuggers.windows",
			"vscode.extension.contributes.debuggers.windows.runtime",
			"vscode.extension.contributes.debuggers.osx",
			"vscode.extension.contributes.debuggers.osx.runtime",
			"vscode.extension.contributes.debuggers.linux",
			"vscode.extension.contributes.debuggers.linux.runtime",
			"vscode.extension.contributes.breakpoints",
			"vscode.extension.contributes.breakpoints.language",
			"app.launch.json.title",
			"app.launch.json.version",
			"app.launch.json.configurations",
			"app.launch.json.compounds",
			"app.launch.json.compound.name",
			"app.launch.json.compounds.configurations",
			"debugNoType",
			"DebugConfig.failed",
			"selectDebug"
		],
		"vs/workbench/electron-browser/extensionHost": [
			"extensionHostProcess.startupFailDebug",
			"extensionHostProcess.startupFail",
			"extensionHostProcess.error",
			"extensionHostProcess.crash"
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"treeAriaLabel"
		],
		"vs/workbench/parts/debug/browser/breakpointWidget": [
			"breakpointWidgetExpressionPlaceholder",
			"breakpointWidgetAriaLabel",
			"breakpointWidgetHitCountPlaceholder",
			"breakpointWidgetHitCountAriaLabel",
			"expression",
			"hitCount"
		],
		"vs/workbench/parts/debug/browser/exceptionWidget": [
			"debugExceptionWidgetBorder",
			"debugExceptionWidgetBackground",
			"exceptionThrownWithId",
			"exceptionThrown"
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"copyValue",
			"copy",
			"copyStackTrace"
		],
		"vs/workbench/parts/html/browser/webview": [
			"devtools.webview"
		],
		"vs/workbench/parts/extensions/browser/dependenciesViewer": [
			"error",
			"Unknown Dependency"
		],
		"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page": [
			"welcomePage.vscode",
			"welcomePage.editingEvolved",
			"welcomePage.start",
			"welcomePage.newFile",
			"welcomePage.openFolder",
			"welcomePage.openFolder",
			"welcomePage.cloneGitRepository",
			"welcomePage.cloneGitRepository",
			"welcomePage.recent",
			"welcomePage.noRecentFolders",
			"welcomePage.help",
			"welcomePage.productDocumentation",
			"welcomePage.introductoryVideos",
			"welcomePage.gitHubRepository",
			"welcomePage.stackOverflow",
			"welcomePage.showOnStartup",
			"welcomePage.quickLinks",
			"welcomePage.interactivePlayground",
			"welcomePage.interactivePlaygroundDescription",
			"welcomePage.interfaceOverview",
			"welcomePage.interfaceOverviewDescription",
			"welcomePage.colorTheme",
			"welcomePage.colorThemeDescription",
			"welcomePage.keybindingsReference",
			"welcomePage.keybindingsReferenceDescription",
			"welcomePage.showCommands",
			"welcomePage.showCommandsDescription",
			"welcomePage.configureSettings",
			"welcomePage.configureSettingsDescription",
			"welcomePage.installKeymapDescription",
			"welcomePage.installKeymap",
			"welcomePage.vim",
			"welcomePage.vim",
			"welcomePage.vimCurrent",
			"welcomePage.sublime",
			"welcomePage.sublime",
			"welcomePage.sublimeCurrent",
			"welcomePage.atom",
			"welcomePage.atom",
			"welcomePage.atomCurrent",
			"welcomePage.others"
		],
		"vs/workbench/parts/explorers/browser/treeExplorerActions": [
			"refresh"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper": [
			"terminal.integrated.allowWorkspaceShell",
			"allow",
			"disallow"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"terminal.integrated.copySelection.noSelection",
			"terminal.integrated.exitedWithCode",
			"terminal.integrated.waitOnExit",
			"terminal.integrated.launchFailed"
		],
		"vs/workbench/browser/parts/activitybar/activitybarActions": [
			"removeFromActivityBar",
			"keepInActivityBar",
			"titleKeybinding",
			"additionalViews",
			"numberBadge",
			"manageExtension",
			"toggle"
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"textEditor",
			"textDiffEditor",
			"binaryDiffEditor",
			"sideBySideEditor",
			"groupOnePicker",
			"groupTwoPicker",
			"groupThreePicker",
			"allEditorsPicker",
			"view"
		],
		"vs/workbench/browser/parts/compositePart": [
			"ariaCompositeToolbarLabel",
			"titleTooltip"
		],
		"vs/workbench/browser/parts/panel/panelActions": [
			"panelActionTooltip",
			"closePanel",
			"togglePanel",
			"focusPanel",
			"toggleMaximizedPanel",
			"maximizePanel",
			"minimizePanel",
			"view",
			"view",
			"view",
			"view"
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"quickOpenAriaLabel",
			"treeAriaLabel"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"first.chord",
			"missing.chord"
		],
		"vs/workbench/services/files/node/fileService": [
			"fileInvalidPath",
			"fileIsDirectoryError",
			"fileBinaryError",
			"fileNotFoundError",
			"unableToMoveCopyError",
			"foldersCopyError",
			"fileReadOnlyError"
		],
		"vs/workbench/services/textfile/common/textFileService": [
			"files.backup.failSave"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon": [
			"JsonSchema.options",
			"JsonSchema.options.cwd",
			"JsonSchema.options.env",
			"JsonSchema.shell.executable",
			"JsonSchema.shell.args",
			"JsonSchema.command",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.taskName",
			"JsonSchema.command",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.windows",
			"JsonSchema.tasks.mac",
			"JsonSchema.tasks.linux",
			"JsonSchema.tasks.suppressTaskName",
			"JsonSchema.tasks.showOutput",
			"JsonSchema.echoCommand",
			"JsonSchema.tasks.watching.deprecation",
			"JsonSchema.tasks.watching",
			"JsonSchema.tasks.background",
			"JsonSchema.tasks.promptOnClose",
			"JsonSchema.tasks.build",
			"JsonSchema.tasks.test",
			"JsonSchema.tasks.matchers",
			"JsonSchema.command",
			"JsonSchema.args",
			"JsonSchema.showOutput",
			"JsonSchema.watching.deprecation",
			"JsonSchema.watching",
			"JsonSchema.background",
			"JsonSchema.promptOnClose",
			"JsonSchema.echoCommand",
			"JsonSchema.suppressTaskName",
			"JsonSchema.taskSelector",
			"JsonSchema.matchers",
			"JsonSchema.tasks"
		],
		"vs/workbench/parts/tasks/browser/quickOpen": [
			"entryAriaLabel"
		],
		"vs/editor/common/services/modeServiceImpl": [
			"vscode.extension.contributes.languages",
			"vscode.extension.contributes.languages.id",
			"vscode.extension.contributes.languages.aliases",
			"vscode.extension.contributes.languages.extensions",
			"vscode.extension.contributes.languages.filenames",
			"vscode.extension.contributes.languages.filenamePatterns",
			"vscode.extension.contributes.languages.mimetypes",
			"vscode.extension.contributes.languages.firstLine",
			"vscode.extension.contributes.languages.configuration"
		],
		"vs/workbench/parts/feedback/electron-browser/feedback": [
			"sendFeedback",
			"label.sendASmile",
			"patchedVersion1",
			"patchedVersion2",
			"sentiment",
			"smileCaption",
			"frownCaption",
			"other ways to contact us",
			"submit a bug",
			"request a missing feature",
			"tell us why?",
			"commentsHeader",
			"tweet",
			"character left",
			"characters left",
			"feedbackSending",
			"feedbackSent",
			"feedbackSendingError"
		],
		"vs/platform/extensions/common/abstractExtensionService": [
			"unknownDep",
			"failedDep1",
			"failedDep2",
			"activationError"
		],
		"vs/workbench/node/extensionPoints": [
			"jsonParseFail",
			"fileReadFail",
			"jsonsParseFail",
			"fileReadFail",
			"missingNLSKey"
		],
		"vs/workbench/electron-browser/window": [
			"undo",
			"redo",
			"cut",
			"copy",
			"paste",
			"selectAll",
			"confirmOpen",
			{
				"key": "confirmOpenButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"developer",
			"file"
		],
		"vs/workbench/services/message/electron-browser/messageService": [
			{
				"key": "yesButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancelButton"
		],
		"vs/editor/common/services/modelServiceImpl": [
			"diagAndSourceMultiline",
			"diagAndSource"
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"integrity.ok",
			"integrity.dontShowAgain",
			"integrity.moreInfo",
			"integrity.prompt"
		],
		"vs/workbench/electron-browser/crashReporter": [
			"telemetryConfigurationTitle",
			"telemetry.enableCrashReporting"
		],
		"vs/platform/extensionManagement/common/extensionEnablementService": [
			"noWorkspace"
		],
		"vs/editor/electron-browser/textMate/TMSyntax": [
			"invalid.language",
			"invalid.scopeName",
			"invalid.path.0",
			"invalid.injectTo",
			"invalid.embeddedLanguages",
			"invalid.path.1",
			"no-tm-grammar"
		],
		"vs/workbench/services/themes/electron-browser/workbenchThemeService": [
			"vscode.extension.contributes.themes",
			"vscode.extension.contributes.themes.id",
			"vscode.extension.contributes.themes.label",
			"vscode.extension.contributes.themes.uiTheme",
			"vscode.extension.contributes.themes.path",
			"vscode.extension.contributes.iconThemes",
			"vscode.extension.contributes.iconThemes.id",
			"vscode.extension.contributes.iconThemes.label",
			"vscode.extension.contributes.iconThemes.path",
			"migration.completed",
			"error.cannotloadtheme",
			"reqarray",
			"reqpath",
			"invalid.path.1",
			"reqarray",
			"reqpath",
			"reqid",
			"invalid.path.1",
			"error.cannotloadicontheme",
			"error.cannotparseicontheme",
			"colorTheme",
			"colorThemeError",
			"iconTheme",
			"noIconThemeDesc",
			"iconThemeError",
			"workbenchColors",
			"workbenchColors.deprecated",
			"workbenchColors.deprecatedDescription"
		],
		"vs/workbench/services/mode/common/workbenchModeService": [
			"invalid",
			"invalid.empty",
			"require.id",
			"opt.extensions",
			"opt.filenames",
			"opt.firstLine",
			"opt.configuration",
			"opt.aliases",
			"opt.mimetypes"
		],
		"vs/editor/common/controller/cursor": [
			"corrupt.commands"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesWidget": [
			"referencesFailre",
			"referencesCount",
			"referenceCount",
			"missingPreviewMessage",
			"treeAriaLabel",
			"noResults",
			"peekView.alternateTitle",
			"peekViewTitleBackground",
			"peekViewTitleForeground",
			"peekViewTitleInfoForeground",
			"peekViewBorder",
			"peekViewResultsBackground",
			"peekViewResultsMatchForeground",
			"peekViewResultsFileForeground",
			"peekViewResultsSelectionBackground",
			"peekViewResultsSelectionForeground",
			"peekViewEditorBackground",
			"peekViewResultsMatchHighlight",
			"peekViewEditorMatchHighlight"
		],
		"vs/platform/keybinding/common/keybindingLabels": [
			"ctrlKey",
			"shiftKey",
			"altKey",
			"windowsKey",
			"ctrlKey.long",
			"shiftKey.long",
			"altKey.long",
			"cmdKey.long",
			"ctrlKey.long",
			"shiftKey.long",
			"altKey.long",
			"windowsKey.long"
		],
		"vs/base/browser/ui/resourceviewer/resourceViewer": [
			"imgMeta",
			"largeImageError",
			"resourceOpenExternalButton",
			"resourceOpenExternalText",
			"nativeBinaryError",
			"sizeB",
			"sizeKB",
			"sizeMB",
			"sizeGB",
			"sizeTB"
		],
		"vs/workbench/parts/debug/common/debugSource": [
			"unknownSource"
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debug.terminal.title",
			"debug.terminal.not.available.error"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"debugAdapterBinNotFound",
			{
				"key": "debugAdapterCannotDetermineExecutable",
				"comment": [
					"Adapter executable file not found"
				]
			},
			"debugType",
			"debugTypeNotRecognised",
			"node2NotSupported",
			"debugName",
			"debugRequest",
			"debugServer",
			"debugPrelaunchTask",
			"internalConsoleOptions",
			"debugWindowsConfiguration",
			"debugOSXConfiguration",
			"debugLinuxConfiguration",
			"deprecatedVariables"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler": [
			"terminalLinkHandler.followLinkCmd",
			"terminalLinkHandler.followLinkCtrl"
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"araLabelTabActions"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"close",
			"closeOthers",
			"closeRight",
			"closeAll",
			"keepOpen",
			"showOpenedEditors",
			"araLabelEditorActions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"metadataDiff"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"singleSelectionRange",
			"singleSelection",
			"multiSelectionRange",
			"multiSelection",
			"endOfLineLineFeed",
			"endOfLineCarriageReturnLineFeed",
			"tabFocusModeEnabled",
			"disableTabMode",
			"gotoLine",
			"indentation",
			"selectEncoding",
			"selectEOL",
			"selectLanguageMode",
			"fileInfo",
			"spacesSize",
			{
				"key": "tabSize",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"showLanguageExtensions",
			"changeMode",
			"noEditor",
			"languageDescription",
			"languageDescriptionConfigured",
			"languagesPicks",
			"configureModeSettings",
			"configureAssociationsExt",
			"autoDetect",
			"pickLanguage",
			"currentAssociation",
			"pickLanguageToConfigure",
			"changeIndentation",
			"noEditor",
			"noWritableCodeEditor",
			"indentView",
			"indentConvert",
			"pickAction",
			"changeEndOfLine",
			"noEditor",
			"noWritableCodeEditor",
			"pickEndOfLine",
			"changeEncoding",
			"noEditor",
			"noFileEditor",
			"saveWithEncoding",
			"reopenWithEncoding",
			"saveWithEncoding",
			"reopenWithEncoding",
			"pickAction",
			"guessedEncoding",
			"pickEncodingForReopen",
			"pickEncodingForSave"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"editorCommand.activeEditorMove.description",
			"editorCommand.activeEditorMove.arg.name",
			"editorCommand.activeEditorMove.arg.description",
			"commandDeprecated",
			"openKeybindings"
		],
		"vs/editor/node/textMate/TMGrammars": [
			"vscode.extension.contributes.grammars",
			"vscode.extension.contributes.grammars.language",
			"vscode.extension.contributes.grammars.scopeName",
			"vscode.extension.contributes.grammars.path",
			"vscode.extension.contributes.grammars.embeddedLanguages",
			"vscode.extension.contributes.grammars.injectTo"
		],
		"vs/workbench/services/themes/electron-browser/colorThemeData": [
			"error.cannotparsejson",
			{
				"key": "error.invalidformat.colors",
				"comment": [
					"{0} will be replaced by a path. Values in quotes should not be translated."
				]
			},
			{
				"key": "error.invalidformat.tokenColors",
				"comment": [
					"{0} will be replaced by a path. Values in quotes should not be translated."
				]
			},
			"error.plist.invalidformat",
			"error.cannotparse",
			"error.cannotload"
		],
		"vs/workbench/services/themes/common/colorThemeSchema": [
			"schema.colors",
			"schema.properties.name",
			"schema.fontStyle",
			"schema.tokenColors.path"
		],
		"vs/workbench/services/themes/common/fileIconThemeSchema": [
			"schema.folderExpanded",
			"schema.folder",
			"schema.file",
			"schema.folderNames",
			"schema.folderName",
			"schema.folderNamesExpanded",
			"schema.folderNameExpanded",
			"schema.fileExtensions",
			"schema.fileExtension",
			"schema.fileNames",
			"schema.fileName",
			"schema.languageIds",
			"schema.languageId",
			"schema.fonts",
			"schema.id",
			"schema.src",
			"schema.font-path",
			"schema.font-format",
			"schema.font-weight",
			"schema.font-sstyle",
			"schema.font-size",
			"schema.iconDefinitions",
			"schema.iconDefinition",
			"schema.iconPath",
			"schema.fontCharacter",
			"schema.fontColor",
			"schema.fontSize",
			"schema.fontId",
			"schema.light",
			"schema.highContrast"
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/workbench/api/node/extHostTreeView": [
			"treeExplorer.notRegistered",
			"treeExplorer.failedToProvideRootNode",
			"treeExplorer.notRegistered"
		],
		"vs/editor/contrib/indentation/common/indentation": [
			"indentationToSpaces",
			"indentationToTabs",
			"configuredTabSize",
			{
				"key": "selectTabWidth",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"indentUsingTabs",
			"indentUsingSpaces",
			"detectIndentation",
			"editor.reindentlines"
		],
		"vs/workbench/services/message/browser/messageList": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage",
			"error",
			"warning",
			"info",
			"close"
		],
		"vs/editor/common/model/textModelWithTokens": [
			"mode.tokenizationSupportFailed"
		]
	},
	"messages": {
		"vs/code/node/cliProcessMain": [
			"Extension '{0}' not found.",
			"Extension '{0}' is not installed.",
			"Make sure you use the full extension ID, including the publisher, eg: {0}",
			"Extension '{0}' was successfully installed!",
			"Extension '{0}' is already installed.",
			"Found '{0}' in the marketplace.",
			"Installing...",
			"Extension '{0}' v{1} was successfully installed!",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled!"
		],
		"vs/editor/contrib/inspectTMScopes/electron-browser/inspectTMScopes": [
			"Developer: Inspect TM Scopes",
			"Loading..."
		],
		"vs/platform/actions/electron-browser/menusExtensionPoint": [
			"menu items must be an array",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to execute. The command must be declared in the 'commands'-section",
			"Identifier of an alternative command to execute. The command must be declared in the 'commands'-section",
			"Condition which must be true to show this item",
			"Group into which this command belongs",
			"Contributes menu items to the editor",
			"The Command Palette",
			"The editor title menu",
			"The editor context menu",
			"The file explorer context menu",
			"The editor tabs context menu",
			"The debug callstack context menu",
			"The Source Control title menu",
			"The Source Control resource group context menu",
			"The Source Control resource state context menu",
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `icon` can be omitted or must be either a string or a literal like `{dark, light}`",
			"property `{0}` is mandatory and must be of type `string` or `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"properties `{0}` and `{1}` are mandatory and must be of type `string`",
			"Identifier of the command to execute",
			"Title by which the command is represented in the UI",
			"(Optional) Category string by the command is grouped in the UI",
			"(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration",
			"Icon path when a light theme is used",
			"Icon path when a dark theme is used",
			"Contributes commands to the command palette.",
			"Command `{0}` appears multiple times in the `commands` section.",
			"`{0}` is not a valid menu identifier",
			"Menu item references a command `{0}` which is not defined in the 'commands' section.",
			"Menu item references an alt-command `{0}` which is not defined in the 'commands' section.",
			"Menu item references the same command as default and alt-command",
			"Sorry, but currently only the 'navigation' group of the 'editor/title' menu supports alt-commands"
		],
		"vs/editor/contrib/accessibility/browser/accessibility": [
			"Thank you for trying out VS Code's accessibility options.",
			"Status:",
			"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
			"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.",
			"You can dismiss this tooltip and return to the editor by pressing Escape.",
			"Show Accessibility Help"
		],
		"vs/workbench/browser/actions/toggleActivityBarVisibility": [
			"Toggle Activity Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"Toggle Status Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"Toggle Side Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"Toggle Editor Group Vertical/Horizontal Layout",
			"Horizontal Editor Group Layout",
			"Vertical Editor Group Layout",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"Toggle Side Bar Location",
			"View"
		],
		"vs/workbench/browser/actions/toggleZenMode": [
			"Toggle Zen Mode",
			"View"
		],
		"vs/workbench/parts/preferences/browser/preferences.contribution": [
			"Default Preferences Editor",
			"Keybindings Editor",
			"Preferences"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditorContribution": [
			"Define Keybinding",
			"For your current keyboard layout press ",
			"You won't be able to produce this key combination under your current keyboard layout."
		],
		"vs/workbench/browser/actions/configureLocale": [
			"Configure Language",
			"Defines VSCode's display language.",
			"See {0} for a list of supported languages.",
			"Changing the value requires to restart VSCode.",
			"Unable to create '{0}' ({1}).",
			"The UI Language to use."
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"Show and Run Commands",
			"Go to Line",
			"Go to Line",
			"Go to Symbol in File",
			"Go to Symbol in File by Category",
			"Show Help",
			"Open View"
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"{0}, editor group picker",
			"Group: {0}",
			"No matching opened editor found in group",
			"List of opened editors is currently empty in group",
			"No matching opened editor found",
			"List of opened editors is currently empty"
		],
		"vs/workbench/parts/files/browser/fileActions.contribution": [
			"Files",
			"Reveal in Side Bar",
			"Use local changes and overwrite disk contents",
			"Discard local changes and revert to content on disk"
		],
		"vs/workbench/parts/files/browser/files.contribution": [
			"Show Explorer",
			"Explorer",
			"View",
			"Text File Editor",
			"Binary File Editor",
			"Files",
			"Configure glob patterns for excluding files and folders.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Configure file associations to languages (e.g. \"*.extension\": \"html\"). These have precedence over the default associations of the languages installed.",
			"The default character set encoding to use when reading and writing files.",
			"When enabled, will attempt to guess the character set encoding when opening files",
			"The default end of line character.",
			"When enabled, will trim trailing whitespace when saving a file.",
			"When enabled, insert a final new line at the end of the file when saving it.",
			"A dirty file is never automatically saved.",
			"A dirty file is automatically saved after the configured 'files.autoSaveDelay'.",
			"A dirty file is automatically saved when the editor loses focus.",
			"A dirty file is automatically saved when the window loses focus.",
			"Controls auto save of dirty files. Accepted values:  '{0}', '{1}', '{2}' (editor loses focus), '{3}' (window loses focus). If set to '{4}', you can configure the delay in 'files.autoSaveDelay'.",
			"Controls the delay in ms after which a dirty file is saved automatically. Only applies when 'files.autoSave' is set to '{0}'",
			"Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.",
			"Disable hot exit.",
			"Hot exit will be triggered when the application is closed, that is when the last window is closed on Windows/Linux or when the workbench.action.quit command is triggered (command palette, keybinding, menu). All windows with backups will be restored upon next launch.",
			"Hot exit will be triggered when the application is closed, that is when the last window is closed on Windows/Linux or when the workbench.action.quit command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. To restore folder windows as they were before shutdown set \"window.reopenFolders\" to \"all\".",
			"Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",
			"The default language mode that is assigned to new files.",
			"Editor",
			"Format a file on save. A formatter must be available, the file must not be auto-saved, and editor must not be shutting down.",
			"File Explorer",
			"Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.",
			"Controls if the height of the open editors section should adapt dynamically to the number of elements or not.",
			"Controls if the explorer should automatically reveal and select files when opening them.",
			"Controls if the explorer should allow to move files and folders via drag and drop."
		],
		"vs/workbench/parts/search/browser/search.contribution": [
			"Go to Symbol in Workspace...",
			"Search",
			"Show Search",
			"View",
			"Find in Files",
			"Go to File",
			"Go to Symbol in Workspace",
			"Search",
			"Search",
			"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Controls whether to use ripgrep in text search",
			"Controls whether to use .gitignore and .ignore files by default when searching in a new workspace.",
			"Configure to include results from a global symbol search in the file results for Quick Open."
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"file and symbol results",
			"file results"
		],
		"vs/workbench/parts/scm/electron-browser/scm.contribution": [
			"Show Git",
			"Source Control",
			"Show SCM",
			"View"
		],
		"vs/workbench/parts/search/browser/searchViewlet": [
			"Toggle Search Details",
			"files to include",
			"Search Include Patterns",
			"files to exclude",
			"Search Exclude Patterns",
			"files excluded through settings",
			"Configured Search Exclude Patterns",
			"Replace All",
			"Replace",
			"Replaced {0} occurrence across {1} file with '{2}'.",
			"Replaced {0} occurrence across {1} file'.",
			"Replaced {0} occurrence across {1} files with '{2}'.",
			"Replaced {0} occurrence across {1} files.",
			"Replaced {0} occurrences across {1} file with '{2}'.",
			"Replaced {0} occurrences across {1} file'.",
			"Replaced {0} occurrences across {1} files with '{2}'.",
			"Replaced {0} occurrences across {1} files.",
			"Replace {0} occurrence across {1} file with '{2}'?",
			"Replace {0} occurrence across {1} file'?",
			"Replace {0} occurrence across {1} files with '{2}'?",
			"Replace {0} occurrence across {1} files?",
			"Replace {0} occurrences across {1} file with '{2}'?",
			"Replace {0} occurrences across {1} file'?",
			"Replace {0} occurrences across {1} files with '{2}'?",
			"Replace {0} occurrences across {1} files?",
			"Search Results",
			"{0} when {1}",
			"The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.",
			"Search was canceled before any results could be found - ",
			"No results found in '{0}' excluding '{1}' - ",
			"No results found in '{0}' - ",
			"No results found excluding '{0}' - ",
			"No results found. Review your settings for configured exclusions - ",
			"Search again",
			"Search again in all files",
			"Open Settings",
			"Search returned {0} results in {1} files",
			"{0} result in {1} file",
			"{0} result in {1} files",
			"{0} results in {1} file",
			"{0} results in {1} files",
			"You have not yet opened a folder. Only open files are currently searched - ",
			"Open Folder"
		],
		"vs/workbench/parts/scm/electron-browser/scmViewlet": [
			"Message (press {0} to commit)",
			"Source Control",
			"{0}: {1}"
		],
		"vs/workbench/parts/git/electron-browser/git.contribution": [
			"Show SCM",
			"Git"
		],
		"vs/workbench/parts/git/browser/gitQuickOpen": [
			"{0}, git",
			"Branch at {0}",
			"Remote branch at {0}",
			"Tag at {0}",
			"Branch {0} is already the current branch",
			"{0}, git branch",
			"Create branch {0}",
			"No other branches",
			"Please provide a valid branch name"
		],
		"vs/workbench/parts/git/browser/gitActions.contribution": [
			"Switch to Changes View",
			"Switch to Editor View",
			"Stage",
			"Unstage",
			"Stage Selected Lines",
			"Unstage Selected Lines",
			"Revert Selected Lines",
			"Are you sure you want to revert the selected changes?",
			"This action is irreversible!",
			"&&Revert Changes",
			"Open Change",
			"Open File",
			"Git"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"Show Debug",
			"Debug Console",
			"Debug",
			"Debug Console",
			"View",
			"View",
			"Debug",
			"Debug Configuration",
			"Debug",
			"Allows setting breakpoint in any file",
			"Automatically open explorer view on the end of a debug session",
			"Show variable values inline in editor while debugging",
			"Controls if the floating debug action bar should be hidden",
			"Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces"
		],
		"vs/workbench/parts/debug/browser/debugQuickOpen": [
			"{0}, debug",
			"Type a name of a launch configuration to run.",
			"No debug configurations matching",
			"No debug configurations found. Please create a 'launch.json' file."
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"Read Eval Print Loop Panel",
			"History Previous",
			"History Next",
			"REPL Accept Input"
		],
		"vs/workbench/parts/debug/browser/debugEditorActions": [
			"Debug: Toggle Breakpoint",
			"Debug: Column Breakpoint",
			"Add Column Breakpoint",
			"Debug: Add Conditional Breakpoint...",
			"Run to Cursor",
			"Debug: Evaluate",
			"Debug: Add to Watch",
			"Debug: Show Hover"
		],
		"vs/workbench/parts/html/browser/html.contribution": [
			"Html Preview"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution": [
			"Interactive Playground",
			"Help",
			"Interactive Playground",
			"Interactive Playground",
			"Interactive Playground",
			"Interactive Playground"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"Manage Extensions",
			"Install Gallery Extensions",
			"Extension",
			"Extensions",
			"View",
			"Extensions",
			"Automatically update extensions"
		],
		"vs/workbench/parts/extensions/browser/extensionsQuickOpen": [
			"Press Enter to manage your extensions.",
			"Press Enter to search for '{0}' in the Marketplace.",
			"Type an extension name"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"Search Extensions in Marketplace",
			"Extensions",
			"Sort By: Install Count",
			"Sort By: Rating",
			"Sort By: Name",
			"No extensions found.",
			"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting.",
			"Extensions",
			"{0} Outdated Extensions"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution": [
			"Workbench",
			"When enabled, will show the Welcome page on startup.",
			"Help"
		],
		"vs/workbench/parts/explorers/browser/treeExplorer.contribution": [
			"Contributes custom view",
			"Unique id used to identify view created through vscode.workspace.createTreeView",
			"Human readable string used to render the view",
			"Path to the view icon",
			"Contributes custom views",
			"Show {0}",
			"View"
		],
		"vs/workbench/parts/output/browser/output.contribution": [
			"Output",
			"View",
			"View",
			"Clear Output"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"{0}, Output panel",
			"Output panel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"Integrated Terminal",
			"The path of the shell that the terminal uses on Linux.",
			"The command line arguments to use when on the Linux terminal.",
			"The path of the shell that the terminal uses on OS X.",
			"The command line arguments to use when on the OS X terminal.",
			"The path of the shell that the terminal uses on Windows. When using shells shipped with Windows (cmd, PowerShell or Bash on Ubuntu), prefer C:\\Windows\\sysnative over C:\\Windows\\System32 to use the 64-bit versions.",
			"The command line arguments to use when on the Windows terminal.",
			"When set, this will prevent the context menu from appearing when right clicking within the terminal, instead it will copy when there is a selection and paste when there is no selection.",
			"Controls the font family of the terminal, this defaults to editor.fontFamily's value.",
			"Controls whether font ligatures are enabled in the terminal.",
			"Controls the font size in pixels of the terminal.",
			"Controls the line height of the terminal, this number is multipled by the terminal font size to get the actual line-height in pixels.",
			"Whether to enable bold text within the terminal, this requires support from the terminal shell.",
			"Controls whether the terminal cursor blinks.",
			"Controls the style of terminal cursor.",
			"Controls the maximum amount of lines the terminal keeps in its buffer.",
			"Controls whether locale variables are set at startup of the terminal, this defaults to true on OS X, false on other platforms.",
			"An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
			"Whether to confirm on exit if there are active terminal sessions.",
			"A set of command IDs whose keybindings will not be sent to the shell and instead always be handled by Code. This allows the use of keybindings that would normally be consumed by the shell to act the same as when the terminal is not focused, for example ctrl+p to launch Quick Open.",
			"Terminal",
			"Terminal",
			"View"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"Copy",
			"New Terminal",
			"Paste",
			"Clear"
		],
		"vs/workbench/parts/trust/electron-browser/unsupportedWorkspaceSettings.contribution": [
			"This Workspace contains settings that can only be set in User Settings. ({0})",
			"Open Workspace Settings",
			"Learn More",
			"Ignore"
		],
		"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution": [
			"A setting has changed that requires a restart to take effect.",
			"Press the restart button to restart {0} and enable the setting.",
			"Restart"
		],
		"vs/workbench/parts/emmet/node/emmet.contribution": [
			"Emmet",
			"When enabled, emmet abbreviations are expanded when pressing TAB.",
			"Preferences used to modify behavior of some actions and resolvers of Emmet.",
			"Define profile for specified syntax or use your own profile with specific rules.",
			"An array of languages where emmet abbreviations should not be expanded.",
			"Path to a folder containing emmet profiles, snippets and preferences"
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"Tasks",
			"Tasks are only available on a workspace folder.",
			"Select a Task Runner",
			"Auto detecting tasks for {0}",
			"Auto detecting the task system failed. Using default template. Consult the task output for details.",
			"Auto detecting the task system produced errors. Consult the task output for details.",
			"Unable to create the 'tasks.json' file inside the '.vscode' folder. Consult the task output for details.",
			"Configure Task Runner",
			"Configure Build Task",
			"Close",
			"View Terminal",
			"Problems",
			"99+",
			"Tasks",
			"Changing the task execution engine requires to restart VS Code. The change is ignored.",
			"No build task defined. Mark a task with 'isBuildCommand' in the tasks.json file.",
			"No test task defined. Mark a task with 'isTestCommand' in the tasks.json file.",
			"Requested task {0} to execute not found.",
			"The task is already active and in watch mode. To terminate the task use `F1 > terminate task`",
			"There is already a task running. Terminate it first before executing another task.",
			"Failed to terminate and restart task {0}",
			"Error: the provided task configuration has validation errors and can't not be used. Please correct the errors first.",
			"Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\n",
			"There is a task running. Do you want to terminate it?",
			"&&Terminate Task",
			"The launched task doesn't exist anymore. If the task spawned background processes exiting VS Code might result in orphaned processes. To avoid this start the last background process with a wait flag.",
			"&&Exit Anyways",
			"Terminate Running Task",
			"An error has occurred while running a task. See task log for details.",
			"Tasks are only available on a workspace folder.",
			"The launched process doesn't exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.",
			"Failed to terminate running task",
			"Show Task Log",
			"Run Task",
			"Restart Task",
			"Terminate Running Task",
			"Run Build Task",
			"Run Test Task",
			"Run Task",
			"Terminate Task",
			"Restart Task"
		],
		"vs/workbench/parts/execution/electron-browser/terminal.contribution": [
			"External Terminal",
			"Customizes which terminal to run on Windows.",
			"Customizes which terminal application to run on OS X.",
			"Customizes which terminal to run on Linux.",
			"Open New Command Prompt",
			"Open New Terminal",
			"Open in Command Prompt",
			"Open in Terminal"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"Open User Snippets",
			"Select Language for Snippet",
			"Unable to create {0}",
			"Preferences",
			"Empty snippet",
			"User snippet configuration",
			"The prefix to used when selecting the snippet in intellisense",
			"The snippet content. Use '${id}', '${id:label}', '${1:label}' for variables and '$0', '$1' for the cursor positions",
			"The snippet description."
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"Color Theme",
			"Install Additional Color Themes...",
			"Problem setting theme: {0}",
			"Select Color Theme",
			"File Icon Theme",
			"Install Additional File Icon Themes...",
			"None",
			"Disable file icons",
			"Problem setting icon theme: {0}",
			"Select File Icon Theme",
			"Generate Color Theme From Current Settings",
			"Preferences",
			"Developer"
		],
		"vs/workbench/parts/update/electron-browser/update.contribution": [
			"Release notes",
			"Update",
			"Configure whether you receive automatic updates from an update channel. Requires a restart after change."
		],
		"vs/workbench/parts/nps/electron-browser/nps.contribution": [
			"Do you mind taking a quick feedback survey?",
			"Take Survey",
			"Remind Me later",
			"Don't Show Again"
		],
		"vs/workbench/parts/performance/electron-browser/performance.contribution": [
			"Slow startup detected",
			"Sorry that you just had a slow startup. Please restart '{0}' with profiling enabled, share the profiles with us, and we will work hard to make startup great again."
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"Install '{0}' command in PATH",
			"This command is not available",
			"Shell command '{0}' successfully installed in PATH.",
			"Code will now prompt with 'osascript' for Administrator privileges to install the shell command.",
			"OK",
			"Unable to create '/usr/local/bin'.",
			"Cancel",
			"Aborted",
			"Uninstall '{0}' command from PATH",
			"This command is not available",
			"Shell command '{0}' successfully uninstalled from PATH.",
			"Shell Command"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"View",
			"Help",
			"File",
			"Controls if opened editors should show in tabs or not.",
			"Controls the position of the editor's tabs close buttons or disables them when set to 'off'.",
			"Controls if opened editors should show with an icon or not. This requires an icon theme to be enabled as well.",
			"Controls if opened editors show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).",
			"Controls if opened editors from Quick Open show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).",
			"Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the current active one. Select 'first' or 'last' to open editors independently from the currently active one.",
			"Controls if an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, e.g. when forcing an editor to open in a specific group or to the side of the currently active group.",
			"Controls if Quick Open should close automatically once it loses focus.",
			"Controls if opening settings also opens an editor showing all default settings.",
			"Controls the location of the sidebar. It can either show on the left or right of the workbench.",
			"Controls the visibility of the status bar at the bottom of the workbench.",
			"Controls the visibility of the activity bar in the workbench.",
			"Controls if editors showing a file should close automatically when the file is deleted or renamed by some other process. Disabling this will keep the editor open as dirty on such an event. Note that deleting from within the application will always close the editor and that dirty files will never close to preserve your data.",
			"Navigate between open files using three-finger swipe horizontally.",
			"Workbench",
			"Files will open in a new window",
			"Files will open in the window with the files' folder open or the last active window",
			"Files will open in the window with the files' folder open or the last active window unless opened via the dock or from finder (macOS only)",
			"Controls if files should open in a new window.\n- default: files will open in the window with the files' folder open or the last active window unless opened via the dock or from finder (macOS only)\n- on: files will open in a new window\n- off: files will open in the window with the files' folder open or the last active window\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Folders will open in a new window",
			"Folders will replace the last active window",
			"Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)",
			"Controls if folders should open in a new window or replace the last active window.\n- default: folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)\n- on: folders will open in a new window\n- off: folders will replace the last active window\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Never reopen a folder.",
			"Reopen the last active folder.",
			"Reopen all folders of the last session.",
			"Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.",
			"Controls if a window should restore to full screen mode if it was exited in full screen mode.",
			"Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
			"Controls the window title based on the active editor. Variables are substituted based on the context:\n${activeEditorShort}: e.g. myFile.txt\n${activeEditorMedium}: e.g. myFolder/myFile.txt\n${activeEditorLong}: e.g. /Users/Development/myProject/myFolder/myFile.txt\n${rootName}: e.g. myProject\n${rootPath}: e.g. /Users/Development/myProject\n${appName}: e.g. VS Code\n${dirty}: a dirty indicator if the active editor is dirty\n${separator}: a conditional separator (\" - \") that only shows when surrounded by variables with values",
			"Open new windows in the center of the screen.",
			"Open new windows with same dimension as last active one.",
			"Open new windows maximized.",
			"Open new windows in full screen mode.",
			"Controls the dimensions of opening a new window. By default, a new window will open in the center of the screen with small dimensions. When set to  'inherit', the window will get the same dimensions as the last active one. When set to 'maximized', the window will open maximized and fullscreen if configured to 'fullscreen'.",
			"Menu is only hidden in full screen mode.",
			"Menu is always visible even in full screen mode.",
			"Menu is hidden but can be displayed via Alt key.",
			"Menu is always hidden.",
			"Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. By default, the menu bar will be visible, unless the window is full screen.",
			"If enabled, will automatically change to high contrast theme if Windows is using a high contrast theme, and to dark theme when switching away from a Windows high contrast theme.",
			"Adjust the appearance of the window title bar. Changes require a full restart to apply.",
			"Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.",
			"Window",
			"Zen Mode",
			"Controls if turning on Zen Mode also puts the workbench into full screen mode.",
			"Controls if turning on Zen Mode also hides workbench tabs.",
			"Controls if turning on Zen Mode also hides the status bar at the bottom of the workbench.",
			"Controls if turning on Zen Mode also hides the activity bar at the left of the workbench.",
			"Controls if a window should restore to zen mode if it was exited in zen mode."
		],
		"vs/workbench/electron-browser/main": [
			"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.",
			"Failed to load a required file. Please restart the application to try again. Details: {0}"
		],
		"vs/workbench/parts/watermark/electron-browser/watermark": [
			"Show All Commands",
			"Go to File",
			"Open File",
			"Open Folder",
			"Open File or Folder",
			"Open Recent",
			"New Untitled File",
			"Toggle Terminal",
			"Find in Files",
			"Start Debugging",
			"Change Theme",
			"Change Keymap",
			"Keyboard Reference",
			"Keyboard Shortcuts",
			"unbound",
			"Workbench",
			"When enabled, will show the watermark tips when no editor is open."
		],
		"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay": [
			"File explorer",
			"Search across files",
			"Source code management",
			"Launch and debug",
			"Manage extensions",
			"View errors and warnings",
			"Find and run all commands",
			"User Interface Overview",
			"Hide Interface Overview",
			"Help",
			"Help"
		],
		"vs/workbench/node/extensionHostMain": [
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/platform/environment/node/argv": [
			"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.",
			"Open a diff editor. Requires to pass two file paths as arguments.",
			"Open the file at path at the line and character (add :line[:character] to path).",
			"The locale to use (e.g. en-US or zh-TW).",
			"Force a new instance of Code.",
			"Start with the 'Developer: Startup Performance' command enabled.",
			"Run CPU profiler during startup",
			"Force opening a file or folder in the last active window.",
			"Specifies the directory that user data is kept in, useful when running as root.",
			"Print verbose output (implies --wait).",
			"Wait for the window to be closed before returning.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extension.",
			"Installs an extension.",
			"Uninstalls an extension.",
			"Enables proposed api features for an extension.",
			"Disable all installed extensions.",
			"Disable GPU hardware acceleration.",
			"Print version.",
			"Print usage.",
			"Usage",
			"options",
			"paths",
			"Options"
		],
		"vs/platform/request/node/request": [
			"HTTP",
			"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables",
			"Whether the proxy server certificate should be verified against the list of supplied CAs.",
			"The value to send as the 'Proxy-Authorization' header for every network request."
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions",
			"Preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Extension invalid: package.json is not a JSON file.",
			"Please restart Code before reinstalling {0}.",
			"Please restart Code before reinstalling {0}.",
			"Installing '{0}' also installs its dependencies. Would you like to continue?",
			"Yes",
			"No",
			"Please restart Code before reinstalling {0}.",
			"Would you like to uninstall '{0}' only or its dependencies also?",
			"Only",
			"All",
			"Cancel",
			"Are you sure you want to uninstall '{0}'?",
			"OK",
			"Cancel",
			"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Could not find extension"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"Extension not found",
			"Couldn't find a compatible version of {0} with this version of Code."
		],
		"vs/platform/message/common/message": [
			"Close",
			"Later",
			"Cancel"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Telemetry",
			"Enable usage data and errors to be sent to Microsoft."
		],
		"vs/base/common/severity": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/editor/contrib/caretOperations/common/caretOperations": [
			"Move Caret Left",
			"Move Caret Right"
		],
		"vs/editor/browser/widget/diffEditorWidget": [
			"Background color for text that got inserted.",
			"Background color for text that got removed.",
			"Outline color for the text that got inserted.",
			"Outline color for text that got removed."
		],
		"vs/editor/contrib/caretOperations/common/transpose": [
			"Transpose Letters"
		],
		"vs/editor/contrib/bracketMatching/common/bracketMatching": [
			"Go to Bracket"
		],
		"vs/editor/contrib/comment/common/comment": [
			"Toggle Line Comment",
			"Add Line Comment",
			"Remove Line Comment",
			"Toggle Block Comment"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"Show Editor Context Menu"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			"Cut",
			"Copy",
			"Paste",
			"Copy With Syntax Highlighting"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"Unfold",
			"Unfold Recursively",
			"Fold",
			"Fold Recursively",
			"Fold All",
			"Unfold All",
			"Fold Level {0}"
		],
		"vs/editor/contrib/format/browser/formatActions": [
			"Made 1 formatting edit on line {0}",
			"Made {0} formatting edits on line {1}",
			"Made 1 formatting edit between lines {0} and {1}",
			"Made {0} formatting edits between lines {1} and {2}",
			"Format Document",
			"Format Selection"
		],
		"vs/editor/contrib/goToDeclaration/browser/goToDeclaration": [
			"No definition found for '{0}'",
			"No definition found",
			" – {0} definitions",
			"Go to Definition",
			"Open Definition to the Side",
			"Peek Definition",
			"No implementation found for '{0}'",
			"No implementation found",
			" – {0} implementations",
			"Go to Implementation",
			"Peek Implementation",
			"No type definition found for '{0}'",
			"No type definition found",
			" – {0} type definitions",
			"Go to Type Definition",
			"Peek Type Definition",
			"Click to show {0} definitions."
		],
		"vs/editor/contrib/hover/browser/hover": [
			"Show Hover",
			"Highlight below the word for which a hover is shown.",
			"Background color of the editor hover.",
			"Border color of the editor hover."
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"({0}/{1})",
			"Go to Next Error or Warning",
			"Go to Previous Error or Warning",
			"Editor marker navigation widget error color.",
			"Editor marker navigation widget warning color.",
			"Editor marker navigation widget background."
		],
		"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace": [
			"Replace with Previous Value",
			"Replace with Next Value"
		],
		"vs/editor/contrib/linesOperations/common/linesOperations": [
			"Copy Line Up",
			"Copy Line Down",
			"Move Line Up",
			"Move Line Down",
			"Sort Lines Ascending",
			"Sort Lines Descending",
			"Trim Trailing Whitespace",
			"Delete Line",
			"Indent Line",
			"Outdent Line",
			"Insert Line Above",
			"Insert Line Below",
			"Delete All Left",
			"Delete All Right",
			"Join Lines",
			"Transpose characters around the cursor",
			"Transform to Uppercase",
			"Transform to Lowercase"
		],
		"vs/editor/contrib/links/browser/links": [
			"Cmd + click to follow link",
			"Ctrl + click to follow link",
			"Sorry, failed to open this link because it is not well-formed: {0}",
			"Sorry, failed to open this link because its target is missing.",
			"Open Link"
		],
		"vs/editor/contrib/multicursor/common/multicursor": [
			"Add Cursor Above",
			"Add Cursor Below",
			"Add Cursors to Line Ends"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"Trigger Parameter Hints"
		],
		"vs/editor/contrib/quickFix/browser/quickFixCommands": [
			"Show Fixes ({0})",
			"Show Fixes",
			"Quick Fix"
		],
		"vs/editor/contrib/referenceSearch/browser/referenceSearch": [
			" – {0} references",
			"Find All References"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"No result.",
			"Successfully renamed '{0}' to '{1}'. Summary: {2}",
			"Sorry, rename failed to execute.",
			"Rename Symbol"
		],
		"vs/editor/contrib/smartSelect/common/smartSelect": [
			"Expand Select",
			"Shrink Select"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"Accepting '{0}' did insert the following text: {1}",
			"Trigger Suggest"
		],
		"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode": [
			"Toggle Tab Key Moves Focus"
		],
		"vs/editor/contrib/wordHighlighter/common/wordHighlighter": [
			"Background color of a symbol during read-access, like reading a variable.",
			"Background color of a symbol during write-access, like writing to a variable."
		],
		"vs/platform/extensions/common/extensionsRegistry": [
			"For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.",
			"The publisher of the VS Code extension.",
			"The display name for the extension used in the VS Code gallery.",
			"The categories used by the VS Code gallery to categorize the extension.",
			"Banner used in the VS Code marketplace.",
			"The banner color on the VS Code marketplace page header.",
			"The color theme for the font used in the banner.",
			"All contributions of the VS Code extension represented by this package.",
			"Sets the extension to be flagged as a Preview in the Marketplace.",
			"Activation events for the VS Code extension.",
			"Array of badges to display in the sidebar of the Marketplace's extension page.",
			"Badge image URL.",
			"Badge link.",
			"Badge description.",
			"Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"Script executed before the package is published as a VS Code extension.",
			"The path to a 128x128 pixel icon."
		],
		"vs/editor/common/config/commonEditorConfig": [
			"Editor",
			"Controls the font family.",
			"Controls the font weight.",
			"Controls the font size in pixels.",
			"Controls the line height. Use 0 to compute the lineHeight from the fontSize.",
			"Controls the display of line numbers. Possible values are 'on', 'off', and 'relative'. 'relative' shows the line count from the current cursor position.",
			"Columns at which to show vertical rulers",
			"Characters that will be used as word separators when doing word related navigations or operations",
			"The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'number'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"Insert spaces when pressing Tab. This setting is overriden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'boolean'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.",
			"Controls if selections have rounded corners",
			"Controls if the editor will scroll beyond the last line",
			"Controls if the minimap is shown",
			"Render the actual characters on a line (as opposed to color blocks)",
			"Limit the width of the minimap to render at most a certain number of columns",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `editor.wordWrapColumn`.",
			"Lines will wrap at the minimum of viewport and `editor.wordWrapColumn`.",
			"Controls how lines should wrap. Can be:\n - 'off' (disable wrapping),\n - 'on' (viewport wrapping),\n - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or\n - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).",
			"Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.",
			"Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls if suggestions should automatically show up while typing",
			"Controls the delay in ms after which quick suggestions will show up",
			"Enables parameter hints",
			"Controls if the editor should automatically close brackets after opening them",
			"Controls if the editor should automatically format the line after typing",
			"Controls if the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls if suggestions should automatically show up when typing trigger characters",
			"Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls if suggestions should be accepted on commit characters. For instance in JavaScript the semi-colon (';') can be a commit character that accepts a suggestion and types that character.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether completions should be computed based on words in the document.",
			"Font size for the suggest widget",
			"Line height for the suggest widget",
			"Controls whether the editor should highlight similar matches to the selection",
			"Controls whether the editor should highlight semantic symbol occurrences",
			"Controls the number of decorations that can show up at the same position in the overview ruler",
			"Controls if a border should be drawn around the overview ruler.",
			"Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'",
			"Zoom the font of the editor when using mouse wheel and holding Ctrl",
			"Controls the cursor style, accepted values are 'block', 'block-outline', 'line', 'line-thin', 'underline' and 'underline-thin'",
			"Enables font ligatures",
			"Controls if the cursor should be hidden in the overview ruler.",
			"Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.",
			"Controls whether the editor should render control characters",
			"Controls whether the editor should render indent guides",
			"Controls how the editor should render the current line highlight, possibilities are 'none', 'gutter', 'line', and 'all'.",
			"Controls if the editor shows code lenses",
			"Controls whether the editor has code folding enabled",
			"Highlight matching brackets when one of them is selected.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Inserting and deleting whitespace follows tab stops",
			"Remove trailing auto inserted whitespace",
			"Keep peek editors open even when double clicking their content or when hitting Escape.",
			"Controls if the editor should allow to move selections via drag and drop.",
			"Controls if the diff editor shows the diff side by side or inline",
			"Controls if the diff editor shows changes in leading or trailing whitespace as diffs",
			"Controls if the diff editor shows +/- indicators for added/removed changes",
			"Controls if the Linux primary clipboard should be supported."
		],
		"vs/platform/theme/common/colorRegistry": [
			"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA",
			"Colors used in the workbench.",
			"Overall foreground color. This color is only used if not overridden by a component.",
			"Overall border color for focused elements. This color is only used if not overridden by a component.",
			"An extra border around elements to separate them from others for greater contrast.",
			"An extra border around active elements to separate them from others for greater contrast.",
			"Shadow color of widgets such as find/replace inside the editor.",
			"Input box background.",
			"Input box foreground.",
			"Input box border.",
			"Border color of activated options in input fields.",
			"Input validation background color for information severity.",
			"Input validation border color for information severity.",
			"Input validation background color for information warning.",
			"Input validation border color for warning severity.",
			"Input validation background color for error severity.",
			"Input validation border color for error severity.",
			"Dropdown background.",
			"Dropdown foreground.",
			"Dropdown border.",
			"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background when hovering over items using the mouse.",
			"List/Tree drag and drop background when moving items around using the mouse.",
			"List/Tree foreground color of the match highlights when searching inside the list/tree.",
			"Quick picker color for grouping labels.",
			"Quick picker color for grouping borders.",
			"Button foreground color.",
			"Button background color.",
			"Button background color when hovering.",
			"Scrollbar shadow to indicate that the view is scrolled.",
			"Slider background color.",
			"Slider background color when hovering.",
			"Slider background color when active.",
			"Editor background color.",
			"Editor default foreground color.",
			"Color of the editor selection.",
			"Color of the selection in an inactive editor.",
			"Color for regions with the same content as the selection.",
			"Color of the current search match.",
			"Color of the other search matches.",
			"Color the range limiting the search.",
			"Color of active links.",
			"Background color of editor widgets, such as find/replace."
		],
		"vs/workbench/parts/preferences/browser/preferencesEditor": [
			"Default Settings",
			"Search settings",
			"Search Settings",
			"Total {0} Settings",
			"No Results",
			"1 Setting matched",
			"{0} Settings matched",
			"Default preferences. Readonly text editor."
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditor": [
			"Keyboard Shortcuts",
			"Search keybindings",
			"Search keybindings",
			"Sort by Precedence",
			"For advanced customizations open and edit",
			"keybindings.json",
			"Keybindings",
			"Change Keybinding",
			"Add Keybinding",
			"Remove Keybinding",
			"Reset Keybinding",
			"Show Conflicts",
			"Copy",
			"Error '{0}' while editing keybinding. Please open 'keybindings.json' file and check.",
			"Command",
			"Keybinding",
			"Source",
			"When",
			"Change Keybinding {0}",
			"Change Keybinding",
			"Add Keybinding {0}",
			"Add Keybinding",
			"Command is {0}.",
			"Keybinding is {0}.",
			"No Keybinding assigned.",
			"Source is {0}.",
			"When is {0}.",
			"No when context."
		],
		"vs/workbench/parts/preferences/browser/preferencesActions": [
			"Open User Settings",
			"Open Keyboard Shortcuts",
			"Open Keyboard Shortcuts File",
			"Open Workspace Settings",
			"Configure Language Specific Settings...",
			"({0})",
			"Select Language"
		],
		"vs/workbench/parts/preferences/browser/preferencesService": [
			"Open a folder first to create workspace settings",
			"Place your key bindings in this file to overwrite the defaults",
			"Default Keybindings",
			"Place your settings in this file to overwrite the default settings",
			"Place your settings in this file to overwrite default and user settings.",
			"Unable to create '{0}' ({1})."
		],
		"vs/workbench/parts/preferences/browser/keybindingWidgets": [
			"Press desired key combination and ENTER. ESCAPE to cancel.",
			"chord to"
		],
		"vs/workbench/parts/preferences/browser/preferencesWidgets": [
			"Settings Switcher",
			"User Settings",
			"Workspace Settings"
		],
		"vs/base/common/json": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		],
		"vs/workbench/browser/quickopen": [
			"No results matching",
			"No results found",
			"{0}, command",
			"No commands matching"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"Go to Symbol in File...",
			"symbols ({0})",
			"methods ({0})",
			"functions ({0})",
			"constructors ({0})",
			"variables ({0})",
			"classes ({0})",
			"interfaces ({0})",
			"namespaces ({0})",
			"packages ({0})",
			"modules ({0})",
			"properties ({0})",
			"enumerations ({0})",
			"strings ({0})",
			"rules ({0})",
			"files ({0})",
			"arrays ({0})",
			"numbers ({0})",
			"booleans ({0})",
			"objects ({0})",
			"keys ({0})",
			"{0}, symbols",
			"No symbols matching",
			"No symbols found",
			"Type to narrow down symbols of the currently active editor.",
			"No symbol information for the file",
			"Open a text file first to go to a symbol"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"Show All Commands",
			"{0}, {1}, commands",
			"{0}, commands",
			"Command '{0}' can not be run from here.",
			"Command '{0}' is not enabled in the current context.",
			"Command '{0}' is not enabled in the current context.",
			"{0}: {1}",
			"{0}: {1}",
			"No commands matching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"Go to Line...",
			"Type a line number between 1 and {0} to navigate to",
			"Type a line number to navigate to",
			"Go to line {0} and character {1}",
			"Go to line {0}",
			"Type a line number to navigate to.",
			"Open a text file first to go to a line"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"{0}, picker help",
			"global commands",
			"editor commands"
		],
		"vs/workbench/parts/quickopen/browser/viewPickerHandler": [
			"{0}, view picker",
			"Views",
			"Panels",
			"Terminal",
			"{0}: {1}",
			"Output",
			"Open View",
			"Quick Open View"
		],
		"vs/workbench/browser/viewlet": [
			"Collapse All",
			"{0} actions",
			"{0} actions"
		],
		"vs/workbench/parts/files/browser/views/explorerViewer": [
			"Type file name. Press Enter to confirm or Escape to cancel.",
			"{0}, Files Explorer",
			"'{0}' already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace"
		],
		"vs/workbench/parts/files/browser/views/explorerView": [
			"Files Explorer Section",
			"Files Explorer"
		],
		"vs/workbench/parts/files/browser/views/emptyView": [
			"Files Explorer Section",
			"No Folder Opened",
			"You have not yet opened a folder.",
			"Open Folder"
		],
		"vs/workbench/parts/files/browser/views/openEditorsView": [
			"Open Editors Section",
			"Open Editors",
			"Open Editors: List of Active Files",
			"{0} unsaved"
		],
		"vs/workbench/services/editor/browser/editorService": [
			"{0} ↔ {1}"
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"{0}, picker",
			"picker"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			"{0} ({1})"
		],
		"vs/workbench/parts/files/browser/fileActions": [
			"Retry",
			"Rename",
			"Rename",
			"New File",
			"New Folder",
			"Open a folder first to create files or folders within.",
			"New Untitled File",
			"New File",
			"New Folder",
			"New File",
			"New Folder",
			"&&Move to Recycle Bin",
			"&&Move to Trash",
			"&&Delete",
			"You are deleting a folder with unsaved changes in 1 file. Do you want to continue?",
			"You are deleting a folder with unsaved changes in {0} files. Do you want to continue?",
			"You are deleting a file with unsaved changes. Do you want to continue?",
			"Your changes will be lost if you don't save them.",
			"Are you sure you want to delete '{0}' and its contents?",
			"Are you sure you want to delete '{0}'?",
			"You can restore from the recycle bin.",
			"You can restore from the trash.",
			"Are you sure you want to permanently delete '{0}' and its contents?",
			"Are you sure you want to permanently delete '{0}'?",
			"This action is irreversible!",
			"Delete Permanently",
			"Delete",
			"Import Files",
			"A file or folder with the same name already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace",
			"Copy",
			"Paste",
			"Duplicate",
			"Open to the Side",
			"Select for Compare",
			"Compare Active File With...",
			"Select a previously opened file to compare with",
			"The selected file can not be compared with '{0}'.",
			"Open a file first to compare it with another file.",
			"Compare with '{0}'",
			"Compare Files",
			"Refresh",
			"Save",
			"Save As...",
			"Save All",
			"Save All in Group",
			"Save Dirty Files",
			"Revert File",
			"Focus on Open Editors View",
			"Focus on Files Explorer",
			"Reveal Active File in Side Bar",
			"Open a file first to show it in the explorer",
			"Collapse Folders in Explorer",
			"Refresh Explorer",
			"Open File...",
			"Open Active File in New Window",
			"Open a file first to open in new window",
			"Reveal in Explorer",
			"Reveal in Finder",
			"Open Containing Folder",
			"Reveal Active File in Windows Explorer",
			"Reveal Active File in Finder",
			"Open Containing Folder of Active File",
			"Copy Path",
			"Copy Path of Active File",
			"A file or folder name must be provided.",
			"A file or folder **{0}** already exists at this location. Please choose a different name.",
			"The name **{0}** is not valid as a file or folder name. Please choose a different name.",
			"The name **{0}** results in a path that is too long. Please choose a shorter name."
		],
		"vs/workbench/parts/files/browser/saveErrorHandler": [
			"Discard",
			"Overwrite",
			"Retry",
			"Failed to save '{0}': File is write protected. Select 'Overwrite' to remove protection.",
			"Failed to save '{0}': {1}",
			"Failed to save '{0}': The content on disk is newer. Click on **Compare** to compare your version with the one on disk.",
			"Compare",
			"{0} (on disk) ↔ {1} (in {2}) - Resolve save conflict",
			"Use the actions in the editor tool bar to either **undo** your changes or **overwrite** the content on disk with your changes"
		],
		"vs/workbench/browser/actions/fileActions": [
			"Open Folder...",
			"Open..."
		],
		"vs/workbench/parts/files/browser/fileCommands": [
			"Open a file first to copy its path",
			"Open a file first to reveal"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Configuration Overrides",
			"Configure editor settings to be overridden for {0} language.",
			"Configure editor settings to be overridden for a language.",
			"Contributes configuration settings.",
			"A summary of the settings. This label will be used in the settings file as separating comment.",
			"Description of the configuration properties.",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered.",
			"'configuration.properties' must be an object",
			"if set, 'configuration.type' must be set to 'object",
			"'configuration.title' must be a string",
			"Contributes default editor configuration settings by language."
		],
		"vs/workbench/parts/files/common/editors/fileEditorInput": [
			"{0} (deleted from disk)"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"Text File Editor",
			"Create File",
			"{0}. Text file editor.",
			"Text file editor."
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"Binary File Viewer"
		],
		"vs/workbench/parts/files/common/dirtyFilesTracker": [
			"{0} unsaved files"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"Show Next Search Term",
			"Show Previous Search Term",
			"Focus Next Input Box",
			"Focus Previous Input Box",
			"Replace in Files",
			"Find in Folder",
			"Refresh",
			"Clear Search Results",
			"Focus Next Search Result",
			"Focus Previous Search Result",
			"Remove",
			"Replace All",
			"Replace",
			"Open Settings"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"Replace All (Submit Search to Enable)",
			"Replace All",
			"Toggle Replace",
			"Search: Type Search Term and press Enter to search or Escape to cancel",
			"Search",
			"Replace: Type replace term and press Enter to preview or Escape to cancel",
			"Replace",
			"Expression matches everything"
		],
		"vs/workbench/parts/output/common/output": [
			"Output",
			"for '{0}'"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"{0}, symbols picker",
			"symbol results",
			"No symbols matching",
			"Type to search for symbols"
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"{0}, file picker",
			"search results"
		],
		"vs/workbench/parts/scm/electron-browser/scmActivity": [
			"{0} pending changes"
		],
		"vs/base/browser/ui/aria/aria": [
			"{0} (occurred again)"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"input"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"{0} matches found",
			"{0} match found",
			"{0} matches in file {1} of folder {2}, Search result",
			"Replace preview result, {0}",
			"{0}, Search result"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"input",
			"Use Glob Patterns",
			"The pattern to match. e.g. **\\*\\*/*.js** to match all JavaScript files or **myFolder/\\*\\*** to match that folder with all children.\n\n**Reference**:\n**\\*** matches 0 or more characters\n**?** matches 1 character\n**\\*\\*** matches zero or more directories\n**[a-z]** matches a range of characters\n**{a,b}** matches any of the patterns)",
			"Use Ignore Files",
			"Use Exclude Settings"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"{0} ({1})"
		],
		"vs/workbench/parts/scm/electron-browser/scmMenus": [
			"Switch SCM Provider..."
		],
		"vs/workbench/parts/git/browser/gitWorkbenchContributions": [
			"Running git status",
			"{0} pending changes",
			"Show Git",
			"Git",
			"Git",
			"View",
			"Git Commands",
			"Git",
			"Is git enabled",
			"Path to the git executable",
			"Whether auto refreshing is enabled",
			"Whether auto fetching is enabled.",
			"Whether long commit messages should be warned about.",
			"Always allow large repositories to be managed by Code.",
			"Confirm before synchronizing git repositories.",
			"Controls the git badge counter.",
			"Controls what type of branches are listed."
		],
		"vs/workbench/parts/git/electron-browser/gitActions": [
			"Provide a valid git repository URL",
			"Repository URL",
			"Provide a valid git repository URL",
			"Destination clone directory",
			"Cloning repository '{0}'...",
			"Destination repository already exists, please pick another directory to clone to."
		],
		"vs/workbench/parts/git/browser/views/changes/changesView": [
			"Please provide a commit message. You can always press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.",
			"Once there are some changes to commit, type in the commit message and either press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.",
			"It is recommended to keep the commit's first line under 50 characters. Feel free to use more lines for extra information.",
			"Message (press {0} to commit)",
			"Git: Type commit message and press {0} to commit",
			"Git Changes View",
			"Show Git Output"
		],
		"vs/workbench/parts/git/browser/views/empty/emptyView": [
			"This workspace isn't yet under git source control.",
			"Initialize Git Repository"
		],
		"vs/workbench/parts/git/browser/views/gitless/gitlessView": [
			"You can either install it with {0}, download it from {1} or install the {2} command line developer tools, by simply typing {3} on a Terminal prompt.",
			"You can either install it with {0} or download it from {1}.",
			"You can download it from {0}.",
			"You can download it from {0}.",
			"It looks like git is not installed on your system.",
			"Once git is installed, please restart VSCode."
		],
		"vs/workbench/parts/git/browser/views/notroot/notrootView": [
			"This directory seems to be contained in a git repository.",
			"Open the repository's root directory in order to access Git features."
		],
		"vs/workbench/parts/git/browser/views/disabled/disabledView": [
			"Git is disabled in the settings."
		],
		"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView": [
			"You have not yet opened a folder.",
			"Open a folder with a Git repository in order to access Git features.",
			"Open Folder"
		],
		"vs/workbench/parts/git/browser/views/huge/hugeView": [
			"Your repository appears to have many active changes.\nThis can cause Code to become very slow.",
			"You can permanently disable this warning with the following setting:",
			"Allow large repositories"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"Text Diff Editor",
			"{0}. Readonly text compare editor.",
			"Readonly text compare editor.",
			"{0}. Text file compare editor.",
			"Text file compare editor.",
			"Next Change",
			"Previous Change",
			"Switch to Inline View",
			"Switch to Side by Side View"
		],
		"vs/workbench/browser/parts/editor/textEditor": [
			"{0}, Group {1}."
		],
		"vs/workbench/parts/git/browser/gitActions": [
			"Open Change",
			"Open File",
			"Init",
			"Refresh",
			"Stage",
			"Stage All",
			"Are you sure you want to clean all changes?",
			"There are unstaged changes in {0} file.\n\nThis action is irreversible!",
			"There are unstaged changes in {0} files.\n\nThis action is irreversible!",
			"&&Clean Changes",
			"Are you sure you want to clean changes in '{0}'?",
			"This action is irreversible!",
			"&&Clean Changes",
			"Clean",
			"Clean All",
			"Unstage",
			"Unstage All",
			"Can't checkout. Please commit or stash your work first.",
			"Commit Staged",
			"Commit Staged (Amend)",
			"Commit Staged (Signed Off)",
			"Commit",
			"Commit Message",
			"Commit All",
			"Commit All (Signed Off)",
			"Commit All",
			"Commit Staged",
			"Can't pull. Please commit or stash your work first.",
			"Authentication failed on the git remote.",
			"Authentication failed on the git remote.",
			"Push to...",
			"Pick a remote to push the branch '{0}' to:",
			"Authentication failed on the git remote.",
			"Publish",
			"Are you sure you want to publish '{0}' to '{1}'?",
			"&&Publish",
			"Pick a remote to publish the branch '{0}' to:",
			"Authentication failed on the git remote.",
			"This action will push and pull commits to and from '{0}'.",
			"OK",
			"Cancel",
			"OK, Never Show Again",
			"Authentication failed on the git remote.",
			"Undo Last Commit"
		],
		"vs/workbench/parts/debug/electron-browser/debugViews": [
			"Variables Section",
			"Variables",
			"Debug Variables",
			"Expressions Section",
			"Watch",
			"Debug Watch Expressions",
			"Call Stack Section",
			"Paused on {0}",
			"Call Stack",
			"Debug Call Stack",
			"Breakpoints Section",
			"Breakpoints",
			"Debug Breakpoints"
		],
		"vs/workbench/parts/debug/browser/debugEditorModelManager": [
			"Disabled Breakpoint",
			"Unverified Breakpoint",
			"Unverified breakpoint. File is modified, please restart debug session.",
			"Conditional breakpoints not supported by this debug type"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"Open {0}",
			"Configure or Fix 'launch.json'",
			"Start Debugging",
			"Start Without Debugging",
			"Select and Start Debugging",
			"Restart",
			"Reconnect",
			"Step Over",
			"Step Into",
			"Step Out",
			"Stop",
			"Disconnect",
			"Continue",
			"Pause",
			"Restart Frame",
			"Remove Breakpoint",
			"Remove All Breakpoints",
			"Enable Breakpoint",
			"Disable Breakpoint",
			"Enable All Breakpoints",
			"Disable All Breakpoints",
			"Activate Breakpoints",
			"Deactivate Breakpoints",
			"Reapply All Breakpoints",
			"Add Function Breakpoint",
			"Rename Function Breakpoint",
			"Add Conditional Breakpoint...",
			"Edit Breakpoint...",
			"Set Value",
			"Add Expression",
			"Edit Expression",
			"Add to Watch",
			"Remove Expression",
			"Remove All Expressions",
			"Clear Console",
			"Debug Console",
			"New Output in Debug Console",
			"Focus Debug Console",
			"Focus Process",
			"Step Back",
			"Reverse"
		],
		"vs/workbench/parts/debug/browser/debugActionsWidget": [
			"Debug toolbar background color."
		],
		"vs/workbench/parts/debug/browser/debugContentProvider": [
			"Unable to resolve the resource without a debug session"
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"Only primitive values are shown for this object.",
			"Debugging started.",
			"Debugging paused, reason {0}, {1} {2}",
			"Debugging stopped.",
			"Added breakpoint, line {0}, file {1}",
			"Removed breakpoint, line {0}, file {1}",
			"Compound must have \"configurations\" attribute set in order to start multiple configurations.",
			"Configuration '{0}' is missing in 'launch.json'.",
			"Configured debug type '{0}' is not supported.",
			"Missing property 'type' for the chosen launch configuration.",
			"Build errors have been detected during preLaunchTask '{0}'.",
			"Build error has been detected during preLaunchTask '{0}'.",
			"The preLaunchTask '{0}' terminated with exit code {1}.",
			"Debug Anyway",
			"The active file can not be debugged. Make sure it is saved on disk and that you have a debug extension installed for that file type.",
			"Please set up the launch configuration file for your application. {0}",
			"Could not find the preLaunchTask '{0}'.",
			"There is a task {0} running. Can not run pre launch task {1}."
		],
		"vs/workbench/parts/debug/electron-browser/statusbarColorProvider": [
			"Status bar background color when a program is being debugged. The status bar is shown in the bottom of the window"
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"Remove Breakpoints",
			"Remove Breakpoint on Column {0}",
			"Remove Line Breakpoint",
			"Edit Breakpoints",
			"Edit Breakpoint on Column {0}",
			"Edit Line Breakpoint",
			"Enable/Disable Breakpoints",
			"Disable Breakpoint on Column {0}",
			"Disable Line Breakpoint",
			"Enable Breakpoint on Column {0}",
			"Enable Line Breakpoint",
			"Add Breakpoint",
			"Add Configuration..."
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"Object state is captured from first evaluation",
			"Click to follow (Cmd + click opens to the side)",
			"Click to follow (Ctrl + click opens to the side)",
			"Variable {0} has value {1}, read eval print loop, debug",
			"Expression {0} has value {1}, read eval print loop, debug",
			"{0}, read eval print loop, debug",
			"Output variable {0} has value {1}, read eval print loop, debug"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"Add Configuration...",
			"No Configurations"
		],
		"vs/workbench/parts/markers/electron-browser/markersElectronContributions": [
			"Copy"
		],
		"vs/workbench/parts/markers/common/messages": [
			"View",
			"Show Problems",
			"Problems View",
			"Controls if Problems view should automatically reveal files when opening them",
			"Problems",
			"Problems grouped by files",
			"No problems have been detected in the workspace so far.",
			"No results found with provided filter criteria",
			"Filter Problems",
			"Filter by type or text",
			"errors",
			"warnings",
			"infos",
			"1 Error",
			"{0} Errors",
			"1 Warning",
			"{0} Warnings",
			"1 Info",
			"{0} Infos",
			"1 Unknown",
			"{0} Unknowns",
			"({0}, {1})",
			"{0} with {1} problems",
			"Error generated by {0}: {1} at line {2} and character {3}",
			"Error: {0} at line {1} and character {2}",
			"Warning generated by {0}: {1} at line {2} and character {3}",
			"Warning: {0} at line {1} and character {2}",
			"Info generated by {0}: {1} at line {2} and character {3}",
			"Info: {0} at line {1} and character {2}",
			"Problem generated by {0}: {1} at line {2} and character {3}",
			"Problem: {0} at line {1} and character {2}",
			"Show Errors and Warnings"
		],
		"vs/workbench/parts/html/browser/htmlPreviewPart": [
			"Invalid editor input."
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart": [
			"unbound",
			"It looks like Git is not installed on your system."
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughActions": [
			"Scroll Up (Line)",
			"Scroll Down (Line)",
			"Scroll Up (Page)",
			"Scroll Down (Page)"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough": [
			"Interactive Playground",
			"Interactive Playground"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"The '{0}' extension is recommended for this file type.",
			"Show Recommendations",
			"Don't show again",
			"Close",
			"This workspace has extension recommendations.",
			"Show Recommendations",
			"Don't show again",
			"Close"
		],
		"vs/workbench/parts/extensions/node/extensionsWorkbenchService": [
			"Enabling '{0}' also enable its dependencies. Would you like to continue?",
			"Yes",
			"No",
			"Would you like to disable '{0}' only or its dependencies also?",
			"Only",
			"All",
			"Cancel",
			"Cannot disable extension '{0}'. Extension '{1}' depends on this.",
			"Cannot disable extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot disable extension '{0}'. Extensions '{1}', '{2}' and others depend on this."
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"Open Extensions Folder",
			"Install from VSIX...",
			"Successfully installed the extension. Restart to enable it.",
			"Reload Now"
		],
		"vs/workbench/parts/extensions/browser/extensionsActions": [
			"Install",
			"Installing",
			"Uninstall",
			"Uninstalling",
			"Update",
			"Update to {0}",
			"Enable (Workspace)",
			"Enable (Always)",
			"Disable (Workspace)",
			"Disable (Always)",
			"Uninstalling",
			"Workspace",
			"Always",
			"Enable",
			"Workspace",
			"Always",
			"Disable",
			"Check for Updates",
			"Update All Extensions",
			"Reload",
			"Reload to update",
			"Reload this window to activate the updated extension '{0}'?",
			"Reload to activate",
			"Reload this window to activate the extension '{0}'?",
			"Reload to deactivate",
			"Reload this window to deactivate the extension '{0}'?",
			"Reload to deactivate",
			"Reload this window to deactivate the uninstalled extension '{0}'?",
			"&&Reload Window",
			"Show Extensions",
			"Install Extensions",
			"Show Installed Extensions",
			"Show Disabled Extensions",
			"Clear Extensions Input",
			"Show Outdated Extensions",
			"Show Popular Extensions",
			"Show Recommended Extensions",
			"Show Workspace Recommended Extensions",
			"Show Recommended Keymaps",
			"Keymaps",
			"Configure Recommended Extensions (Workspace)",
			"Recommendations are only available on a workspace folder.",
			"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).",
			"Built-in",
			"Disable All Installed Extensions",
			"Disable All Installed Extensions for this Workspace",
			"Enable All Installed Extensions",
			"Enable All Installed Extensions for this Workspace"
		],
		"vs/workbench/parts/extensions/common/extensionsInput": [
			"Extension: {0}"
		],
		"vs/workbench/parts/extensions/browser/extensionEditor": [
			"Extension name",
			"Extension identifier",
			"Publisher name",
			"Install count",
			"Rating",
			"License",
			"Details",
			"Contributions",
			"Changelog",
			"Dependencies",
			"No README available.",
			"No Changelog available.",
			"No Contributions",
			"No Dependencies",
			"Settings ({0})",
			"Name",
			"Description",
			"Default",
			"Debuggers ({0})",
			"Name",
			"Themes ({0})",
			"JSON Validation ({0})",
			"Commands ({0})",
			"Name",
			"Description",
			"Keyboard Shortcuts",
			"Menu Contexts",
			"Languages ({0})",
			"ID",
			"Name",
			"File Extensions",
			"Grammar",
			"Snippets"
		],
		"vs/workbench/parts/extensions/electron-browser/keymapExtensions": [
			"Disable other keymaps to avoid conflicts between keybindings?",
			"Yes",
			"No"
		],
		"vs/workbench/parts/extensions/common/extensionsFileTemplate": [
			"Extensions",
			"List of extensions recommendations. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.",
			"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage": [
			"Welcome",
			"Welcome",
			"The {0} keyboard shortcuts are already installed.",
			"The window will reload after installing the {0} keyboard shortcuts.",
			"OK",
			"Installing the {0} keyboard shortcuts...",
			"The {0} keyboard shortcuts with id {1} could not be found.",
			"Cancel"
		],
		"vs/workbench/parts/explorers/browser/treeExplorerService": [
			"No TreeExplorerNodeProvider with id {providerId} registered."
		],
		"vs/editor/common/modes/modesRegistry": [
			"Plain Text"
		],
		"vs/workbench/parts/explorers/browser/views/treeExplorerView": [
			"Tree Explorer Section"
		],
		"vs/workbench/browser/parts/editor/textResourceEditor": [
			"Text Editor",
			"{0}. Readonly text editor.",
			"Readonly text editor.",
			"{0}. Untitled file text editor.",
			"Untitled file text editor."
		],
		"vs/workbench/browser/parts/quickopen/quickopen.contribution": [
			"Go to File...",
			"Navigate Next in Quick Open",
			"Navigate Previous in Quick Open",
			"Select Next in Quick Open",
			"Select Previous in Quick Open"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"Toggle Output",
			"Clear Output",
			"Toggle Output Scroll Lock",
			"Switch to Output"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"Toggle Integrated Terminal",
			"Kill the Active Terminal Instance",
			"Kill Terminal",
			"Copy Selection",
			"Create New Integrated Terminal",
			"New Terminal",
			"Focus Terminal",
			"Focus Next Terminal",
			"Focus Terminal {0}",
			"Focus Previous Terminal",
			"Paste into Active Terminal",
			"Select Default Shell",
			"Run Selected Text In Active Terminal",
			"Run Active File In Active Terminal",
			"Only files on disk can be run in the terminal",
			"Switch Terminal Instance",
			"Scroll Down (Line)",
			"Scroll Down (Page)",
			"Scroll to Bottom",
			"Scroll Up (Line)",
			"Scroll Up (Page)",
			"Scroll to Top",
			"Clear"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalService": [
			"You can change the default terminal shell by selecting the customize button.",
			"Customize",
			"Cancel",
			"OK, Never Show Again",
			"Select your preferred terminal shell, you can change this later in your settings",
			"There is an active terminal session, do you want to kill it?",
			"There are {0} active terminal sessions, do you want to kill them?",
			"Yes",
			"Cancel"
		],
		"vs/editor/common/config/defaultConfig": [
			"Editor content"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"Split Editor",
			"Join Editors of Two Groups",
			"Navigate Between Editor Groups",
			"Focus Active Editor Group",
			"Focus First Editor Group",
			"Focus Second Editor Group",
			"Focus Third Editor Group",
			"Focus Previous Group",
			"Focus Next Group",
			"Open to the Side",
			"Close Editor",
			"Revert and Close Editor",
			"Close Editors to the Left",
			"Close Editors to the Right",
			"Close All Editors",
			"Close Editors in Other Groups",
			"Close Other Editors",
			"Close All Editors in Group",
			"Move Editor Group Left",
			"Move Editor Group Right",
			"Minimize Other Editor Groups",
			"Even Editor Group Widths",
			"Maximize Editor Group and Hide Sidebar",
			"Keep Editor",
			"Open Next Editor",
			"Open Previous Editor",
			"Open Next Editor in Group",
			"Open Previous Editor in Group",
			"Go Forward",
			"Go Back",
			"Reopen Closed Editor",
			"Clear Recent Files",
			"Show Editors in First Group",
			"Show Editors in Second Group",
			"Show Editors in Third Group",
			"Show Editors in Group",
			"Show All Editors",
			"Open Previous Recently Used Editor in Group",
			"Open Next Recently Used Editor in Group",
			"Open Previous Editor from History",
			"Open Next Recently Used Editor",
			"Open Previous Recently Used Editor",
			"Clear Editor History",
			"Open Last Editor in Group",
			"Move Editor Left",
			"Move Editor Right",
			"Move Editor into Previous Group",
			"Move Editor into Next Group"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalColorRegistry": [
			"'{0}' ansi color in the terminal."
		],
		"vs/base/common/errorMessage": [
			"{0}. Error code: {1}",
			"Permission Denied (HTTP {0})",
			"Permission Denied",
			"{0} (HTTP {1}: {2})",
			"{0} (HTTP {1})",
			"Unknown Connection Error ({0})",
			"An unknown connection error occurred. Either you are no longer connected to the internet or the server you are connected to is offline.",
			"{0}: {1}",
			"An unknown error occurred. Please consult the log for more details.",
			"A system error occured ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"Hide Activity Bar",
			"Active View Switcher"
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"Left",
			"Center",
			"Right",
			"Top",
			"Center",
			"Bottom",
			"Unable to open '{0}': {1}."
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"Focus into Side Bar",
			"View"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"Active Panel Switcher"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"Command '{0}' is currently not enabled and can not be run.",
			"Manage Extension"
		],
		"vs/workbench/browser/parts/titlebar/titlebarPart": [
			"[Unsupported]",
			"[Extension Development Host]"
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"{0} (Press 'Enter' to confirm or 'Escape' to cancel)",
			"Press 'Enter' to confirm your input or 'Escape' to cancel",
			"There are no entries to pick from",
			"Type '?' to get help on the actions you can take from here",
			"recently opened",
			"recently opened",
			"No results found",
			"This quick open handler can not be used in the current context",
			"{0}, recently opened",
			"Remove From History",
			"Select an editor entry to remove from history"
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to run when keybinding is triggered.",
			"Key or key sequence (separate keys with plus-sign and sequences with space, e.g Ctrl+O and Ctrl+L L for a chord",
			"Mac specific key or key sequence.",
			"Linux specific key or key sequence.",
			"Windows specific key or key sequence.",
			"Condition when the key is active.",
			"Contributes keybindings.",
			"Invalid `contributes.{0}`: {1}",
			"Here are other available commands: ",
			"Keybindings configuration",
			"Key or key sequence (separated by space)",
			"Name of the command to execute",
			"Condition when the key is active.",
			"Arguments to pass to the command to execute.",
			"Keyboard",
			"Controls the dispatching logic for key presses to use either `keydown.code` (recommended) or `keydown.keyCode`."
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"Unable to write to the configuration file (Unknown Key)",
			"Unable to write to the configuration file (Invalid Target)",
			"Unable to write settings because no folder is opened. Please open a folder first and try again.",
			"Unable to write settings. Please open **User Settings** to correct errors/warnings in the file and try again.",
			"Unable to write settings. Please open **Workspace Settings** to correct errors/warnings in the file and try again.",
			"Unable to write settings because the file is dirty. Please save the **User Settings** file and try again.",
			"Unable to write settings because the file is dirty. Please save the **Workspace Settings** file and try again."
		],
		"vs/workbench/services/keybinding/common/keybindingEditing": [
			"Unable to write because the file is dirty. Please save the **Keybindings** file and try again.",
			"Unable to write keybindings. Please open **Keybindings file** to correct errors/warnings in the file and try again.",
			"Unable to write keybindings. **Keybindings file** has an object which is not of type Array. Please open the file to clean up and try again.",
			"Place your key bindings in this file to overwrite the defaults"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.",
			"Download .NET Framework 4.5",
			"Don't Show Again",
			"Failed to move '{0}' to the trash"
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"Do you want to save the changes you made to {0}?",
			"Do you want to save the changes to the following {0} files?",
			"...1 additional file not shown",
			"...{0} additional files not shown",
			"&&Save All",
			"&&Save",
			"Do&&n't Save",
			"Cancel",
			"Your changes will be lost if you don't save them.",
			"All Files",
			"No Extension"
		],
		"vs/workbench/services/progress/browser/progressService2": [
			"{0} - {1}",
			"{0}: {1}"
		],
		"vs/workbench/parts/emmet/node/actions/balance": [
			"Emmet: Balance (inward)",
			"Emmet: Balance (outward)"
		],
		"vs/workbench/parts/emmet/node/actions/expandAbbreviation": [
			"Emmet: Expand Abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/matchingPair": [
			"Emmet: Go to Matching Pair"
		],
		"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation": [
			"Emmet: Wrap with Abbreviation",
			"Enter Abbreviation",
			"Abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/selectItem": [
			"Emmet: Select Previous Item",
			"Emmet: Select Next Item"
		],
		"vs/workbench/parts/emmet/node/actions/editPoints": [
			"Emmet: Previous Edit Point",
			"Emmet: Next Edit Point"
		],
		"vs/workbench/parts/emmet/node/actions/toggleComment": [
			"Emmet: Toggle Comment"
		],
		"vs/workbench/parts/emmet/node/actions/splitJoinTag": [
			"Emmet: Split/Join Tag"
		],
		"vs/workbench/parts/emmet/node/actions/mergeLines": [
			"Emmet: Merge Lines"
		],
		"vs/workbench/parts/emmet/node/actions/removeTag": [
			"Emmet: Remove Tag"
		],
		"vs/workbench/parts/emmet/node/actions/updateImageSize": [
			"Emmet: Update Image Size"
		],
		"vs/workbench/parts/emmet/node/actions/evaluateMath": [
			"Emmet: Evaluate Math Expression"
		],
		"vs/workbench/parts/emmet/node/actions/incrementDecrement": [
			"Emmet: Increment by 0.1",
			"Emmet: Increment by 1",
			"Emmet: Increment by 10",
			"Emmet: Decrement by 0.1",
			"Emmet: Decrement by 1",
			"Emmet: Decrement by 10"
		],
		"vs/workbench/parts/emmet/node/actions/updateTag": [
			"Emmet: Update Tag",
			"Enter Tag",
			"Tag"
		],
		"vs/workbench/parts/emmet/node/actions/reflectCssValue": [
			"Emmet: Reflect CSS Value"
		],
		"vs/workbench/parts/emmet/browser/actions/showEmmetCommands": [
			"Show Emmet Commands"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter": [
			"Toggle Control Characters"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace": [
			"Toggle Render Whitespace"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap": [
			"View: Toggle Word Wrap",
			"Cannot toggle word wrap in a diff editor.",
			"Disable wrapping for this file",
			"Enable wrapping for this file"
		],
		"vs/workbench/parts/codeEditor/electron-browser/wordWrapMigration": [
			"OK",
			"Don't show again",
			"Open Settings",
			"The setting `editor.wrappingColumn` has been deprecated in favor of `editor.wordWrap`."
		],
		"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings": [
			"Developer: Inspect Key Mappings"
		],
		"vs/base/common/processes": [
			"Error: executable info must define a command of type string.",
			"Warning: isShellCommand must be of type boolean. Ignoring value {0}.",
			"Warning: args must be of type string[]. Ignoring value {0}.",
			"Warning: options.cwd must be of type string. Ignoring value {0}."
		],
		"vs/platform/markers/common/problemMatcher": [
			"The loop property is only supported on the last line matcher.",
			"The problem pattern is missing a regular expression.",
			"The problem pattern is invalid. It must have at least a file, message and line or location match group.",
			"Error: The string {0} is not a valid regular expression.\n",
			"The regular expression to find an error, warning or info in the output.",
			"The match group index of the filename. If omitted 1 is used.",
			"The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted (line,column) is assumed.",
			"The match group index of the problem's line. Defaults to 2",
			"The match group index of the problem's line character. Defaults to 3",
			"The match group index of the problem's end line. Defaults to undefined",
			"The match group index of the problem's end line character. Defaults to undefined",
			"The match group index of the problem's severity. Defaults to undefined",
			"The match group index of the problem's code. Defaults to undefined",
			"The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.",
			"In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.",
			"The name of the problem pattern.",
			"The name of the problem multi line problem pattern.",
			"The actual patterns.",
			"Contributes problem patterns",
			"Invalid problem pattern. The pattern will be ignored.",
			"Invalid problem pattern. The pattern will be ignored.",
			"Error: the description can't be converted into a problem matcher:\n{0}\n",
			"Error: the description doesn't define a valid problem pattern:\n{0}\n",
			"Error: the description doesn't define an owner:\n{0}\n",
			"Error: the description doesn't define a file location:\n{0}\n",
			"Info: unknown severity {0}. Valid values are error, warning and info.\n",
			"Error: the pattern with the identifier {0} doesn't exist.",
			"Error: the pattern property refers to an empty identifier.",
			"Error: the pattern property {0} is not a valid pattern variable name.",
			"A problem matcher must define both a begin pattern and an end pattern for watching.",
			"Error: The string {0} is not a valid regular expression.\n",
			"The regular expression to detect the begin or end of a watching task.",
			"The match group index of the filename. Can be omitted.",
			"The name of a contributed or predefined pattern",
			"A problem pattern or the name of a contributed or predefined problem pattern. Can be omitted if base is specified.",
			"The name of a base problem matcher to use.",
			"The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.",
			"The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.",
			"Controls if a problem reported on a text document is applied only to open, closed or all documents.",
			"Defines how file names reported in a problem pattern should be interpreted.",
			"If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern",
			"If matched in the output the start of a watching task is signaled.",
			"If matched in the output the end of a watching task is signaled.",
			"Patterns to track the begin and end of a watching pattern.",
			"This property is deprecated. Use the watching property instead.",
			"A regular expression signaling that a watched tasks begins executing triggered through file watching.",
			"This property is deprecated. Use the watching property instead.",
			"A regular expression signaling that a watched tasks ends executing.",
			"The name of the problem matcher.",
			"Contributes problem matchers"
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"Compiles a TypeScript project",
			"Compiles a TypeScript project in watch mode",
			"Executes .NET Core build command",
			"Executes the build target",
			"Example to run an arbitrary external command",
			"Executes common maven commands"
		],
		"vs/workbench/parts/tasks/common/taskConfiguration": [
			"Warning: options.cwd must be of type string. Ignoring value {0}\n",
			"Warning: shell configuration is only supported when executing tasks in the terminal.",
			"Error: command arguments must be an array of strings. Provided value is:\n{0}",
			"Error: Problem Matcher in declare scope must have a name:\n{0}\n",
			"Warning: the defined problem matcher is unknown. Supported types are string | ProblemMatcher | (string | ProblemMatcher)[].\n{0}\n",
			"Error: Invalid problemMatcher reference: {0}\n",
			"Error: tasks must provide a taskName property. The task will be ignored.\n{0}\n",
			"Warning: the task '{0}' is a shell command and either the command name or one of its arguments has unescaped spaces. To ensure correct command line quoting please merge args into the command.",
			"Error: the task '{0}' neither specifies a command or a dependsOn property. The task will be ignored. Its definition is:\n{1}",
			"Error: the task '{0}' doesn't define a command. The task will be ignored. Its definition is:\n{1}"
		],
		"vs/workbench/parts/tasks/node/processTaskSystem": [
			"A unknown error has occurred while executing a task. See task output log for details.",
			"\nWatching build tasks has finished.",
			"Failed to launch external program {0} {1}.",
			"\nThe task '{0}' was terminated per user request."
		],
		"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem": [
			"A unknown error has occurred while executing a task. See task output log for details.",
			"Task - {0}",
			"Can't execute a shell command on an UNC drive."
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"Running gulp --tasks-simple didn't list any tasks. Did you run npm install?",
			"Running jake --tasks didn't list any tasks. Did you run npm install?",
			"Gulp is not installed on your system. Run npm install -g gulp to install it.",
			"Jake is not installed on your system. Run npm install -g jake to install it.",
			"Grunt is not installed on your system. Run npm install -g grunt to install it.",
			"Program {0} was not found. Message is {1}",
			"Build task named '{0}' detected.",
			"Test task named '{0}' detected."
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1": [
			"The config's version number",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration",
			"Specifies whether the command is a shell command or an external program. Defaults to false if omitted."
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2": [
			"The config's version number",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration",
			"Specifies whether the command is a shell command or an external program. Defaults to false if omitted.",
			"Another task this task depends on.",
			"The other tasks this task depends on."
		],
		"vs/workbench/common/theme": [
			"Background color of the tabs container. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Active tab background color. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Inactive tab background color. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to separate tabs from each other. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Active tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Inactive tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Background color of an editor group. Editor groups are the containers of editors. The background color shows up when dragging editor groups around.",
			"Background color of the editor group title header when tabs are disabled. Editor groups are the containers of editors.",
			"Color to separate multiple editor groups from each other. Editor groups are the containers of editors.",
			"Background color when dragging editors around.",
			"Panel background color. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Panel border color on the top separating to the editor. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Title color for the active panel. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Title color for the inactive panel. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Border color for the active panel title. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Status bar foreground color. The status bar is shown in the bottom of the window.",
			"Standard status bar background color. The status bar is shown in the bottom of the window.",
			"Status bar background color when no folder is opened. The status bar is shown in the bottom of the window.",
			"Status bar item background color when clicking. The status bar is shown in the bottom of the window.",
			"Status bar item background color when hovering. The status bar is shown in the bottom of the window.",
			"Status bar prominent items background color. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.",
			"Status bar prominent items background color when hovering. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.",
			"Activity bar background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity bar foreground color (e.g. used for the icons). The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Drag and drop feedback color for the activity bar items. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity notification badge background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity notification badge foreground color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Side bar background color. The side bar is the container for views like explorer and search.",
			"Side bar title foreground color. The side bar is the container for views like explorer and search.",
			"Side bar section header background color. The side bar is the container for views like explorer and search.",
			"Title bar foreground when the window is active. Note that this color is currently only supported on macOS.",
			"Title bar foreground when the window is inactive. Note that this color is currently only supported on macOS.",
			"Title bar background when the window is active. Note that this color is currently only supported on macOS.",
			"Title bar background when the window is inactive. Note that this color is currently only supported on macOS.",
			"Notifications foreground color. Notifications slide in from the top of the window.",
			"Notifications background color. Notifications slide in from the top of the window."
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"{0}, tasks",
			"Type the name of a task to run",
			"No tasks matching",
			"No tasks found"
		],
		"vs/workbench/parts/tasks/browser/terminateQuickOpen": [
			"Type the name of a task to terminate",
			"No tasks matching",
			"No tasks to terminate found"
		],
		"vs/workbench/parts/tasks/browser/restartQuickOpen": [
			"{0}, tasks",
			"Type the name of a task to restart",
			"No tasks matching",
			"No tasks to restart found"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}"
		],
		"vs/workbench/parts/snippets/electron-browser/TMSnippets": [
			"Contributes snippets.",
			"Language identifier for which this snippet is contributed to.",
			"Path of the snippets file. The path is relative to the extension folder and typically starts with './snippets/'.",
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsService": [
			"User Snippet",
			"{0}, {1}"
		],
		"vs/workbench/parts/snippets/electron-browser/insertSnippet": [
			"Insert Snippet"
		],
		"vs/workbench/parts/snippets/electron-browser/tabCompletion": [
			"Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled."
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"Update Now",
			"Later",
			"unassigned",
			"Release Notes",
			"Release Notes",
			"Show Release Notes",
			"Download Now",
			"Welcome to {0} v{1}! Would you like to read the Release Notes?",
			"Our license terms have changed, please go through them.",
			"Read License",
			"{0} will be updated after it restarts.",
			"There is an available update.",
			"There are no updates currently available."
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesInput": [
			"Release Notes: {0}"
		],
		"vs/workbench/api/node/mainThreadMessageService": [
			"Close",
			"Cancel",
			"OK"
		],
		"vs/workbench/api/node/mainThreadExtensionService": [
			"Overwriting extension {0} with {1}.",
			"Loading development extension at {0}",
			"Overwriting extension {0} with {1}."
		],
		"vs/platform/jsonschemas/common/jsonValidationExtensionPoint": [
			"Contributes json schema configuration.",
			"The file pattern to match, for example \"package.json\" or \"*.launch\".",
			"A schema URL ('http:', 'https:') or relative path to the extension folder ('./').",
			"'configuration.jsonValidation' must be a array",
			"'configuration.jsonValidation.fileMatch' must be defined",
			"'configuration.jsonValidation.url' must be a URL or relative path",
			"'configuration.jsonValidation.url' is an invalid relative URL: {0}",
			"'configuration.jsonValidation.url' must start with 'http:', 'https:' or './' to reference schemas located in the extension"
		],
		"vs/workbench/electron-browser/actions": [
			"Close Editor",
			"Close Window",
			"Switch Window",
			"Select a window",
			"Current Window",
			"Close Folder",
			"There is currently no folder opened in this instance to close.",
			"New Window",
			"Toggle Full Screen",
			"Toggle Menu Bar",
			"Toggle Developer Tools",
			"Zoom In",
			"Zoom Out",
			"Reset Zoom",
			"Startup Performance",
			"Reload Window",
			"Open Recent",
			"folders",
			"files",
			"Select a path (hold Cmd-key to open in new window)",
			"Select a path to open (hold Ctrl-key to open in new window)",
			"Close Notification Messages",
			"Report Issues",
			"Report Performance Issue",
			"Keyboard Shortcuts Reference",
			"Documentation",
			"Introductory Videos",
			"Toggle Shared Process",
			"Move to the View on the Left",
			"Move to the View on the Right",
			"Move to the View Above",
			"Move to the View Below",
			"Increase Current View Size",
			"Decrease Current View Size"
		],
		"vs/editor/node/languageConfigurationExtensionPoint": [
			"Errors parsing {0}: {1}",
			"The opening bracket character or string sequence.",
			"The closing bracket character or string sequence.",
			"Defines the comment symbols",
			"Defines how block comments are marked.",
			"The character sequence that starts a block comment.",
			"The character sequence that ends a block comment.",
			"The character sequence that starts a line comment.",
			"Defines the bracket symbols that increase or decrease the indentation.",
			"Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.",
			"Defines a list of scopes where the auto pairs are disabled.",
			"Defines the bracket pairs that can be used to surround a selected string."
		],
		"vs/workbench/electron-browser/commands": [
			"{0} ⟷ {1}"
		],
		"vs/workbench/electron-browser/shell": [
			"It is recommended not to run Code as 'root'.",
			"Successfully created profiles.",
			"Please create an issue and manually attach the following files:\n{0}",
			"Create Issue and Restart",
			"Restart"
		],
		"vs/base/node/processes": [
			"Can't execute a shell command on an UNC drive."
		],
		"vs/workbench/parts/git/node/git.lib": [
			"Can't open file from git",
			"File seems to be binary and cannot be opened as text"
		],
		"vs/code/electron-main/window": [
			"You can still access the menu bar by pressing the **Alt** key."
		],
		"vs/code/electron-main/windows": [
			"OK",
			"Path does not exist",
			"The path '{0}' does not seem to exist anymore on disk.",
			"Accessibility Options",
			"Reopen",
			"Keep Waiting",
			"Close",
			"The window is no longer responding",
			"You can reopen or close the window or keep waiting.",
			"Reopen",
			"Close",
			"The window has crashed",
			"We are sorry for the inconvenience! You can reopen the window to continue where you left off.",
			"New Window",
			"Opens a new window",
			"Recent Folders",
			"{0} {1}"
		],
		"vs/code/electron-main/menus": [
			"&&File",
			"&&Edit",
			"&&Selection",
			"&&View",
			"&&Go",
			"&&Debug",
			"Window",
			"&&Help",
			"New &&Window",
			"About {0}",
			"Hide {0}",
			"Hide Others",
			"Show All",
			"Quit {0}",
			"&&New File",
			"&&New File",
			"&&Open...",
			"Open &&Folder...",
			"&&Open File...",
			"&&Open File...",
			"Open &&Recent",
			"&&Save",
			"Save &&As...",
			"Save A&&ll",
			"Auto Save",
			"New &&Window",
			"Re&&vert File",
			"Clos&&e Window",
			"Close &&Folder",
			"&&Close Editor",
			"E&&xit",
			"&&Settings",
			"&&Keyboard Shortcuts",
			"&&Keymap Extensions",
			"User &&Snippets",
			"&&Color Theme",
			"File &&Icon Theme",
			"&&Preferences",
			"&&Reopen Closed Editor",
			"&&Clear Recent Files",
			"&&Undo",
			"&&Redo",
			"Cu&&t",
			"&&Copy",
			"&&Paste",
			"&&Undo",
			"&&Redo",
			"Cu&&t",
			"&&Copy",
			"&&Paste",
			"&&Find",
			"&&Replace",
			"Find &&in Files",
			"Replace &&in Files",
			"Emmet: E&&xpand Abbreviation",
			"E&&mmet...",
			"&&Toggle Line Comment",
			"Toggle &&Block Comment",
			"&&Add Cursor Above",
			"A&&dd Cursor Below",
			"Add C&&ursors to Line Ends",
			"Add &&Next Occurrence",
			"Add P&&revious Occurrence",
			"Select All &&Occurrences",
			"&&Copy Line Up",
			"Co&&py Line Down",
			"Mo&&ve Line Up",
			"Move &&Line Down",
			"&&Select All",
			"&&Select All",
			"&&Expand Selection",
			"&&Shrink Selection",
			"&&Explorer",
			"&&Search",
			"&&Git",
			"&&Debug",
			"E&&xtensions",
			"&&Output",
			"De&&bug Console",
			"&&Integrated Terminal",
			"&&Problems",
			"Additional &&Views",
			"&&Command Palette...",
			"Toggle &&Full Screen",
			"Toggle Zen Mode",
			"Toggle Menu &&Bar",
			"Split &&Editor",
			"Toggle Editor Group &&Layout",
			"&&Toggle Side Bar",
			"&&Move Side Bar Right",
			"&&Move Side Bar Left",
			"Toggle &&Panel",
			"&&Hide Status Bar",
			"&&Show Status Bar",
			"Hide &&Activity Bar",
			"Show &&Activity Bar",
			"Toggle &&Word Wrap",
			"Toggle &&Render Whitespace",
			"Toggle &&Control Characters",
			"&&Zoom In",
			"Zoom O&&ut",
			"&&Reset Zoom",
			"&&Back",
			"&&Forward",
			"&&Next Editor",
			"&&Previous Editor",
			"&&Next Used Editor in Group",
			"&&Previous Used Editor in Group",
			"Switch &&Editor",
			"&&First Group",
			"&&Second Group",
			"&&Third Group",
			"&&Next Group",
			"&&Previous Group",
			"Switch &&Group",
			"Go to &&File...",
			"Go to &&Symbol in File...",
			"Go to Symbol in &&Workspace...",
			"Go to &&Definition",
			"Go to &&Line...",
			"&&Start Debugging",
			"Start &&Without Debugging",
			"&&Stop Debugging",
			"&&Restart Debugging",
			"Open &&Configurations",
			"Add Configuration...",
			"Step &&Over",
			"Step &&Into",
			"Step O&&ut",
			"&&Continue",
			"Toggle &&Breakpoint",
			"&&Conditional Breakpoint...",
			"C&&olumn Breakpoint",
			"&&Function Breakpoint...",
			"&&New Breakpoint",
			"Disable A&&ll Breakpoints",
			"Remove &&All Breakpoints",
			"&&Install Additional Debuggers...",
			"Minimize",
			"Close",
			"Bring All to Front",
			"&&Toggle Developer Tools",
			"Accessibility &&Options",
			"Report &&Issues",
			"&&Welcome",
			"&&Documentation",
			"&&Release Notes",
			"&&Keyboard Shortcuts Reference",
			"Introductory &&Videos",
			"&&Join us on Twitter",
			"&&Search Feature Requests",
			"View &&License",
			"&&Privacy Statement",
			"&&About",
			"Restart To Update...",
			"Checking For Updates...",
			"Download Available Update",
			"Downloading Update...",
			"Installing Update...",
			"Check For Updates...",
			"\nVersion {0}\nCommit {1}\nDate {2}\nShell {3}\nRenderer {4}\nNode {5}",
			"OK"
		],
		"vs/workbench/parts/git/electron-main/askpassService": [
			"Git"
		],
		"vs/base/node/zip": [
			"{0} not found inside zip."
		],
		"vs/platform/extensions/node/extensionValidator": [
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^0.10.0, ^1.2.3, ^0.11.0, ^0.10.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}.",
			"Got empty extension description",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"Extension version is not semver compatible."
		],
		"vs/editor/common/view/editorColorRegistry": [
			"Background color for the highlight of line at the cursor position.",
			"Background color for the border around the line at the cursor position.",
			"Background color of highlighted ranges, like by quick open and find features.",
			"Color of the editor cursor.",
			"Color of whitespace characters in the editor.",
			"Color of the editor indentation guides.",
			"Color of editor line numbers."
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"Find",
			"Find",
			"Previous match",
			"Next match",
			"Find in selection",
			"Close",
			"Replace",
			"Replace",
			"Replace",
			"Replace All",
			"Toggle Replace mode",
			"Only the first 999 results are highlighted, but all find operations work on the entire text.",
			"{0} of {1}",
			"No Results"
		],
		"vs/editor/contrib/find/common/findController": [
			"Find",
			"Find Next",
			"Find Previous",
			"Find Next Selection",
			"Find Previous Selection",
			"Replace",
			"Add Selection To Next Find Match",
			"Add Selection To Previous Find Match",
			"Move Last Selection To Next Find Match",
			"Move Last Selection To Previous Find Match",
			"Select All Occurrences of Find Match",
			"Change All Occurrences"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesController": [
			"Loading..."
		],
		"vs/editor/contrib/zoneWidget/browser/peekViewWidget": [
			"Close"
		],
		"vs/editor/contrib/hover/browser/modesContentHover": [
			"Loading..."
		],
		"vs/editor/contrib/referenceSearch/browser/referencesModel": [
			"symbol in {0} on line {1} at column {2}",
			"1 symbol in {0}",
			"{0} symbols in {1}",
			"No results found",
			"Found 1 symbol in {0}",
			"Found {0} symbols in {1}",
			"Found {0} symbols in {1} files"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"{0}, hint"
		],
		"vs/editor/common/services/bulkEdit": [
			"These files have changed in the meantime: {0}",
			"Made no edits",
			"Made {0} text edits in {1} files",
			"Made {0} text edits in one file"
		],
		"vs/editor/contrib/rename/browser/renameInputField": [
			"Rename input. Type new name and press Enter to commit."
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"Background color of the suggest widget.",
			"Border color of the suggest widget.",
			"Foreground color of the suggest widget.",
			"Background color of the selected entry in the suggest widget.",
			"Color of the match highlights in the suggest widget.",
			"Read More...{0}",
			"{0}, suggestion, has details",
			"{0}, suggestion",
			"Go back",
			"Loading...",
			"No suggestions.",
			"{0}, accepted",
			"{0}, suggestion, has details",
			"{0}, suggestion"
		],
		"vs/workbench/parts/preferences/browser/preferencesRenderers": [
			"Edit",
			"Replace in Settings",
			"Copy to Settings",
			"This setting must be a User Setting. To configure PHP for the workspace, open a PHP file and click on 'PHP Path' in the status bar.",
			"This setting must be a User Setting."
		],
		"vs/workbench/parts/preferences/common/preferencesModels": [
			"Commonly Used",
			"Overwrite key bindings by placing them into your key bindings file."
		],
		"vs/workbench/parts/preferences/common/keybindingsEditorModel": [
			"Default",
			"User",
			"meta",
			"option"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"More"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"Collapse"
		],
		"vs/workbench/parts/files/browser/views/openEditorsViewer": [
			"{0}, Editor Group",
			"{0}, Open Editor",
			"Save All",
			"Close All",
			"Close",
			"Close Others",
			"Close All"
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"The file is dirty. Please save it first before reopening it with another encoding.",
			"Failed to save '{0}': {1}"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"Binary Viewer"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"{0} ↔ {1} (Replace Preview)"
		],
		"vs/base/browser/ui/findinput/findInputCheckboxes": [
			"Match Case",
			"Match Whole Word",
			"Use Regular Expression"
		],
		"vs/workbench/parts/git/browser/gitWidgets": [
			"Publish Branch",
			"Synchronize Changes",
			"Git is not enabled in this workspace."
		],
		"vs/workbench/parts/git/browser/gitServices": [
			"Can't open this git resource.",
			"{0} (index) ↔ {1}",
			"{0} - Changes on index",
			"{0} ← {1}",
			"{0} - Renamed - Changes on index",
			"{0} (HEAD) ↔ {1}",
			"{0} - Changes on working tree",
			"{0} (merge) ↔ {1}",
			"{0} - Merge changes",
			"You seem to have git {0} installed. Code works best with git >=2.0.0.",
			"Download",
			"Don't show again",
			"Please configure your git user name and e-mail.",
			"Git {0}",
			"You should first resolve the unmerged changes before committing your changes.",
			"Show Output",
			"Cancel",
			"There was an issue running a git operation. Please review the output or use a console to check the state of your repository.",
			"{0} (index)",
			"{0} - Changes on index",
			"{0} ({1})",
			"{0} - Changes on {1}",
			"Can't open this git resource."
		],
		"vs/workbench/parts/git/browser/views/changes/changesViewer": [
			"Staged Changes",
			"Changes",
			"Merge Changes",
			"This file is located outside the current workspace.",
			"M",
			"M",
			"A",
			"D",
			"D",
			"R",
			"C",
			"U",
			"!",
			"D",
			"A",
			"D",
			"A",
			"D",
			"A",
			"M",
			"Modified in index",
			"Modified",
			"Added to index",
			"Deleted in index",
			"Deleted",
			"Renamed in index",
			"Copied in index",
			"Untracked",
			"Ignored",
			"Conflict: both deleted",
			"Conflict: added by us",
			"Conflict: deleted by them",
			"Conflict: added by them",
			"Conflict: deleted by us",
			"Conflict: both added",
			"Conflict: both modified",
			"File {0} in folder {1} has status: {2}, Git",
			"Staged Changes, Git",
			"Changes, Git",
			"Merge, Git"
		],
		"vs/workbench/parts/debug/electron-browser/debugViewer": [
			"Process",
			"Paused",
			"Running",
			"Thread",
			"Paused on {0}",
			"Running",
			"Load More Stack Frames",
			"Thread {0}, callstack, debug",
			"Stack Frame {0} line {1} {2}, callstack, debug",
			"Type new variable value",
			"Scope {0}, variables, debug",
			"{0} value {1}, variables, debug",
			"Expression to watch",
			"Type watch expression",
			"{0} value {1}, watch, debug",
			"{0} value {1}, watch, debug",
			"Function to break on",
			"Type function breakpoint",
			"Function breakpoints are not supported by this debug type",
			"Breakpoint line {0} {1}, breakpoints, debug",
			"Function breakpoint {0}, breakpoints, debug",
			"Exception breakpoint {0}, breakpoints, debug"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"not available",
			"Please start a debug session to evaluate"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"More Info",
			"Unable to launch debug adapter from '{0}'.",
			"Unable to launch debug adapter.",
			"{0}. Stopping the debug adapter.",
			"Debug adapter process has terminated unexpectedly"
		],
		"vs/workbench/parts/debug/electron-browser/debugConfigurationManager": [
			"Contributes debug adapters.",
			"Unique identifier for this debug adapter.",
			"Display name for this debug adapter.",
			"Path to the debug adapter program. Path is either absolute or relative to the extension folder.",
			"Optional arguments to pass to the adapter.",
			"Optional runtime in case the program attribute is not an executable but requires a runtime.",
			"Optional runtime arguments.",
			"Mapping from interactive variables (e.g ${action.pickProcess}) in `launch.json` to a command.",
			"Configurations for generating the initial 'launch.json'.",
			"List of languages for which the debug extension could be considered the \"default debugger\".",
			"If specified VS Code will call this command to determine the executable path of the debug adapter and the arguments to pass.",
			"If specified VS Code will call this command for the \"debug\" or \"run\" actions targeted for this extension.",
			"Snippets for adding new configurations in 'launch.json'.",
			"JSON schema configurations for validating 'launch.json'.",
			"Windows specific settings.",
			"Runtime used for Windows.",
			"OS X specific settings.",
			"Runtime used for OSX.",
			"Linux specific settings.",
			"Runtime used for Linux.",
			"Contributes breakpoints.",
			"Allow breakpoints for this language.",
			"Launch",
			"Version of this file format.",
			"List of configurations. Add new configurations or edit existing ones by using IntelliSense.",
			"List of compounds. Each compound references multiple configurations which will get launched together.",
			"Name of compound. Appears in the launch configuration drop down menu.",
			"Names of configurations that will be started as part of this compound.",
			"Debug adapter 'type' can not be omitted and must be of type 'string'.",
			"Unable to create 'launch.json' file inside the '.vscode' folder ({0}).",
			"Select Environment"
		],
		"vs/workbench/electron-browser/extensionHost": [
			"Extension host did not start in 10 seconds, it might be stopped on the first line and needs a debugger to continue.",
			"Extension host did not start in 10 seconds, that might be a problem.",
			"Error from the extension host: {0}",
			"Extension host terminated unexpectedly. Please reload the window to recover."
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"Debug Hover"
		],
		"vs/workbench/parts/debug/browser/breakpointWidget": [
			"Break when expression evaluates to true. 'Enter' to accept, 'esc' to cancel.",
			"The program will only stop here if this condition is true. Press Enter to accept or Escape to cancel.",
			"Break when hit count condition is met. 'Enter' to accept, 'esc' to cancel.",
			"The program will only stop here if the hit count is met. Press Enter to accept or Escape to cancel.",
			"Expression",
			"Hit Count"
		],
		"vs/workbench/parts/debug/browser/exceptionWidget": [
			"Exception widget border color.",
			"Exception widget background color.",
			"Exception has occurred: {0}",
			"Exception has occurred."
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"Copy Value",
			"Copy",
			"Copy Call Stack"
		],
		"vs/workbench/parts/html/browser/webview": [
			"Developer: Webview Tools"
		],
		"vs/workbench/parts/extensions/browser/dependenciesViewer": [
			"Error",
			"Unknown Dependency:"
		],
		"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page": [
			"Visual Studio Code",
			"Editing evolved",
			"Start",
			"New file",
			"Open folder...",
			"Open folder...",
			"Clone Git repository...",
			"Clone Git repository...",
			"Recent",
			"No recent folders",
			"Help",
			"Product documentation",
			"Introductory videos",
			"GitHub repository",
			"Stack Overflow",
			"Show welcome page on startup",
			"Quick links",
			"Interactive playground",
			"Try essential editor features out in a short walkthrough",
			"Interface overview",
			"Get a visual overlay highlighting the major components of the UI",
			"Color theme",
			"Make the editor and your code look the way you love",
			"Keyboard shortcuts reference",
			"A printable PDF with the most common keyboard shortcuts",
			"Find and run all commands",
			"Rapidly access and search commands from the control panel ({0})",
			"Configure settings",
			"Unlock the full power of VS Code by tweaking the settings",
			"Install keyboard shortcuts",
			"Install the keyboard shortcuts of {0}, {1}, {2} and {3}",
			"Vim",
			"Vim",
			"Vim (current)",
			"Sublime",
			"Sublime",
			"Sublime (current)",
			"Atom",
			"Atom",
			"Atom (current)",
			"others"
		],
		"vs/workbench/parts/explorers/browser/treeExplorerActions": [
			"Refresh"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper": [
			"Do you allow {0} (defined as a workspace setting) to be launched in the terminal?",
			"Allow",
			"Disallow"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"Cannot copy terminal selection when terminal does not have focus",
			"The terminal process terminated with exit code: {0}",
			"Press any key to close the terminal",
			"The terminal process command `{0}{1}` failed to launch (exit code: {2})"
		],
		"vs/workbench/browser/parts/activitybar/activitybarActions": [
			"Remove from Activity Bar",
			"Keep in Activity Bar",
			"{0} ({1})",
			"Additional Views",
			"{0} ({1})",
			"Manage Extension",
			"Toggle View Pinned"
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"Text Editor",
			"Text Diff Editor",
			"Binary Diff Editor",
			"Side by Side Editor",
			"Show Editors in First Group",
			"Show Editors in Second Group",
			"Show Editors in Third Group",
			"Show All Opened Editors",
			"View"
		],
		"vs/workbench/browser/parts/compositePart": [
			"{0} actions",
			"{0} ({1})"
		],
		"vs/workbench/browser/parts/panel/panelActions": [
			"{0} ({1})",
			"Close Panel",
			"Toggle Panel",
			"Focus into Panel",
			"Toggle Maximized Panel",
			"Maximize Panel Size",
			"Restore Panel Size",
			"View",
			"View",
			"View",
			"View"
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"Quick picker. Type to narrow down results.",
			"Quick Picker"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"({0}) was pressed. Waiting for second key of chord...",
			"The key combination ({0}, {1}) is not a command."
		],
		"vs/workbench/services/files/node/fileService": [
			"Invalid file resource ({0})",
			"File is directory ({0})",
			"File seems to be binary and cannot be opened as text",
			"File not found ({0})",
			"Unable to move/copy. File would replace folder it is contained in.",
			"Folders cannot be copied into the workspace. Please select individual files to copy them.",
			"File is Read Only"
		],
		"vs/workbench/services/textfile/common/textFileService": [
			"Files could not be backed up (Error: {0}), try saving your files to exit."
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon": [
			"Additional command options",
			"The current working directory of the executed program or script. If omitted Code's current workspace root is used.",
			"The environment of the executed program or shell. If omitted the parent process' environment is used.",
			"The shell to be used.",
			"The shell arguments.",
			"The command to be executed. Can be an external program or a shell command.",
			"Arguments passed to the command when this task is invoked.",
			"The task's name",
			"The command to be executed. Can be an external program or a shell command.",
			"Arguments passed to the command when this task is invoked.",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration",
			"Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.",
			"Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Deprecated. Use isBackground instead.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Whether the executed task is kept alive and is running in the background.",
			"Whether the user is prompted when VS Code closes with a running task.",
			"Maps this task to Code's default build command.",
			"Maps this task to Code's default test command.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The command to be executed. Can be an external program or a shell command.",
			"Additional arguments passed to the command.",
			"Controls whether the output of the running task is shown or not. If omitted 'always' is used.",
			"Deprecated. Use isBackground instead.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Whether the executed task is kept alive and is running in the background.",
			"Whether the user is prompted when VS Code closes with a running background task.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Controls whether the task name is added as an argument to the command. Default is false.",
			"Prefix to indicate that an argument is task.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The task configurations. Usually these are enrichments of task already defined in the external task runner."
		],
		"vs/workbench/parts/tasks/browser/quickOpen": [
			"{0}, tasks"
		],
		"vs/editor/common/services/modeServiceImpl": [
			"Contributes language declarations.",
			"ID of the language.",
			"Name aliases for the language.",
			"File extensions associated to the language.",
			"File names associated to the language.",
			"File name glob patterns associated to the language.",
			"Mime types associated to the language.",
			"A regular expression matching the first line of a file of the language.",
			"A relative path to a file containing configuration options for the language."
		],
		"vs/workbench/parts/feedback/electron-browser/feedback": [
			"Tweet Feedback",
			"Tweet us your feedback.",
			"Your installation is corrupt.",
			"Please specify this if you submit a bug.",
			"How was your experience?",
			"Happy",
			"Sad",
			"Other ways to contact us",
			"Submit a bug",
			"Request a missing feature",
			"Tell us why?",
			"Comments",
			"Tweet",
			"character left",
			"characters left",
			"Sending",
			"Thanks",
			"Try again"
		],
		"vs/platform/extensions/common/abstractExtensionService": [
			"Extension `{1}` failed to activate. Reason: unknown dependency `{0}`.",
			"Extension `{1}` failed to activate. Reason: dependency `{0}` failed to activate.",
			"Extension `{0}` failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).",
			"Activating extension `{0}` failed: {1}."
		],
		"vs/workbench/node/extensionPoints": [
			"Failed to parse {0}: {1}.",
			"Cannot read file {0}: {1}.",
			"Failed to parse {0} or {1}: {2}.",
			"Cannot read file {0}: {1}.",
			"Couldn't find message for key {0}."
		],
		"vs/workbench/electron-browser/window": [
			"Undo",
			"Redo",
			"Cut",
			"Copy",
			"Paste",
			"Select All",
			"Are you sure you want to open {0} folders?",
			"&&Open",
			"Developer",
			"File"
		],
		"vs/workbench/services/message/electron-browser/messageService": [
			"&&Yes",
			"Cancel"
		],
		"vs/editor/common/services/modelServiceImpl": [
			"[{0}]\n{1}",
			"[{0}] {1}"
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"OK",
			"Don't show again",
			"More information",
			"Your {0} installation appears to be corrupt. Please reinstall."
		],
		"vs/workbench/electron-browser/crashReporter": [
			"Telemetry",
			"Enable crash reports to be sent to Microsoft.\nThis option requires restart to take effect."
		],
		"vs/platform/extensionManagement/common/extensionEnablementService": [
			"No workspace."
		],
		"vs/editor/electron-browser/textMate/TMSyntax": [
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected string in `contributes.{0}.scopeName`. Provided value: {1}",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}",
			"Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"No TM Grammar registered for this language."
		],
		"vs/workbench/services/themes/electron-browser/workbenchThemeService": [
			"Contributes textmate color themes.",
			"Id of the icon theme as used in the user settings.",
			"Label of the color theme as shown in the UI.",
			"Base theme defining the colors around the editor: 'vs' is the light color theme, 'vs-dark' is the dark color theme. 'hc-black' is the dark high contrast theme.",
			"Path of the tmTheme file. The path is relative to the extension folder and is typically './themes/themeFile.tmTheme'.",
			"Contributes file icon themes.",
			"Id of the icon theme as used in the user settings.",
			"Label of the icon theme as shown in the UI.",
			"Path of the icon theme definition file. The path is relative to the extension folder and is typically './icons/awesome-icon-theme.json'.",
			"New theme settings have been added to the user settings. Backup available at {0}.",
			"Unable to load {0}: {1}",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected string in `contributes.{0}.id`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"Unable to load {0}",
			"Problems parsing file icons file: {0}",
			"Specifies the color theme used in the workbench.",
			"Theme is unknown or not installed.",
			"Specifies the icon theme used in the workbench.",
			"No file icons",
			"File icon theme is unknown or not installed.",
			"Overrides colors from the currently selected color theme.",
			"The setting is no longer experimental and has been renamed to 'workbench.colorCustomizations'",
			"Use 'workbench.colorCustomizations' instead"
		],
		"vs/workbench/services/mode/common/workbenchModeService": [
			"Invalid `contributes.{0}`. Expected an array.",
			"Empty value for `contributes.{0}`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`"
		],
		"vs/editor/common/controller/cursor": [
			"Unexpected exception while executing command."
		],
		"vs/editor/contrib/referenceSearch/browser/referencesWidget": [
			"Failed to resolve file.",
			"{0} references",
			"{0} reference",
			"no preview available",
			"References",
			"No results",
			"References",
			"Background color of the peek view title area.",
			"Color of the peek view title.",
			"Color of the peek view title info.",
			"Color of the peek view borders and arrow.",
			"Background color of the peek view result list.",
			"Foreground color for line nodes in the peek view result list.",
			"Foreground color for file nodes in the peek view result list.",
			"Background color of the selected entry in the peek view result list.",
			"Foreground color of the selected entry in the peek view result list.",
			"Background color of the peek view editor.",
			"Match highlight color in the peek view result list.",
			"Match highlight color in the peek view editor."
		],
		"vs/platform/keybinding/common/keybindingLabels": [
			"Ctrl",
			"Shift",
			"Alt",
			"Windows",
			"Control",
			"Shift",
			"Alt",
			"Command",
			"Control",
			"Shift",
			"Alt",
			"Windows"
		],
		"vs/base/browser/ui/resourceviewer/resourceViewer": [
			"{0}x{1} {2}",
			"The image is too large to display in the editor. ",
			"Open image",
			" using external program?",
			"The file will not be displayed in the editor because it is either binary, very large or uses an unsupported text encoding.",
			"{0}B",
			"{0}KB",
			"{0}MB",
			"{0}GB",
			"{0}TB"
		],
		"vs/workbench/parts/debug/common/debugSource": [
			"Unknown Source"
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debuggee",
			"Integrated terminal not available"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"Debug adapter executable '{0}' does not exist.",
			"Cannot determine executable for debug adapter '{0}'.",
			"Type of configuration.",
			"The debug type is not recoginzed. Make sure that you have a corresponding debug extension installed and that it is enabled.",
			"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".",
			"Name of configuration; appears in the launch configuration drop down menu.",
			"Request type of configuration. Can be \"launch\" or \"attach\".",
			"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode",
			"Task to run before debug session starts.",
			"Controls behavior of the internal debug console.",
			"Windows specific launch configuration attributes.",
			"OS X specific launch configuration attributes.",
			"Linux specific launch configuration attributes.",
			"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."
		],
		"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler": [
			"Cmd + click to follow link",
			"Ctrl + click to follow link"
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"Tab actions"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"Close",
			"Close Others",
			"Close to the Right",
			"Close All",
			"Keep Open",
			"Show Opened Editors",
			"Editor actions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"{0} ↔ {1}"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"Ln {0}, Col {1} ({2} selected)",
			"Ln {0}, Col {1}",
			"{0} selections ({1} characters selected)",
			"{0} selections",
			"LF",
			"CRLF",
			"Tab moves focus",
			"Disable Accessibility Mode",
			"Go to Line",
			"Indentation",
			"Select Encoding",
			"Select End of Line Sequence",
			"Select Language Mode",
			"File Information",
			"Spaces: {0}",
			"Tab Size: {0}",
			"Search Marketplace Extensions for '{0}'...",
			"Change Language Mode",
			"No text editor active at this time",
			"({0}) - Configured Language",
			"({0})",
			"languages (identifier)",
			"Configure '{0}' language based settings...",
			"Configure File Association for '{0}'...",
			"Auto Detect",
			"Select Language Mode",
			"Current Association",
			"Select Language Mode to Associate with '{0}'",
			"Change Indentation",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"change view",
			"convert file",
			"Select Action",
			"Change End of Line Sequence",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"Select End of Line Sequence",
			"Change File Encoding",
			"No text editor active at this time",
			"No file active at this time",
			"Save with Encoding",
			"Reopen with Encoding",
			"Save with Encoding",
			"Reopen with Encoding",
			"Select Action",
			"Guessed from content",
			"Select File Encoding to Reopen File",
			"Select File Encoding to Save with"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"Move the active editor by tabs or groups",
			"Active editor move argument",
			"Argument Properties:\n\t\t\t\t\t\t* 'to': String value providing where to move.\n\t\t\t\t\t\t* 'by': String value providing the unit for move. By tab or by group.\n\t\t\t\t\t\t* 'value': Number value providing how many positions or an absolute position to move.\n\t\t\t\t\t",
			"Command **{0}** has been removed. You can use **{1}** instead",
			"Configure Keyboard Shortcuts"
		],
		"vs/editor/node/textMate/TMGrammars": [
			"Contributes textmate tokenizers.",
			"Language identifier for which this syntax is contributed to.",
			"Textmate scope name used by the tmLanguage file.",
			"Path of the tmLanguage file. The path is relative to the extension folder and typically starts with './syntaxes/'.",
			"A map of scope name to language id if this grammar contains embedded languages.",
			"List of language scope names to which this grammar is injected to."
		],
		"vs/workbench/services/themes/electron-browser/colorThemeData": [
			"Problems parsing JSON theme file: {0}",
			"Problem parsing color theme file: {0}. Property 'colors' is not of type 'object'.",
			"Problem parsing color theme file: {0}. Property 'tokenColors' should be either an array specifying colors or a path to a text mate theme file",
			"Problem parsing tmTheme file: {0}. 'settings' is not array.",
			"Problems parsing tmTheme file: {0}",
			"Problems loading tmTheme file {0}: {1}"
		],
		"vs/workbench/services/themes/common/colorThemeSchema": [
			"Colors for syntax highlighting",
			"Description of the rule",
			"Font style of the rule: One or a combination of 'italic', 'bold' and 'underline'",
			"Path to a tmTheme file (relative to the current file)"
		],
		"vs/workbench/services/themes/common/fileIconThemeSchema": [
			"The folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for folder will be shown.",
			"The folder icon for collapsed folders, and if folderExpanded is not set, also for expanded folders.",
			"The default file icon, shown for all files that don't match any extension, filename or language id.",
			"Associates folder names to icons. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates folder names to icons for expanded folders. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file extensions to icons. The object key is is the file extension name. The extension name is the last segment of a file name after the last dot (not including the dot). Extensions are compared case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file names to icons. The object key is is the full file name, but not including any path segments. File name can include dots and a possible file extension. No patterns or wildcards are allowed. File name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates languages to icons. The object key is the language id as defined in the language contribution point.",
			"The ID of the icon definition for the association.",
			"Fonts that are used in the icon definitions.",
			"The ID of the font.",
			"The locations of the font.",
			"The font path, relative to the current icon theme file.",
			"The format of the font.",
			"The weight of the font.",
			"The style of the font.",
			"The default size of the font.",
			"Description of all icons that can be used when associating files to icons.",
			"An icon definition. The object key is the ID of the definition.",
			"When using a SVG or PNG: The path to the image. The path is relative to the icon set file.",
			"When using a glyph font: The character in the font to use.",
			"When using a glyph font: The color to use.",
			"When using a font: The font size in percentage to the text font. If not set, defaults to the size in the font definition.",
			"When using a font: The id of the font. If not set, defaults to the first font definition.",
			"Optional associations for file icons in light color themes.",
			"Optional associations for file icons in high contrast color themes."
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/workbench/api/node/extHostTreeView": [
			"No TreeExplorerNodeProvider with id '{0}' registered.",
			"TreeExplorerNodeProvider '{0}' failed to provide root node.",
			"No TreeExplorerNodeProvider with id '{0}' registered."
		],
		"vs/editor/contrib/indentation/common/indentation": [
			"Convert Indentation to Spaces",
			"Convert Indentation to Tabs",
			"Configured Tab Size",
			"Select Tab Size for Current File",
			"Indent Using Tabs",
			"Indent Using Spaces",
			"Detect Indentation from Content",
			"Reindent Lines"
		],
		"vs/workbench/services/message/browser/messageList": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}",
			"Error",
			"Warn",
			"Info",
			"Close"
		],
		"vs/editor/common/model/textModelWithTokens": [
			"The mode has failed while tokenizing the input."
		]
	},
	"bundles": {
		"vs/workbench/electron-browser/workbench.main": [
			"vs/base/browser/ui/actionbar/actionbar",
			"vs/base/browser/ui/aria/aria",
			"vs/base/browser/ui/findinput/findInput",
			"vs/base/browser/ui/findinput/findInputCheckboxes",
			"vs/base/browser/ui/inputbox/inputBox",
			"vs/base/browser/ui/resourceviewer/resourceViewer",
			"vs/base/browser/ui/toolbar/toolbar",
			"vs/base/common/errorMessage",
			"vs/base/common/json",
			"vs/base/common/processes",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/base/parts/quickopen/browser/quickOpenModel",
			"vs/base/parts/quickopen/browser/quickOpenWidget",
			"vs/base/parts/tree/browser/treeDefaults",
			"vs/editor/browser/widget/diffEditorWidget",
			"vs/editor/common/config/commonEditorConfig",
			"vs/editor/common/config/defaultConfig",
			"vs/editor/common/controller/cursor",
			"vs/editor/common/model/textModelWithTokens",
			"vs/editor/common/modes/modesRegistry",
			"vs/editor/common/services/bulkEdit",
			"vs/editor/common/services/modeServiceImpl",
			"vs/editor/common/services/modelServiceImpl",
			"vs/editor/common/view/editorColorRegistry",
			"vs/editor/contrib/accessibility/browser/accessibility",
			"vs/editor/contrib/bracketMatching/common/bracketMatching",
			"vs/editor/contrib/caretOperations/common/caretOperations",
			"vs/editor/contrib/caretOperations/common/transpose",
			"vs/editor/contrib/clipboard/browser/clipboard",
			"vs/editor/contrib/comment/common/comment",
			"vs/editor/contrib/contextmenu/browser/contextmenu",
			"vs/editor/contrib/find/browser/findWidget",
			"vs/editor/contrib/find/common/findController",
			"vs/editor/contrib/folding/browser/folding",
			"vs/editor/contrib/format/browser/formatActions",
			"vs/editor/contrib/goToDeclaration/browser/goToDeclaration",
			"vs/editor/contrib/gotoError/browser/gotoError",
			"vs/editor/contrib/hover/browser/hover",
			"vs/editor/contrib/hover/browser/modesContentHover",
			"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace",
			"vs/editor/contrib/indentation/common/indentation",
			"vs/editor/contrib/inspectTMScopes/electron-browser/inspectTMScopes",
			"vs/editor/contrib/linesOperations/common/linesOperations",
			"vs/editor/contrib/links/browser/links",
			"vs/editor/contrib/multicursor/common/multicursor",
			"vs/editor/contrib/parameterHints/browser/parameterHints",
			"vs/editor/contrib/parameterHints/browser/parameterHintsWidget",
			"vs/editor/contrib/quickFix/browser/quickFixCommands",
			"vs/editor/contrib/referenceSearch/browser/referenceSearch",
			"vs/editor/contrib/referenceSearch/browser/referencesController",
			"vs/editor/contrib/referenceSearch/browser/referencesModel",
			"vs/editor/contrib/referenceSearch/browser/referencesWidget",
			"vs/editor/contrib/rename/browser/rename",
			"vs/editor/contrib/rename/browser/renameInputField",
			"vs/editor/contrib/smartSelect/common/smartSelect",
			"vs/editor/contrib/suggest/browser/suggestController",
			"vs/editor/contrib/suggest/browser/suggestWidget",
			"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode",
			"vs/editor/contrib/wordHighlighter/common/wordHighlighter",
			"vs/editor/contrib/zoneWidget/browser/peekViewWidget",
			"vs/editor/electron-browser/textMate/TMSyntax",
			"vs/editor/node/languageConfigurationExtensionPoint",
			"vs/editor/node/textMate/TMGrammars",
			"vs/platform/actions/browser/menuItemActionItem",
			"vs/platform/actions/electron-browser/menusExtensionPoint",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionEnablementService",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensions/common/abstractExtensionService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/integrity/node/integrityServiceImpl",
			"vs/platform/jsonschemas/common/jsonValidationExtensionPoint",
			"vs/platform/keybinding/common/abstractKeybindingService",
			"vs/platform/keybinding/common/keybindingLabels",
			"vs/platform/markers/common/problemMatcher",
			"vs/platform/message/common/message",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/platform/theme/common/colorRegistry",
			"vs/workbench/api/node/mainThreadExtensionService",
			"vs/workbench/api/node/mainThreadMessageService",
			"vs/workbench/browser/actions/configureLocale",
			"vs/workbench/browser/actions/fileActions",
			"vs/workbench/browser/actions/toggleActivityBarVisibility",
			"vs/workbench/browser/actions/toggleEditorLayout",
			"vs/workbench/browser/actions/toggleSidebarPosition",
			"vs/workbench/browser/actions/toggleSidebarVisibility",
			"vs/workbench/browser/actions/toggleStatusbarVisibility",
			"vs/workbench/browser/actions/toggleZenMode",
			"vs/workbench/browser/parts/activitybar/activitybarActions",
			"vs/workbench/browser/parts/activitybar/activitybarPart",
			"vs/workbench/browser/parts/compositePart",
			"vs/workbench/browser/parts/editor/binaryDiffEditor",
			"vs/workbench/browser/parts/editor/binaryEditor",
			"vs/workbench/browser/parts/editor/editor.contribution",
			"vs/workbench/browser/parts/editor/editorActions",
			"vs/workbench/browser/parts/editor/editorCommands",
			"vs/workbench/browser/parts/editor/editorPart",
			"vs/workbench/browser/parts/editor/editorPicker",
			"vs/workbench/browser/parts/editor/editorStatus",
			"vs/workbench/browser/parts/editor/tabsTitleControl",
			"vs/workbench/browser/parts/editor/textDiffEditor",
			"vs/workbench/browser/parts/editor/textEditor",
			"vs/workbench/browser/parts/editor/textResourceEditor",
			"vs/workbench/browser/parts/editor/titleControl",
			"vs/workbench/browser/parts/panel/panelActions",
			"vs/workbench/browser/parts/panel/panelPart",
			"vs/workbench/browser/parts/quickopen/quickOpenController",
			"vs/workbench/browser/parts/quickopen/quickopen.contribution",
			"vs/workbench/browser/parts/sidebar/sidebarPart",
			"vs/workbench/browser/parts/statusbar/statusbarPart",
			"vs/workbench/browser/parts/titlebar/titlebarPart",
			"vs/workbench/browser/quickopen",
			"vs/workbench/browser/viewlet",
			"vs/workbench/common/theme",
			"vs/workbench/electron-browser/actions",
			"vs/workbench/electron-browser/commands",
			"vs/workbench/electron-browser/crashReporter",
			"vs/workbench/electron-browser/extensionHost",
			"vs/workbench/electron-browser/main",
			"vs/workbench/electron-browser/main.contribution",
			"vs/workbench/electron-browser/shell",
			"vs/workbench/electron-browser/window",
			"vs/workbench/node/extensionPoints",
			"vs/workbench/parts/cli/electron-browser/cli.contribution",
			"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings",
			"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter",
			"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace",
			"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap",
			"vs/workbench/parts/codeEditor/electron-browser/wordWrapMigration",
			"vs/workbench/parts/debug/browser/breakpointWidget",
			"vs/workbench/parts/debug/browser/debugActionItems",
			"vs/workbench/parts/debug/browser/debugActions",
			"vs/workbench/parts/debug/browser/debugActionsWidget",
			"vs/workbench/parts/debug/browser/debugContentProvider",
			"vs/workbench/parts/debug/browser/debugEditorActions",
			"vs/workbench/parts/debug/browser/debugEditorModelManager",
			"vs/workbench/parts/debug/browser/debugQuickOpen",
			"vs/workbench/parts/debug/browser/exceptionWidget",
			"vs/workbench/parts/debug/common/debugModel",
			"vs/workbench/parts/debug/common/debugSource",
			"vs/workbench/parts/debug/electron-browser/debug.contribution",
			"vs/workbench/parts/debug/electron-browser/debugConfigurationManager",
			"vs/workbench/parts/debug/electron-browser/debugEditorContribution",
			"vs/workbench/parts/debug/electron-browser/debugHover",
			"vs/workbench/parts/debug/electron-browser/debugService",
			"vs/workbench/parts/debug/electron-browser/debugViewer",
			"vs/workbench/parts/debug/electron-browser/debugViews",
			"vs/workbench/parts/debug/electron-browser/electronDebugActions",
			"vs/workbench/parts/debug/electron-browser/rawDebugSession",
			"vs/workbench/parts/debug/electron-browser/repl",
			"vs/workbench/parts/debug/electron-browser/replViewer",
			"vs/workbench/parts/debug/electron-browser/statusbarColorProvider",
			"vs/workbench/parts/debug/electron-browser/terminalSupport",
			"vs/workbench/parts/debug/node/debugAdapter",
			"vs/workbench/parts/emmet/browser/actions/showEmmetCommands",
			"vs/workbench/parts/emmet/node/actions/balance",
			"vs/workbench/parts/emmet/node/actions/editPoints",
			"vs/workbench/parts/emmet/node/actions/evaluateMath",
			"vs/workbench/parts/emmet/node/actions/expandAbbreviation",
			"vs/workbench/parts/emmet/node/actions/incrementDecrement",
			"vs/workbench/parts/emmet/node/actions/matchingPair",
			"vs/workbench/parts/emmet/node/actions/mergeLines",
			"vs/workbench/parts/emmet/node/actions/reflectCssValue",
			"vs/workbench/parts/emmet/node/actions/removeTag",
			"vs/workbench/parts/emmet/node/actions/selectItem",
			"vs/workbench/parts/emmet/node/actions/splitJoinTag",
			"vs/workbench/parts/emmet/node/actions/toggleComment",
			"vs/workbench/parts/emmet/node/actions/updateImageSize",
			"vs/workbench/parts/emmet/node/actions/updateTag",
			"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation",
			"vs/workbench/parts/emmet/node/emmet.contribution",
			"vs/workbench/parts/execution/electron-browser/terminal.contribution",
			"vs/workbench/parts/execution/electron-browser/terminalService",
			"vs/workbench/parts/explorers/browser/treeExplorer.contribution",
			"vs/workbench/parts/explorers/browser/treeExplorerActions",
			"vs/workbench/parts/explorers/browser/treeExplorerService",
			"vs/workbench/parts/explorers/browser/views/treeExplorerView",
			"vs/workbench/parts/extensions/browser/dependenciesViewer",
			"vs/workbench/parts/extensions/browser/extensionEditor",
			"vs/workbench/parts/extensions/browser/extensionsActions",
			"vs/workbench/parts/extensions/browser/extensionsQuickOpen",
			"vs/workbench/parts/extensions/common/extensionsFileTemplate",
			"vs/workbench/parts/extensions/common/extensionsInput",
			"vs/workbench/parts/extensions/electron-browser/extensionTipsService",
			"vs/workbench/parts/extensions/electron-browser/extensions.contribution",
			"vs/workbench/parts/extensions/electron-browser/extensionsActions",
			"vs/workbench/parts/extensions/electron-browser/extensionsViewlet",
			"vs/workbench/parts/extensions/electron-browser/keymapExtensions",
			"vs/workbench/parts/extensions/node/extensionsWorkbenchService",
			"vs/workbench/parts/feedback/electron-browser/feedback",
			"vs/workbench/parts/files/browser/editors/binaryFileEditor",
			"vs/workbench/parts/files/browser/editors/textFileEditor",
			"vs/workbench/parts/files/browser/fileActions",
			"vs/workbench/parts/files/browser/fileActions.contribution",
			"vs/workbench/parts/files/browser/fileCommands",
			"vs/workbench/parts/files/browser/files.contribution",
			"vs/workbench/parts/files/browser/saveErrorHandler",
			"vs/workbench/parts/files/browser/views/emptyView",
			"vs/workbench/parts/files/browser/views/explorerView",
			"vs/workbench/parts/files/browser/views/explorerViewer",
			"vs/workbench/parts/files/browser/views/openEditorsView",
			"vs/workbench/parts/files/browser/views/openEditorsViewer",
			"vs/workbench/parts/files/common/dirtyFilesTracker",
			"vs/workbench/parts/files/common/editors/fileEditorInput",
			"vs/workbench/parts/git/browser/gitActions",
			"vs/workbench/parts/git/browser/gitActions.contribution",
			"vs/workbench/parts/git/browser/gitQuickOpen",
			"vs/workbench/parts/git/browser/gitServices",
			"vs/workbench/parts/git/browser/gitWidgets",
			"vs/workbench/parts/git/browser/gitWorkbenchContributions",
			"vs/workbench/parts/git/browser/views/changes/changesView",
			"vs/workbench/parts/git/browser/views/changes/changesViewer",
			"vs/workbench/parts/git/browser/views/disabled/disabledView",
			"vs/workbench/parts/git/browser/views/empty/emptyView",
			"vs/workbench/parts/git/browser/views/gitless/gitlessView",
			"vs/workbench/parts/git/browser/views/huge/hugeView",
			"vs/workbench/parts/git/browser/views/notroot/notrootView",
			"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView",
			"vs/workbench/parts/git/electron-browser/git.contribution",
			"vs/workbench/parts/git/electron-browser/gitActions",
			"vs/workbench/parts/git/node/git.lib",
			"vs/workbench/parts/html/browser/html.contribution",
			"vs/workbench/parts/html/browser/htmlPreviewPart",
			"vs/workbench/parts/html/browser/webview",
			"vs/workbench/parts/markers/common/messages",
			"vs/workbench/parts/markers/electron-browser/markersElectronContributions",
			"vs/workbench/parts/nps/electron-browser/nps.contribution",
			"vs/workbench/parts/output/browser/output.contribution",
			"vs/workbench/parts/output/browser/outputActions",
			"vs/workbench/parts/output/browser/outputPanel",
			"vs/workbench/parts/output/common/output",
			"vs/workbench/parts/performance/electron-browser/performance.contribution",
			"vs/workbench/parts/preferences/browser/keybindingWidgets",
			"vs/workbench/parts/preferences/browser/keybindingsEditor",
			"vs/workbench/parts/preferences/browser/keybindingsEditorContribution",
			"vs/workbench/parts/preferences/browser/preferences.contribution",
			"vs/workbench/parts/preferences/browser/preferencesActions",
			"vs/workbench/parts/preferences/browser/preferencesEditor",
			"vs/workbench/parts/preferences/browser/preferencesRenderers",
			"vs/workbench/parts/preferences/browser/preferencesService",
			"vs/workbench/parts/preferences/browser/preferencesWidgets",
			"vs/workbench/parts/preferences/common/keybindingsEditorModel",
			"vs/workbench/parts/preferences/common/preferencesModels",
			"vs/workbench/parts/quickopen/browser/commandsHandler",
			"vs/workbench/parts/quickopen/browser/gotoLineHandler",
			"vs/workbench/parts/quickopen/browser/gotoSymbolHandler",
			"vs/workbench/parts/quickopen/browser/helpHandler",
			"vs/workbench/parts/quickopen/browser/quickopen.contribution",
			"vs/workbench/parts/quickopen/browser/viewPickerHandler",
			"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution",
			"vs/workbench/parts/scm/electron-browser/scm.contribution",
			"vs/workbench/parts/scm/electron-browser/scmActivity",
			"vs/workbench/parts/scm/electron-browser/scmMenus",
			"vs/workbench/parts/scm/electron-browser/scmViewlet",
			"vs/workbench/parts/search/browser/openAnythingHandler",
			"vs/workbench/parts/search/browser/openFileHandler",
			"vs/workbench/parts/search/browser/openSymbolHandler",
			"vs/workbench/parts/search/browser/patternInputWidget",
			"vs/workbench/parts/search/browser/replaceService",
			"vs/workbench/parts/search/browser/search.contribution",
			"vs/workbench/parts/search/browser/searchActions",
			"vs/workbench/parts/search/browser/searchResultsView",
			"vs/workbench/parts/search/browser/searchViewlet",
			"vs/workbench/parts/search/browser/searchWidget",
			"vs/workbench/parts/snippets/electron-browser/TMSnippets",
			"vs/workbench/parts/snippets/electron-browser/insertSnippet",
			"vs/workbench/parts/snippets/electron-browser/snippets.contribution",
			"vs/workbench/parts/snippets/electron-browser/snippetsService",
			"vs/workbench/parts/snippets/electron-browser/tabCompletion",
			"vs/workbench/parts/tasks/browser/quickOpen",
			"vs/workbench/parts/tasks/browser/restartQuickOpen",
			"vs/workbench/parts/tasks/browser/taskQuickOpen",
			"vs/workbench/parts/tasks/browser/terminateQuickOpen",
			"vs/workbench/parts/tasks/common/taskConfiguration",
			"vs/workbench/parts/tasks/common/taskTemplates",
			"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon",
			"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1",
			"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2",
			"vs/workbench/parts/tasks/electron-browser/task.contribution",
			"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem",
			"vs/workbench/parts/tasks/node/processRunnerDetector",
			"vs/workbench/parts/tasks/node/processTaskSystem",
			"vs/workbench/parts/terminal/electron-browser/terminal.contribution",
			"vs/workbench/parts/terminal/electron-browser/terminalActions",
			"vs/workbench/parts/terminal/electron-browser/terminalColorRegistry",
			"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper",
			"vs/workbench/parts/terminal/electron-browser/terminalInstance",
			"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler",
			"vs/workbench/parts/terminal/electron-browser/terminalPanel",
			"vs/workbench/parts/terminal/electron-browser/terminalService",
			"vs/workbench/parts/themes/electron-browser/themes.contribution",
			"vs/workbench/parts/trust/electron-browser/unsupportedWorkspaceSettings.contribution",
			"vs/workbench/parts/update/electron-browser/releaseNotesInput",
			"vs/workbench/parts/update/electron-browser/update",
			"vs/workbench/parts/update/electron-browser/update.contribution",
			"vs/workbench/parts/watermark/electron-browser/watermark",
			"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay",
			"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page",
			"vs/workbench/parts/welcome/page/electron-browser/welcomePage",
			"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughActions",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart",
			"vs/workbench/services/configuration/node/configurationEditingService",
			"vs/workbench/services/editor/browser/editorService",
			"vs/workbench/services/files/electron-browser/fileService",
			"vs/workbench/services/files/node/fileService",
			"vs/workbench/services/keybinding/common/keybindingEditing",
			"vs/workbench/services/keybinding/electron-browser/keybindingService",
			"vs/workbench/services/message/browser/messageList",
			"vs/workbench/services/message/electron-browser/messageService",
			"vs/workbench/services/mode/common/workbenchModeService",
			"vs/workbench/services/progress/browser/progressService2",
			"vs/workbench/services/textfile/common/textFileEditorModel",
			"vs/workbench/services/textfile/common/textFileService",
			"vs/workbench/services/textfile/electron-browser/textFileService",
			"vs/workbench/services/themes/common/colorThemeSchema",
			"vs/workbench/services/themes/common/fileIconThemeSchema",
			"vs/workbench/services/themes/electron-browser/colorThemeData",
			"vs/workbench/services/themes/electron-browser/workbenchThemeService"
		],
		"vs/workbench/parts/git/node/gitApp": [
			"vs/base/common/processes",
			"vs/base/node/processes",
			"vs/workbench/parts/git/node/git.lib"
		],
		"vs/workbench/parts/debug/node/telemetryApp": [
			"vs/base/common/processes",
			"vs/base/node/processes"
		],
		"vs/workbench/services/search/node/searchApp": [
			"vs/base/common/errorMessage",
			"vs/base/common/processes",
			"vs/base/node/processes"
		],
		"vs/workbench/services/search/node/worker/searchWorkerApp": [
			"vs/base/common/processes",
			"vs/base/node/processes"
		],
		"vs/workbench/services/files/node/watcher/unix/watcherApp": [
			"vs/base/common/processes",
			"vs/base/node/processes"
		],
		"vs/workbench/node/extensionHostProcess": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensions/common/abstractExtensionService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/markers/common/problemMatcher",
			"vs/workbench/api/node/extHostDiagnostics",
			"vs/workbench/api/node/extHostTreeView",
			"vs/workbench/node/extensionHostMain"
		],
		"vs/code/electron-main/main": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/code/electron-main/menus",
			"vs/code/electron-main/window",
			"vs/code/electron-main/windows",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/environment/node/argv",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/workbench/parts/git/electron-main/askpassService"
		],
		"vs/code/node/cli": [
			"vs/platform/environment/node/argv"
		],
		"vs/code/node/cliProcessMain": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/code/node/cliProcessMain",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/message/common/message",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService"
		],
		"vs/code/electron-browser/sharedProcessMain": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/message/common/message",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService"
		]
	}
}